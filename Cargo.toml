[workspace]
resolver = "2"
members  = ["crates/*", "tasks/*", "editor/vscode/server"]

[workspace.package]
authors      = ["Boshen <boshenc@gmail.com>", "Oxc contributors"]
categories   = ["development-tools", "web-programming", "compilers"]
description  = "Oxc is a JavaScript / TypeScript tooling suite."
edition      = "2021"
homepage     = "https://github.com/web-infra-dev/oxc"
keywords     = ["JavaScript", "TypeScript", "parser", "linter", "minifier"]
license      = "MIT"
repository   = "https://github.com/web-infra-dev/oxc"
rust-version = "1.60"

[workspace.dependencies]
# publish = true
oxc             = { version = "0.1.0", path = "crates/oxc" }
oxc_allocator   = { version = "0.1.0", path = "crates/oxc_allocator" }
oxc_ast         = { version = "0.1.0", path = "crates/oxc_ast" }
oxc_ast_lower   = { version = "0.1.0", path = "crates/oxc_ast_lower" }
oxc_diagnostics = { version = "0.1.0", path = "crates/oxc_diagnostics" }
oxc_formatter   = { version = "0.1.0", path = "crates/oxc_formatter" }
oxc_hir         = { version = "0.1.0", path = "crates/oxc_hir" }
oxc_index       = { version = "0.1.0", path = "crates/oxc_index" }
oxc_minifier    = { version = "0.1.0", path = "crates/oxc_minifier" }
oxc_parser      = { version = "0.1.0", path = "crates/oxc_parser" }
oxc_semantic    = { version = "0.1.0", path = "crates/oxc_semantic" }
oxc_span        = { version = "0.1.0", path = "crates/oxc_span" }
oxc_syntax      = { version = "0.1.0", path = "crates/oxc_syntax" }

# publish = false
oxc_macros         = { path = "crates/oxc_macros" }
oxc_linter         = { path = "crates/oxc_linter" }
oxc_type_synthesis = { path = "crates/oxc_type_synthesis" }
oxc_resolver       = { path = "crates/oxc_resolver" }
oxc_query          = { path = "crates/oxc_query" }

oxc_tasks_common = { path = "tasks/common" }
oxc_vscode       = { path = "editor/vscode/server" }

bitflags          = { version = "2.3.3" }
bumpalo           = { version = "3.13.0" }
clap              = { version = "4.3.19" }
compact_str       = { version = "0.7.1" }
convert_case      = { version = "0.6.0" }
criterion         = { version = "0.5.1", default-features = false }
crossbeam-channel = { version = "0.5.8" }
dashmap           = { version = "5.5.0" }
env_logger        = { version = "0.10.0" }
flate2            = { version = "1.0.26" }
futures           = { version = "0.3.28" }
ignore            = { version = "0.4.20" }
itertools         = { version = "0.11.0" }
jemallocator      = { version = "0.5.0" }
lazy_static       = { version = "1.4.0" }
miette            = { version = "5.10.0" }
mimalloc          = { version = "0.1.37" }
nodejs-resolver   = { version = "0.0.88" }
num-bigint        = { version = "0.4.3" }
num-traits        = { version = "0.2.16" }
phf               = { version = "0.11" }
pico-args         = { version = "0.5.0" }
proc-macro2       = { version = "1.0.66" }
project-root      = { version = "0.2.2" }
quote             = { version = "1.0.32" }
rayon             = { version = "1.7.0" }
regex             = { version = "1.9.1" }
rustc-hash        = { version = "1.1.0", default-features = false, features = ["std"] }
ryu-js            = { version = "0.2.2" }
ropey             = { version = "1.6.0" }
serde             = { version = "1.0.175" }
serde_json        = { version = "1.0.103" }
syn               = { version = "=1" }
thiserror         = { version = "1.0.44" }
tokio             = { version = "1" }
tower-lsp         = { version = "0.19.0", features = ["proposed"] }
unicode-id-start  = { version = "1.1.0" }
ureq              = { version = "2.7.1", default-features = false, features = ["tls"] }
url               = { version = "2.4.0" }
walkdir           = { version = "2.3.3" }
indexmap          = { version = "2.0.0" }
index_vec         = { version = "0.1.3" }
static_assertions = { version = "1.1.0" }
stacker           = { version = "0.1.15" }

[profile.release.package.oxc_wasm]
opt-level = 'z'

[profile.release]
# Configurations explicitly listed here for clarity.
# Using the best options for performance.
opt-level     = 3
lto           = "fat"
codegen-units = 1
strip         = "symbols"
debug         = false
panic         = "abort"   # Let it crash and force ourselves to write safe Rust.

# Use the `--profile release-debug` flag to show symbols in release mode.
# e.g. `cargo build --profile release-debug`
[profile.release-debug]
inherits = "release"
strip    = false
debug    = true
