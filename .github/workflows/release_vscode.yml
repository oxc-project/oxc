name: Release VSCode

permissions: {}

on:
  push:
    branches:
      - main
    paths:
      - editors/vscode/package.json # Please only commit this file, so we don't need to wait for all the other CI jobs to finish.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ env.version }}
      version_changed: ${{ steps.version.outputs.changed }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Check vscode version changes
        uses: EndBug/version-check@5102328418c0130d66ca712d755c303e93368ce2 # v2.1.7
        id: version
        with:
          diff-search: true
          file-name: editors/vscode/package.json

      - name: Set version name
        if: steps.version.outputs.changed == 'true'
        env:
          VERSION_NUMBER: ${{ steps.version.outputs.version }}
          VERSION_TYPE: ${{ steps.version.outputs.version_type }}
        run: |
          echo "Version change found! New version: ${VERSION_NUMBER} (${VERSION_TYPE})"
          echo "version=${VERSION_NUMBER}" >> $GITHUB_ENV

  build:
    needs: check
    if: needs.check.outputs.version_changed == 'true'
    env:
      version: ${{ needs.check.outputs.version }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64
    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - name: Build JS
        working-directory: editors/vscode
        run: |
          pnpm run preinstall
          pnpm run compile

      - name: Install cross
        uses: taiki-e/install-action@c5b1b6f479c32f356cc6f4ba672a47f63853b13b # v2.62.38
        with:
          tool: cross

      - name: Rust Cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      # Please do not set a cache for release builds; they are evicted before they can be re-used, yet they consume significant cache storage before eviction.

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Build with cross
        run: cross build -p oxc_language_server --release --target=${{ matrix.target }}

      - name: Copy binary
        if: runner.os == 'Windows'
        run: |
          mkdir -p editors/vscode/target/release
          # .vscodeignore uses `!target/release/oxc_language_server.exe` to package the binary
          cp target/${{ matrix.target }}/release/oxc_language_server.exe editors/vscode/target/release/oxc_language_server.exe

      - name: Copy binary
        if: runner.os != 'Windows'
        run: |
          mkdir -p editors/vscode/target/release/
          # .vscodeignore uses `!target/release/oxc_language_server` to package the binary
          cp target/${{ matrix.target }}/release/oxc_language_server editors/vscode/target/release/oxc_language_server

      - name: Package Extension
        working-directory: editors/vscode
        run: |
          ls ./target/release
          pnpm exec vsce package -o "../../oxc_language_server-${{ matrix.code-target }}.vsix" --target ${{ matrix.code-target }}

      - name: Upload VSCode extension artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          if-no-files-found: error
          name: packages-${{ matrix.code-target }}
          path: ./oxc_language_server-${{ matrix.code-target }}.vsix

  publish-vsce:
    name: Publish to Microsoft Marketplace
    runs-on: ubuntu-latest
    needs: build
    environment: marketplace
    permissions:
      contents: write
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Download extension artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          merge-multiple: true
          path: editors/vscode

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - name: Publish to Microsoft Marketplace
        working-directory: editors/vscode
        run: pnpm exec vsce publish --packagePath oxc_language_server-*.vsix
        env:
          VSCE_PAT: ${{ secrets.VSCE_PERSONAL_ACCESS_TOKEN }}

  # A different job so we can retry if the other publish fails.
  publish-ovsx:
    name: Publish to Open VSX Registry
    runs-on: ubuntu-latest
    needs: build
    environment: marketplace
    permissions:
      contents: write
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Download extension artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          merge-multiple: true
          path: editors/vscode

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - name: Publish to Open VSX Registry
        working-directory: editors/vscode
        run: pnpm exec ovsx publish --packagePath oxc_language_server-*.vsix
        env:
          OVSX_PAT: ${{ secrets.OPEN_VSX_TOKEN }}
