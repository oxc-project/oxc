name: CI

permissions: {}

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.ref_name != 'main' }}

jobs:
  test-ubuntu:
    name: Test Linux
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm
      - run: cargo ck
      - run: cargo test --workspace --all-features --exclude website
      - run: cargo test -p website # Run separately to avoid feature unification problems with `oxlint`
      - run: git diff --exit-code # Must commit everything

  test-ubuntu-aarch64:
    if: ${{ github.ref_name == 'main' }}
    name: Test Linux ARM64
    runs-on: ubuntu-24.04-arm
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm-aarch64
      - run: cargo ck
      - run: cargo test --workspace --all-features --exclude website
      - run: cargo test -p website # Run separately to avoid feature unification problems with `oxlint`
      - run: git diff --exit-code # Must commit everything

  test-mac: # Separate job to save a job on PRs
    if: ${{ github.ref_name == 'main' }}
    name: Test Mac
    runs-on: macos-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: warm
      - run: cargo ck
      - run: cargo test --workspace --all-features --exclude website
      - run: cargo test -p website # Run separately to avoid feature unification problems with `oxlint`
      - run: git diff --exit-code # Must commit everything

  test-windows:
    if: ${{ github.ref_name == 'main' }}
    name: Test Windows
    runs-on: windows-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      # Unsung heroes of the internet, who led me here to speed up Windows' slowness:
      # https://github.com/actions/cache/issues/752#issuecomment-1847036770
      # https://github.com/astral-sh/uv/blob/502e04200d52de30d3159894833b3db4f0d6644d/.github/workflows/ci.yml#L158
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: samypr100/setup-dev-drive@750bec535eb7e4833d6a4c86c5738751f9887575 # v3.4.2
        with:
          workspace-copy: true
          drive-size: 8GB
          drive-format: NTFS
          env-mapping: |
            CARGO_HOME,{{ DEV_DRIVE }}/.cargo
            RUSTUP_HOME,{{ DEV_DRIVE }}/.rustup

      - name: Install Rust
        working-directory: ${{ env.DEV_DRIVE_WORKSPACE }}
        shell: bash
        run: |
          # This `awk` command will find the value of our Minimum Supported Rust Version and store it as `MSRV`.
          # NOTE: this will fail if there are any other items named `rust-version`. We assume there is only one in our `Cargo.toml`.
          MSRV=$(awk -F'=' '/rust-version/ {gsub(/[" ]/, "", $2); printf "%s", ($2 + "")}' Cargo.toml)
          # Set profile to minimal and channel to our Minimum Supported Rust Version.
          # Running our tests on this channel ensures that our code uses APIs that are supported in our `MSRV`.
          sed -i -e 's/profile = "default"/profile = "minimal"/g' -e "s/channel = .*/channel = \"$MSRV\"/g" rust-toolchain.toml
          rustup set profile minimal
          rustup show
          git restore .

      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
        with:
          workspaces: ${{ env.DEV_DRIVE_WORKSPACE }}
          save-if: ${{ github.ref_name == 'main' }}
          shared-key: windows-latest

      - name: Run tests
        # No need for `cargo ck` because it's already checked in linux
        # Run `website` tests separately to avoid feature unification problems with `oxlint`
        run: |
          cargo test --workspace --all-features --exclude website
          cargo test -p website
        working-directory: ${{ env.DEV_DRIVE_WORKSPACE }}
        shell: bash

  test-big-endian:
    if: ${{ github.ref_name == 'main' }}
    name: Test big-endian # s390x-unknown-linux-gnu is a big-endian
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: s390x-unknown-linux-gnu
          tools: cross
      - run: cross --version
      # `--lib --bins --tests` to skip doctests which are very slow to run via `cross`.
      # https://github.com/cross-rs/cross/issues/1703
      # Exclude NAPI crates because of linker errors.
      - run: cross test --workspace --lib --bins --tests --all-features --exclude website --exclude oxc_minify_napi --exclude oxc_parser_napi --exclude oxc_playground_napi --exclude oxc_transform_napi --target s390x-unknown-linux-gnu
      # Run separately to avoid feature unification problems with `oxlint`
      - run: cross test -p website --target s390x-unknown-linux-gnu

  typos:
    name: Spell Check
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: crate-ci/typos@85f62a8a84f939ae994ab3763f01a0296d61a7ee # v1.36.2
        with:
          files: .

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4
      - uses: oxc-project/setup-rust@d286d43bc1f606abbd98096666ff8be68c8d5f57 # v1.0.2
        with:
          save-cache: ${{ github.ref_name == 'main' }}
          cache-key: clippy
          components: clippy rust-docs
      - run: cargo lint -- -D warnings
      - run: cargo lint --profile dev-no-debug-assertions -- -D warnings
      - run: RUSTDOCFLAGS='-D warnings' cargo doc --no-deps --document-private-items
      - run: node --run lint
