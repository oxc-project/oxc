name: Release Oxlint

permissions: {}

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - npm/oxlint/package.json # Please only commit this file, so we don't need to wait for all the other CI jobs to finish.

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check.outputs.version_changed }}
      version: ${{ steps.check.outputs.version }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1
      - uses: ./.github/actions/check-version
        id: check
        with:
          file-name: npm/oxlint/package.json
          file-url: https://unpkg.com/oxlint@latest/package.json

  build:
    needs: check
    if: needs.check.outputs.version_changed == 'true'
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
            build-oxlint-args: ""

          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
            build-oxlint-args: ""

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64-gnu
            build-oxlint-args: --use-napi-cross

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64-gnu
            build-oxlint-args: --use-napi-cross

          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            code-target: linux-x64-musl
            build-oxlint-args: -x

          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            code-target: linux-arm64-musl
            build-oxlint-args: -x

          - os: macos-latest
            target: x86_64-apple-darwin
            code-target: darwin-x64
            build-oxlint-args: ""

          - os: macos-latest
            target: aarch64-apple-darwin
            code-target: darwin-arm64
            build-oxlint-args: ""

    name: Package ${{ matrix.code-target }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      OXC_VERSION: ${{ needs.check.outputs.version }}
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Install cross
        uses: taiki-e/install-action@c5b1b6f479c32f356cc6f4ba672a47f63853b13b # v2.62.38
        with:
          tool: cross

      - name: Rust Cache
        uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1 # v2.8.1
      # Please do not set a cache for release builds; they are evicted before they can be re-used, yet they consume significant cache storage before eviction.

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - uses: goto-bus-stop/setup-zig@abea47f85e598557f500fa1fd2ab7464fcb39406 # v2.2.1
        if: ${{ contains(matrix.target, 'musl') }}
        with:
          version: 0.13.0

      - name: Build oxlint
        working-directory: apps/oxlint
        run: pnpm run build-napi-release --target ${{ matrix.target }} ${{ matrix.build-oxlint-args }}
        shell: bash
        env:
          TARGET_CC: clang # for mimalloc

      - name: Build language server
        shell: bash
        env:
          TARGET_CC: clang # for mimalloc
        run: cross build --release -p oxc_language_server --bin oxc_language_server --target=${{ matrix.target }}

      # The binaries are zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
      - name: Archive Binaries
        if: runner.os == 'Windows'
        # Windows `.node` files have `-msvc` postfix e.g. `oxlint.win32-x64-msvc.node`. Remove the postfix.
        run: |
          OXLINT_BIN_SRC_NAME=oxlint.${{ matrix.code-target }}-msvc.node
          OXLINT_BIN_NAME=oxlint.${{ matrix.code-target }}.node
          mv apps/oxlint/src-js/$OXLINT_BIN_SRC_NAME $OXLINT_BIN_NAME
          7z a oxlint-${{ matrix.code-target }}.zip $OXLINT_BIN_NAME

          OXLS_BIN_NAME=oxc_language_server-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/oxc_language_server.exe $OXLS_BIN_NAME.exe
          7z a $OXLS_BIN_NAME.zip $OXLS_BIN_NAME.exe

      # The binaries are zipped to fix permission loss https://github.com/actions/upload-artifact#permission-loss
      - name: Archive Binaries
        if: runner.os != 'Windows'
        run: |
          OXLINT_BIN_NAME=oxlint.${{ matrix.code-target }}.node
          mv apps/oxlint/src-js/$OXLINT_BIN_NAME .
          tar czf oxlint-${{ matrix.code-target }}.tar.gz $OXLINT_BIN_NAME

          OXLS_BIN_NAME=oxc_language_server-${{ matrix.code-target }}
          mv target/${{ matrix.target }}/release/oxc_language_server $OXLS_BIN_NAME
          tar czf $OXLS_BIN_NAME.tar.gz $OXLS_BIN_NAME

      - name: Upload Binary
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          if-no-files-found: error
          name: binaries-${{ matrix.code-target }}
          path: |
            *.zip
            *.tar.gz

  publish:
    name: Publish
    needs: [check, build]
    runs-on: ubuntu-latest
    permissions:
      contents: write # for softprops/action-gh-release@v1.3.1
      id-token: write # for `pnpm publish --provenance`
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # for changelog
          persist-credentials: false

      - uses: oxc-project/setup-rust@1ff88fdaffd6ae35c0fb32ccc159340b37d0beac # v1.0.7
        with:
          restore-cache: false
          tools: cargo-release-oxc

      - name: Run
        id: run
        run: |
          mkdir -p target
          cargo release-oxc changelog --release oxlint
          {
            echo 'CHANGELOG<<EOF'
            cat ./target/OXC_CHANGELOG
            echo EOF
          } >> $GITHUB_OUTPUT

      - uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          merge-multiple: true

      - name: Unzip
        uses: montudor/action-zip@0852c26906e00f8a315c704958823928d8018b28 # v1.0.0
        with:
          args: unzip -qq *.zip -d .

      - name: Untar
        run: ls *.gz | xargs -i tar xf {}

      - uses: oxc-project/setup-node@fdbf0dfd334c4e6d56ceeb77d91c76339c2a0885 # v1.0.4

      - name: Generate oxlint JS build
        working-directory: apps/oxlint
        run: pnpm run build-js

      - name: Generate npm packages
        run: |
          node npm/oxlint/scripts/generate-packages.js
          cat npm/oxlint/package.json
          for package in npm/oxlint*; do cat $package/package.json ; echo ; done

      - run: npm install -g npm@latest # For trusted publishing support

      - name: Publish npm packages as latest
        # NOTE: The trailing slash on $package/ changes it to publishing the directory
        run: |
          for package in npm/oxlint*
          do
            pnpm publish $package/ --provenance --access public --no-git-checks
            echo '----'
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          body: ${{ steps.run.outputs.CHANGELOG }}
          draft: false
          name: oxlint v${{ needs.check.outputs.version }}
          tag_name: oxlint_v${{ needs.check.outputs.version }}
          target_commitish: ${{ github.sha }}

      - name: wait 3 minutes for smoke test
        run: sleep 180s

  smoke:
    needs: [check, publish]
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: ubuntu-latest
            container: node:18-alpine # musl
          - os: macos-latest
    name: Smoke Test ${{ matrix.os }} ${{ matrix.container }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - name: Test
        env:
          OXLINT_VERSION: ${{ needs.check.outputs.version}}
        run: |
          touch test.js
          ldd --version || true
          npx oxlint@${OXLINT_VERSION} ./test.js

  bump:
    needs: [check, publish, smoke]
    name: Bump oxlint dependents
    runs-on: ubuntu-latest
    steps:
      - uses: taiki-e/checkout-action@b13d20b7cda4e2f325ef19895128f7ff735c0b3d # v1.3.1

      - name: Bump oxc-project/eslint-plugin-oxlint
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
        with:
          repo: oxc-project/eslint-plugin-oxlint
          workflow: bump_oxlint.yml
          token: ${{ secrets.OXC_BOT_PAT }}
          ref: main
          inputs: '{ "version": "${{ needs.check.outputs.version }}" }'

      - name: Bump oxc-project/oxlint-migrate
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
        with:
          repo: oxc-project/oxlint-migrate
          workflow: bump_oxlint.yml
          token: ${{ secrets.OXC_BOT_PAT }}
          ref: main
          inputs: '{ "version": "${{ needs.check.outputs.version }}" }'

      - name: Bump oxc-project/mirrors-oxlint
        uses: benc-uk/workflow-dispatch@e2e5e9a103e331dad343f381a29e654aea3cf8fc # v1.2.4
        with:
          repo: oxc-project/mirrors-oxlint
          workflow: main.yml
          token: ${{ secrets.OXC_BOT_PAT }}
          ref: main
