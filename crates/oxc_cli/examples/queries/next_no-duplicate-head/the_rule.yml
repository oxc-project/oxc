name: "next:no-duplicate-head:rule"

query: |
  query {
    File {
      import {
        from_path @filter(op: "=", value: ["$nextslashdocument"])

        default_import {
          local_name @tag(name: "default_imported_class_name")
        }
      }

      ast_node {
        ... on ReturnStatementAST {
          ancestor {
            ... on ClassAST {
              extended_class_name @filter(op: "=", value: ["%default_imported_class_name"])
            }
          }

          expression {
            ... on JSXElement {
              child_element @fold @transform(op: "count") @filter(op: ">", value: ["$one"]) {
                opening_element {
                  name @filter(op: "=", value: ["$Head"]) @output
                  # NOTE: Slight bug in that if we find 3 we report 3, not just the 2 error'ed ones
                  span_: span {
                    start @output
                    end @output
                  }
                }
              }
            }
          }
        }
      }
    }
  }

args:
  one: 1
  nextslashdocument: "next/document"
  Head: "Head"

reason: "Do not include multiple instances of `<Head/>`."

tests:
  pass:
    - relative_path:
        - "pages"
        - "_document.tsx"

      code: |
        import Document, { Html, Head, Main, NextScript } from 'next/document'

        class MyDocument extends Document {
          render() {
            return (
              <Html>
                <Head>
                  <meta charSet="utf-8" />
                  <link
                    href="https://fonts.googleapis.com/css2?family=Sarabun:ital,wght@0,400;0,700;1,400;1,700&display=swap"
                    rel="stylesheet"
                  />
                </Head>
              </Html>
            )
          }
        }

        export default MyDocument

  fail:
    - relative_path:
        - "pages"
        - "_document.js"

      code: |
        import Document, { Html, Main, NextScript } from 'next/document'
        import Head from 'next/head'

        class MyDocument extends Document {
          render() {
            return (
              <Html>
                <Head />
                <Head />
                <Head />
              </Html>
            )
          }
        }

        export default MyDocument
    - relative_path:
        - "pages"
        - "_document.page.tsx"

      code: |
        import Document, { Html, Main, NextScript } from 'next/document'
        import Head from 'next/head'

        class MyDocument extends Document {
          render() {
            return (
              <Html>
                <Head>
                  <meta charSet="utf-8" />
                  <link
                    href="https://fonts.googleapis.com/css2?family=Sarabun:ital,wght@0,400;0,700;1,400;1,700&display=swap"
                    rel="stylesheet"
                  />
                </Head>
                <body>
                  <Main />
                  <NextScript />
                </body>
                <Head>
                  <script
                    dangerouslySetInnerHTML={{
                      __html: '',
                    }}
                  />
                </Head>
              </Html>
            )
          }
        }

        export default MyDocument
