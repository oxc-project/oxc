---
source: crates/oxc_semantic/tests/integration/cfg.rs
expression: snapshot
input_file: crates/oxc_semantic/tests/integration/cfg_fixtures/if_stmt_in_for_in.js
---
bb0: {

}

bb1: {

}

bb2: {

}

bb3: {
	statement
	statement
}

bb4: {

}

bb5: {
	iteration <in>
}

bb6: {
	statement
	statement
}

bb7: {
	condition
}

bb8: {
	statement
	statement
	break
}

bb9: {
	unreachable
}

bb10: {
	statement
}

bb11: {
	condition
}

bb12: {
	statement
	statement
	continue
}

bb13: {
	unreachable
}

bb14: {

}

bb15: {
	statement
	statement
}

bb16: {
	statement
}

bb17: {

}

digraph {
    0 [ label = "bb0" shape = box]
    1 [ label = "bb1" shape = box]
    2 [ label = "bb2" shape = box]
    3 [ label = "bb3
ForInStatement
VariableDeclaration" shape = box]
    4 [ label = "bb4" shape = box]
    5 [ label = "bb5
Iteration(IdentifierReference(array) in expr)" shape = box]
    6 [ label = "bb6
BlockStatement
IfStatement" shape = box]
    7 [ label = "bb7
Condition(if cond)" shape = box]
    8 [ label = "bb8
BlockStatement
ExpressionStatement
break" shape = box]
    9 [ label = "bb9
unreachable" shape = box]
    10 [ label = "bb10
IfStatement" shape = box]
    11 [ label = "bb11
Condition(else cond)" shape = box]
    12 [ label = "bb12
BlockStatement
ExpressionStatement
continue" shape = box]
    13 [ label = "bb13
unreachable" shape = box]
    14 [ label = "bb14" shape = box]
    15 [ label = "bb15
ExpressionStatement
ExpressionStatement" shape = box]
    16 [ label = "bb16
ExpressionStatement" shape = box]
    17 [ label = "bb17" shape = box]
    1 -> 0 [ label="Error(Implicit)", style=dashed, color=red]
    3 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    1 -> 3 [ label="NewFunction"]
    4 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    5 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    6 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    7 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    8 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    9 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    8 -> 9 [ label="Unreachable", style="dotted"]
    10 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    11 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    12 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    13 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    12 -> 13 [ label="Unreachable", style="dotted"]
    14 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    10 -> 11 [ label="Normal"]
    13 -> 14 [ label="Normal", style="dotted"]
    11 -> 12 [ label="Jump", color=green]
    10 -> 14 [ label="Normal"]
    15 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    6 -> 7 [ label="Normal"]
    9 -> 15 [ label="Normal", style="dotted"]
    7 -> 8 [ label="Jump", color=green]
    6 -> 10 [ label="Normal"]
    14 -> 15 [ label="Normal"]
    16 -> 2 [ label="Error(Implicit)", style=dashed, color=red]
    3 -> 4 [ label="Normal"]
    4 -> 5 [ label="Normal"]
    5 -> 6 [ label="Jump", color=green]
    15 -> 5 [ label="Backedge", color=grey]
    5 -> 16 [ label="Normal"]
    8 -> 16 [ label="Jump", color=green]
    12 -> 5 [ label="Jump", color=green]
    17 -> 0 [ label="Error(Implicit)", style=dashed, color=red]
    1 -> 17 [ label="Normal"]
}
