---
source: crates/oxc_isolated_declarations/tests/mod.rs
input_file: crates/oxc_isolated_declarations/tests/fixtures/function-parameters.ts
---
==================== .D.TS ====================

export declare function fnDeclGood(p?: T, rParam?: string): void;
export declare function fnDeclGood2(p?: T, rParam?: number): void;
export declare function fooGood([a, b]?: any[]): number;
export declare const fooGood2: ({ a, b }?: object) => number;
export declare function fooGood3({ a, b: [{ c }] }: object): void;
export declare class Foo {
	private good;
}
export declare function fnDeclBad<T>(p: T, rParam: T, r2: T): void;
export declare function fnDeclBad2<T>(p: T, r2: T): void;
export declare function fnDeclBad3<T>(p: T, rParam?: T, r2: T): void;
export declare function fooBad(): number;
export declare const fooBad2: () => number;
export declare class Bar {
	bad(a): void;
}


==================== Errors ====================

  x TS9025: Declaration emit for this parameter requires implicitly adding
  | undefined to it's type. This is not supported with --isolatedDeclarations.
    ,-[22:30]
 21 | // Incorrect
 22 | export function fnDeclBad<T>(p: T = [], rParam: T = "", r2: T): void { }
    :                              ^^^^^^^^^
 23 | export function fnDeclBad2<T>(p: T = [], r2: T): void { }
    `----

  x TS9025: Declaration emit for this parameter requires implicitly adding
  | undefined to it's type. This is not supported with --isolatedDeclarations.
    ,-[22:41]
 21 | // Incorrect
 22 | export function fnDeclBad<T>(p: T = [], rParam: T = "", r2: T): void { }
    :                                         ^^^^^^^^^^^^^^
 23 | export function fnDeclBad2<T>(p: T = [], r2: T): void { }
    `----

  x TS9025: Declaration emit for this parameter requires implicitly adding
  | undefined to it's type. This is not supported with --isolatedDeclarations.
    ,-[23:31]
 22 | export function fnDeclBad<T>(p: T = [], rParam: T = "", r2: T): void { }
 23 | export function fnDeclBad2<T>(p: T = [], r2: T): void { }
    :                               ^^^^^^^^^
 24 | export function fnDeclBad3<T>(p: T = [], rParam?: T, r2: T): void { }
    `----

  x TS9025: Declaration emit for this parameter requires implicitly adding
  | undefined to it's type. This is not supported with --isolatedDeclarations.
    ,-[24:31]
 23 | export function fnDeclBad2<T>(p: T = [], r2: T): void { }
 24 | export function fnDeclBad3<T>(p: T = [], rParam?: T, r2: T): void { }
    :                               ^^^^^^^^^
 25 | 
    `----

  x TS9011: Parameter must have an explicit type annotation with
  | --isolatedDeclarations.
    ,-[26:24]
 25 | 
 26 | export function fooBad([a, b] = [1, 2]): number {
    :                        ^^^^^^^^^^^^^^^
 27 |   return 2;
    `----

  x TS9011: Parameter must have an explicit type annotation with
  | --isolatedDeclarations.
    ,-[30:25]
 29 | 
 30 | export const fooBad2 = ({a, b} = { a: 1, b: 2 }): number => {
    :                         ^^^^^^^^^^^^^^^^^^^^^^^
 31 |   return 2;
    `----

  x TS9011: Parameter must have an explicit type annotation with
  | --isolatedDeclarations.
    ,-[35:14]
 34 | export class Bar {
 35 |   public bad(a): void {}
    :              ^
 36 | }
    `----
