---
source: crates/oxc_linter/src/tester.rs
expression: prefer_reflect_apply
---
  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo.apply(null, [42]);
   · ─────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo.bar.apply(null, [42]);
   · ─────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ Function.prototype.apply.call(foo, null, [42]);
   · ──────────────────────────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ Function.prototype.apply.call(foo.bar, null, [42]);
   · ──────────────────────────────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo.apply(null, arguments);
   · ──────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ Function.prototype.apply.call(foo, null, arguments);
   · ───────────────────────────────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo.apply(this, [42]);
   · ─────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ Function.prototype.apply.call(foo, this, [42]);
   · ──────────────────────────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo.apply(this, arguments);
   · ──────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ Function.prototype.apply.call(foo, this, arguments);
   · ───────────────────────────────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.

  ⚠ eslint-plugin-unicorn(prefer-reflect-apply): Prefer Reflect.apply() over Function#apply()
   ╭─[prefer_reflect_apply.tsx:1:1]
 1 │ foo["apply"](null, [42]);
   · ────────────────────────
   ╰────
  help: Reflect.apply() is less verbose and easier to understand.
