---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ 'Hello, ${name}'
   ·         ───────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ "Hello, ${name}"
   ·         ───────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:2]
 1 │ '${greeting}, ${name}'
   ·  ───────────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ 'Hello, ${index + 1}'
   ·         ────────────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ 'Hello, ${name + " foo"}'
   ·         ────────────────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ 'Hello, ${name || "foo"}'
   ·         ────────────────
   ╰────
  help: Did you mean to use a template string literal?

  ⚠ eslint(no-template-curly-in-string): Template placeholders will not interpolate in regular strings
   ╭─[no_template_curly_in_string.tsx:1:9]
 1 │ 'Hello, ${{foo: "bar"}.foo}'
   ·         ───────────────────
   ╰────
  help: Did you mean to use a template string literal?
