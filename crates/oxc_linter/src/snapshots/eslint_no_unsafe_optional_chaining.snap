---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:2]
 1 │ (obj?.foo && obj?.baz).bar
   ·  ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:14]
 1 │ (obj?.foo && obj?.baz).bar
   ·              ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:7]
 1 │ with (obj?.foo) {};
   ·       ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:37]
 1 │ async function foo() { with ( await obj?.foo) {}; }
   ·                                     ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:8]
 1 │ (foo ? obj?.foo : obj?.bar).bar
   ·        ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:19]
 1 │ (foo ? obj?.foo : obj?.bar).bar
   ·                   ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:15]
 1 │ const a = [...obj?.foo];
   ·               ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:21]
 1 │ const b = [...c, ...obj?.foo];
   ·                     ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:23]
 1 │ const s = [], t = [...obj?.foo];
   ·                       ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError

  ⚠ eslint(no-unsafe-optional-chaining): Unsafe usage of optional chaining
   ╭─[no_unsafe_optional_chaining.tsx:1:23]
 1 │ const c = () => ([...(obj?.foo)]);
   ·                       ────────
   ╰────
  help: If this short-circuits with 'undefined' the evaluation will throw TypeError
