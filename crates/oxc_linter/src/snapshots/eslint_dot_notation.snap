---
source: crates/oxc_linter/src/tester.rs
assertion_line: 357
---
  ⚠ eslint(dot-notation): .true is a syntax error
   ╭─[dot_notation.tsx:1:1]
 1 │ a.true;
   · ──────
   ╰────
  help: Write it using bracket notation ["true"]

  ⚠ eslint(dot-notation): [true] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a['true'];
   · ─────────
   ╰────
  help: Write it as .true

  ⚠ eslint(dot-notation): [time] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a[`time`];
   · ─────────
   ╰────
  help: Write it as .time

  ⚠ eslint(dot-notation): [null] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a[null];
   · ───────
   ╰────
  help: Write it as .null

  ⚠ eslint(dot-notation): [true] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a[true];
   · ───────
   ╰────
  help: Write it as .true

  ⚠ eslint(dot-notation): [false] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a[false];
   · ────────
   ╰────
  help: Write it as .false

  ⚠ eslint(dot-notation): [b] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a['b'];
   · ──────
   ╰────
  help: Write it as .b

  ⚠ eslint(dot-notation): [c] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a.b['c'];
   · ────────
   ╰────
  help: Write it as .c

  ⚠ eslint(dot-notation): [_dangle] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a['_dangle'];
   · ────────────
   ╰────
  help: Write it as ._dangle

  ⚠ eslint(dot-notation): [SHOUT_CASE] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ a['SHOUT_CASE'];
   · ───────────────
   ╰────
  help: Write it as .SHOUT_CASE

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo[ /* comment */ 'bar' ]
   · ──────────────────────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo[ 'bar' /* comment */ ]
   · ──────────────────────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo[    'bar'    ];
   · ──────────────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): .while is a syntax error
   ╭─[dot_notation.tsx:1:1]
 1 │ foo. /* comment */ while
   · ────────────────────────
   ╰────
  help: Write it using bracket notation ["while"]

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo[('bar')]
   · ────────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): [null] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo[(null)]
   · ───────────
   ╰────
  help: Write it as .null

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ (foo)['bar']
   · ────────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): [toString] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 1['toString']
   · ─────────────
   ╰────
  help: Write it as .toString

  ⚠ eslint(dot-notation): [bar] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ foo['bar']instanceof baz
   · ──────────
   ╰────
  help: Write it as .bar

  ⚠ eslint(dot-notation): .if is a syntax error
   ╭─[dot_notation.tsx:1:1]
 1 │ let.if()
   · ──────
   ╰────
  help: Write it using bracket notation ["if"]

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 5['prop']
   · ─────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:2]
 1 │ -5['prop']
   ·  ─────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 01['prop']
   · ──────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 01234567['prop']
   · ────────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 08['prop']
   · ──────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 090['prop']
   · ───────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 018['prop']
   · ───────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 5_000['prop']
   · ─────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 5_000_00['prop']
   · ────────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 5.000_000['prop']
   · ─────────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 0b1010_1010['prop']
   · ───────────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ obj?.['prop']
   · ─────────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): [prop] is better written in dot notation
   ╭─[dot_notation.tsx:1:1]
 1 │ 0?.['prop']
   · ───────────
   ╰────
  help: Write it as .prop

  ⚠ eslint(dot-notation): .true is a syntax error
   ╭─[dot_notation.tsx:1:1]
 1 │ obj?.true
   · ─────────
   ╰────
  help: Write it using bracket notation ["true"]

  × Unexpected token
   ╭─[dot_notation.tsx:1:4]
 1 │ let?.true
   ·    ──
   ╰────
