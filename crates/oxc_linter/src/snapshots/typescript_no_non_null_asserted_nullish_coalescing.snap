---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo! ?? bar;
   · ────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo! ?? bar!;
   · ────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo.bazz! ?? bar;
   · ─────────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo.bazz! ?? bar!;
   · ─────────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo!.bazz! ?? bar;
   · ──────────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo!.bazz! ?? bar!;
   · ──────────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo()! ?? bar;
   · ──────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:1:1]
 1 │ foo()! ?? bar!;
   · ──────
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:3:10]
 2 │             let x!: string;
 3 │             x! ?? '';
   ·             ──
 4 │                   
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:4:10]
 3 │             x = foo();
 4 │             x! ?? '';
   ·             ──
 5 │                   
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:4:10]
 3 │             x = foo();
 4 │             x! ?? '';
   ·             ──
 5 │             x = foo();
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:3:10]
 2 │             let x = foo();
 3 │             x! ?? '';
   ·             ──
 4 │                   
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:4:19]
 3 │               let x!: string;
 4 │               return x! ?? '';
   ·                      ──
 5 │             }
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:4:19]
 3 │             function foo() {
 4 │               return x! ?? '';
   ·                      ──
 5 │             }
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.

  ⚠ typescript-eslint(no-non-null-asserted-nullish-coalescing): 'Disallow non-null assertions in the left operand of a nullish coalescing operator
   ╭─[no_non_null_asserted_nullish_coalescing.tsx:3:10]
 2 │             let x = foo();
 3 │             x  ! ?? '';
   ·             ────
 4 │                   
   ╰────
  help: The nullish coalescing operator is designed to handle undefined and null - using a non-null assertion is not needed.
