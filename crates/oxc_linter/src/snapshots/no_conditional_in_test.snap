---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:21]
 2 │                     it('foo', () => {
 3 │                       expect(bar ? foo : baz).toBe(boo);
   ·                              ───────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:23]
 3 │                       const foo = function (bar) {
 4 │                         return foo ? bar : null;
   ·                                ────────────────
 5 │                       };
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:26]
 2 │                     it('foo', () => {
 3 │                       const foo = bar ? foo : baz;
   ·                                   ───────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:26]
 2 │                     it('foo', () => {
 3 │                       const foo = bar ? foo : baz;
   ·                                   ───────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:26]
 2 │                     it('foo', () => {
 3 │                       const foo = bar ? foo : baz;
   ·                                   ───────────────
 4 │                       const anotherFoo = anotherBar ? anotherFoo : anotherBaz;
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:33]
 3 │                       const foo = bar ? foo : baz;
 4 │                       const anotherFoo = anotherBar ? anotherFoo : anotherBaz;
   ·                                          ────────────────────────────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:4:16]
  3 │                           const values = something.map(thing => {
  4 │ ╭─▶                         switch (thing.isFoo) {
  5 │ │                             case true:
  6 │ │                               return thing.foo;
  7 │ │                             default:
  8 │ │                               return thing.bar;
  9 │ ╰─▶                         }
 10 │                           });
    ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                         it('foo', () => {
 3 │ ╭─▶                       switch (true) {
 4 │ │                           case true: {}
 5 │ ╰─▶                       }
 6 │                         })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it.skip('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it.only('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     xit('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     fit('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test.skip('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test.only('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     xtest('foo', () => {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     xtest('foo', function () {
 3 │                       switch('bar') {}
   ·                       ────────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:5:16]
 4 │             
 5 │                         switch('bar') {}
   ·                         ────────────────
 6 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:16]
 3 │                       it('bar', () => {
 4 │                         switch('bar') {}
   ·                         ────────────────
 5 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:7:16]
 6 │                       it('baz', () => {
 7 │                         switch('qux') {}
   ·                         ────────────────
 8 │                         switch('quux') {}
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:8:16]
 7 │                         switch('qux') {}
 8 │                         switch('quux') {}
   ·                         ─────────────────
 9 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       switch ('bar') {}
   ·                       ─────────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:6:20]
  5 │                               const values = something.map((thing) => {
  6 │ ╭─▶                             switch (thing.isFoo) {
  7 │ │                                 case true:
  8 │ │                                   return thing.foo;
  9 │ │                                 default:
 10 │ │                                   return thing.bar;
 11 │ ╰─▶                             }
 12 │                               });
    ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:14:18]
 13 │                 
 14 │ ╭─▶                           switch('invalid') {
 15 │ │                               case true:
 16 │ │                                 expect(values).toStrictEqual(['foo']);
 17 │ ╰─▶                           }
 18 │                             });
    ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:16]
 3 │                           const foo = function(bar) {
 4 │ ╭─▶                         if (bar) {
 5 │ │                             return 1;
 6 │ │                           } else {
 7 │ │                             return 2;
 8 │ ╰─▶                         }
 9 │                           };
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:16]
 3 │                           function foo(bar) {
 4 │ ╭─▶                         if (bar) {
 5 │ │                             return 1;
 6 │ │                           } else {
 7 │ │                             return 2;
 8 │ ╰─▶                         }
 9 │                           };
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it.skip('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it.skip('foo', function () {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     it.only('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     xit('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     fit('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test.skip('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     test.only('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                     xtest('foo', () => {
 3 │                       if ('bar') {}
   ·                       ─────────────
 4 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:16]
 3 │                       it('bar', () => {
 4 │                         if ('bar') {}
   ·                         ─────────────
 5 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:16]
 3 │                       it('bar', () => {
 4 │                         if ('bar') {}
   ·                         ─────────────
 5 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:7:16]
 6 │                       it('baz', () => {
 7 │                         if ('qux') {}
   ·                         ─────────────
 8 │                         if ('quux') {}
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:8:16]
 7 │                         if ('qux') {}
 8 │                         if ('quux') {}
   ·                         ──────────────
 9 │                       })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       if ('bar') {}
   ·                       ─────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       if ('bar') {}
   ·                       ─────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       if ('bar') {}
   ·                       ─────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       if ('bar') {}
   ·                       ─────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:4:14]
 3 │                       callExpression()
 4 │                       if ('bar') {}
   ·                       ─────────────
 5 │                     })
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:6:20]
  5 │                               const values = something.map((thing) => {
  6 │ ╭─▶                             if (thing.isFoo) {
  7 │ │                                 return thing.foo
  8 │ │                               } else {
  9 │ │                                 return thing.bar;
 10 │ ╰─▶                             }
 11 │                               });
    ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:13:18]
 12 │                 
 13 │ ╭─▶                           if ('invalid') {
 14 │ │                               expect(values).toStrictEqual(['foo']);
 15 │ ╰─▶                           }
 16 │                             });
    ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
   ╭─[no_conditional_in_test.tsx:3:14]
 2 │                         test("shows error", () => {
 3 │ ╭─▶                       if (1 === 2) {
 4 │ │                           expect(true).toBe(false);
 5 │ ╰─▶                       }
 6 │                         });
   ╰────
  help: Avoid having conditionals in tests.

  ⚠ eslint-plugin-vitest(no-conditional-in-test): Disallow conditional logic in tests
    ╭─[no_conditional_in_test.tsx:10:14]
  9 │                           setTimeout(() => console.log("noop"));
 10 │ ╭─▶                       if (1 === 2) {
 11 │ │                           expect(true).toBe(false);
 12 │ ╰─▶                       }
 13 │                         });
    ╰────
  help: Avoid having conditionals in tests.
