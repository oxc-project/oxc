---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = height < 50 ? height : 50;
   ·             ─────────────────────────
   ╰────
  help: Replace `height < 50 ? height : 50` with `Math.min(height, 50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = height <= -50 ? height : -50;
   ·             ────────────────────────────
   ╰────
  help: Replace `height <= -50 ? height : -50` with `Math.min(height, -50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = 150.34 < height ? 150.34 : height;
   ·             ─────────────────────────────────
   ╰────
  help: Replace `150.34 < height ? 150.34 : height` with `Math.min(150.34, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = -2.34 <= height ? -2.34 : height;
   ·             ────────────────────────────────
   ╰────
  help: Replace `-2.34 <= height ? -2.34 : height` with `Math.min(-2.34, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = height > 10e3 ? 10e3 : height;
   ·             ─────────────────────────────
   ╰────
  help: Replace `height > 10e3 ? 10e3 : height` with `Math.min(10e3, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = height >= -10e3 ? -10e3 : height;
   ·             ────────────────────────────────
   ╰────
  help: Replace `height >= -10e3 ? -10e3 : height` with `Math.min(-10e3, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = 50 > height ? height : 50;
   ·             ─────────────────────────
   ╰────
  help: Replace `50 > height ? height : 50` with `Math.min(height, 50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = 50 >= height ? height : 50;
   ·             ──────────────────────────
   ╰────
  help: Replace `50 >= height ? height : 50` with `Math.min(height, 50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:8]
 1 │ return height > 100 ? height : 100;
   ·        ───────────────────────────
   ╰────
  help: Replace `height > 100 ? height : 100` with `Math.max(height, 100)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:8]
 1 │ return height >= 50 ? height : 50;
   ·        ──────────────────────────
   ╰────
  help: Replace `height >= 50 ? height : 50` with `Math.max(height, 50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:14]
 1 │ const foo = (50 > height ? 50 : height) || 0;
   ·              ─────────────────────────
   ╰────
  help: Replace `50 > height ? 50 : height` with `Math.max(50, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:14]
 1 │ const foo = (50 >= height ? 50 : height) || 0;
   ·              ──────────────────────────
   ╰────
  help: Replace `50 >= height ? 50 : height` with `Math.max(50, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:9]
 1 │ return (height < 50 ? 50 : height) || 100;
   ·         ─────────────────────────
   ╰────
  help: Replace `height < 50 ? 50 : height` with `Math.max(50, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:9]
 1 │ return (height <= 50 ? 50 : height) || 200;
   ·         ──────────────────────────
   ╰────
  help: Replace `height <= 50 ? 50 : height` with `Math.max(50, height)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = 50 < height ? height: 50;
   ·             ────────────────────────
   ╰────
  help: Replace `50 < height ? height: 50` with `Math.max(height, 50)`.

  ⚠ eslint-plugin-unicorn(prefer-math-min-max): Prefer `Math.min()` and `Math.max()` over ternaries for simple comparisons.
   ╭─[prefer_math_min_max.tsx:1:13]
 1 │ const foo = 50 <= height ? height: 50;
   ·             ─────────────────────────
   ╰────
  help: Replace `50 <= height ? height: 50` with `Math.max(height, 50)`.
