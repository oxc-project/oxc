---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:1:14]
 1 │ app.get('/', async function (req, res) {})
   ·              ──┬──
   ·                ╰── Async handler is used here
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:1:14]
 1 │ app.get('/', async (req, res) =>  {})
   ·              ──┬──
   ·                ╰── Async handler is used here
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:1:14]
 1 │ app.get('/', async (req, res, next) =>  {})
   ·              ──┬──
   ·                ╰── Async handler is used here
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:1:20]
 1 │ weirdName.get('/', async (req, res) =>  {})
   ·                    ──┬──
   ·                      ╰── Async handler is used here
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:1:20]
 1 │ weirdName.get('/', async (req, res) =>  {})
   ·                    ──┬──
   ·                      ╰── Async handler is used here
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:3:27]
 1 │ 
 2 │             async function foo(req, res) {}
   ·             ──┬──
   ·               ╰── Async handler 'foo' is declared here
 3 │             app.post('/', foo)
   ·                           ─┬─
   ·                            ╰── and is registered here
 4 │             
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:3:27]
 1 │ 
 2 │             const foo = async (req, res) => {}
   ·                         ──┬──
   ·                           ╰── Async handler is declared here
 3 │             app.post('/', foo)
   ·                           ─┬─
   ·                            ╰── and is registered here
 4 │             
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:3:21]
 1 │ 
 2 │             async function middleware(req, res, next) {}
   ·             ──┬──
   ·               ╰── Async handler 'middleware' is declared here
 3 │             app.use(middleware)
   ·                     ─────┬────
   ·                          ╰── and is registered here
 4 │             
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.

  ⚠ oxc(no-async-endpoint-handlers): Express endpoint handlers should not be async.
   ╭─[no_async_endpoint_handlers.tsx:4:27]
 1 │ 
 2 │             async function foo(req, res) {}
   ·             ──┬──
   ·               ╰── Async handler 'foo' is declared here
 3 │             const bar = foo;
 4 │             app.post('/', bar)
   ·                           ─┬─
   ·                            ╰── and is registered here
 5 │             
   ╰────
  help: Express <= 4.x does not handle Promise rejections. Use `new Promise((resolve, reject) => { ... }).catch(next)` instead.
