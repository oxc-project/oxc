---
source: crates/oxc_linter/src/tester.rs
snapshot_kind: text
---
  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:36]
 1 │ doThing().then(function() { return Promise.resolve(4) })
   ·                                    ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:42]
 1 │ doThing().then(null, function() { return Promise.resolve(4) })
   ·                                          ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:37]
 1 │ doThing().catch(function() { return Promise.resolve(4) })
   ·                                     ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:36]
 1 │ doThing().then(function() { return Promise.reject(4) })
   ·                                    ─────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:42]
 1 │ doThing().then(null, function() { return Promise.reject(4) })
   ·                                          ─────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:37]
 1 │ doThing().catch(function() { return Promise.reject(4) })
   ·                                     ─────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:48]
 1 │ doThing().then(function(x) { if (x>1) { return Promise.resolve(4) } else { throw "bad" } })
   ·                                                ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:48]
 1 │ doThing().then(function(x) { if (x>1) { return Promise.reject(4) } })
   ·                                                ─────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:63]
 1 │ doThing().then(null, function() { if (true && false) { return Promise.resolve() } })
   ·                                                               ─────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:46]
 1 │ doThing().catch(function(x) {if (x) { return Promise.resolve(4) } else { return Promise.reject() } })
   ·                                              ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:81]
 1 │ doThing().catch(function(x) {if (x) { return Promise.resolve(4) } else { return Promise.reject() } })
   ·                                                                                 ────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:29]
 3 │                             doThing().then(function() {
 4 │                               return Promise.resolve(4)
   ·                                      ──────────────────
 5 │                             })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:29]
 3 │                             doThing().then(function nm() {
 4 │                               return Promise.resolve(4)
   ·                                      ──────────────────
 5 │                             })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:5:31]
 4 │                               doThing().then(function() {
 5 │                                 return Promise.resolve(4)
   ·                                        ──────────────────
 6 │                               })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:8:31]
 7 │                                 })
 8 │                                 return Promise.resolve(4)
   ·                                        ──────────────────
 9 │                               })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:5:31]
 4 │                               return doThing().then(function() {
 5 │                                 return Promise.resolve(5);
   ·                                        ──────────────────
 6 │                               });
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:29]
 3 │                             doThing().then(function() {
 4 │                               return Promise.resolve(5);
   ·                                      ──────────────────
 5 │                             })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:37]
 1 │ doThing().then((function() { return Promise.resolve(4) }).bind(this))
   ·                                     ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:37]
 1 │ doThing().then((function() { return Promise.resolve(4) }).bind(this).bind(this))
   ·                                     ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:31]
 1 │ doThing().then(() => { return Promise.resolve(4) })
   ·                               ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:4:29]
 3 │                             return p.then(function(val) {
 4 │                               return Promise.resolve(val * 4)
   ·                                      ────────────────────────
 5 │                             })
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Avoid wrapping return values in Promise.resolve
   ╭─[no_return_wrap.tsx:1:22]
 1 │ doThing().then(() => Promise.resolve(4))
   ·                      ──────────────────
   ╰────

  ⚠ eslint-plugin-promise(no-return-wrap): Expected throw instead of Promise.reject
   ╭─[no_return_wrap.tsx:1:22]
 1 │ doThing().then(() => Promise.reject(4))
   ·                      ─────────────────
   ╰────
