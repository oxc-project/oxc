---
source: crates/oxc_linter/src/tester.rs
---
  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:9]
 1 â”‚ if (foo.find(fn)) {}
   Â·         â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:9]
 1 â”‚ if (foo.findLast(fn)) {}
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `findLast` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:11]
 1 â”‚ if (array.find(element => element === "ðŸ¦„")) {}
   Â·           â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:19]
 1 â”‚ const foo = array.find(element => element === "ðŸ¦„") ? bar : baz;
   Â·                   â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over non-zero length check from `.filter(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:7]
 1 â”‚ array.filter(fn).length > 0
   Â·       â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `filter` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over non-zero length check from `.filter(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:7]
 1 â”‚ array.filter(fn).length !== 0
   Â·       â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `filter` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) == null
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) == undefined
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) === undefined
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) != null
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) != undefined
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:5]
 1 â”‚ foo.find(fn) !== undefined
   Â·     â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.

  âš  eslint-plugin-unicorn(prefer-array-some): Prefer `.some(â€¦)` over `.find(â€¦)`or `.findLast(â€¦)`.
   â•­â”€[prefer_array_some.tsx:1:14]
 1 â”‚ a = (( ((foo.find(fn))) == ((null)) )) ? "no" : "yes";
   Â·              â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Replace `find` with `some`.
