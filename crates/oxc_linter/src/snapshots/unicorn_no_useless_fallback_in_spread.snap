---
source: crates/oxc_linter/src/tester.rs
---
  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(foo || {})}
   ·                 ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(foo ?? {})}
   ·                 ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(foo ?? (( {} )))}
   ·                 ────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...((( foo )) ?? (( {} )))}
   ·                 ──────────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(( (( foo )) ?? (( {} )) ))}
   ·                 ──────────────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:14]
 1 │ async ()=> ({...((await foo) || {})})
   ·              ──────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(0 || {})}
   ·                 ────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...((-0) || {})}
   ·                 ───────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(.0 || {})}
   ·                 ─────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(0n || {})}
   ·                 ─────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(false || {})}
   ·                 ────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(null || {})}
   ·                 ───────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(undefined || {})}
   ·                 ────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...((a && b) || {})}
   ·                 ───────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(NaN || {})}
   ·                 ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...("" || {})}
   ·                 ─────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...([] || {})}
   ·                 ─────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...({} || {})}
   ·                 ─────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(foo || {}),}
   ·                 ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...((foo ?? {}) || {})}
   ·                 ──────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...((foo && {}) || {})}
   ·                 ──────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(foo && {} || {})}
   ·                 ────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:22]
 1 │ const object = {...({...(foo || {})})}
   ·                      ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:19]
 1 │ function foo(a = {...(bar || {})}){}
   ·                   ──────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.

  ⚠ eslint-plugin-unicorn(no-useless-fallback-in-spread): Empty fallbacks in spreads are unnecessary
   ╭─[no_useless_fallback_in_spread.tsx:1:17]
 1 │ const object = {...(document.all || {})}
   ·                 ───────────────────────
   ╰────
  help: Spreading falsy values in object literals won't add any unexpected properties, so it's unnecessary to add an empty object as fallback.
