---
source: crates/oxc_linter/src/tester.rs
expression: prefer_array_flat_map
---
  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [[1],[2],[3]].map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [[1],[2],[3]].map(i => [i]).flat(1,)
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map((i) => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map((i) => { return [i]; }).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map(foo).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = foo.map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = { map: () => {} }.map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map(i => i).map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].sort().map(i => [i]).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = (([1,2,3].map(i => [i]))).flat()
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:11]
 1 â”‚ let bar = [1,2,3] . map( x => y ) . flat () // ðŸ¤ª
   Â·           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.

  âš  eslint-plugin-unicorn(prefer-array-flat-map): `Array.flatMap` performs `Array.map` and `Array.flat` in one step.
   â•­â”€[prefer_array_flat_map.tsx:1:13]
 1 â”‚ const bar = [1,2,3].map(i => [i]).flat(1);
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Prefer `.flatMap(â€¦)` over `.map(â€¦).flat()`.
