---
source: crates/oxc_linter/src/tester.rs
assertion_line: 356
snapshot_kind: text
---
  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, foo)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign  ({}, foo)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, { foo: 'bar' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, baz, { foo: 'bar' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, { foo: 'bar', baz: 'foo' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign/** commentðŸ˜€ */({}, { 'ðŸ˜€': 'ðŸ˜€', 'ðŸ˜†': 'ðŸ’ª' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ foo: 'bar' }, baz)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ foo: 'bar' }, cats, dogs, trees, birds)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ foo: 'bar' }, Object.assign({ bar: 'foo' }, baz))
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:31]
 1 â”‚ Object.assign({ foo: 'bar' }, Object.assign({ bar: 'foo' }, baz))
   Â·                               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ foo: 'bar' }, Object.assign({ bar: 'foo' }, Object.assign({}, { superNested: 'butwhy' })))
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:31]
 1 â”‚ Object.assign({ foo: 'bar' }, Object.assign({ bar: 'foo' }, Object.assign({}, { superNested: 'butwhy' })))
   Â·                               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:61]
 1 â”‚ Object.assign({ foo: 'bar' }, Object.assign({ bar: 'foo' }, Object.assign({}, { superNested: 'butwhy' })))
   Â·                                                             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({foo: 'bar', ...bar}, baz)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, { foo, bar, baz })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, { [bar]: 'foo' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ ...bar }, { ...baz })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:9]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         Object.assign({ ...bar }, {
 3 â”‚ â”‚               // this is a bar
 4 â”‚ â”‚               foo: 'bar',
 5 â”‚ â”‚               baz: "cats"
 6 â”‚ â•°â”€â–¶         })
 7 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
    â•­â”€[prefer_object_spread.tsx:2:9]
  1 â”‚     
  2 â”‚ â•­â”€â–¶         Object.assign({
  3 â”‚ â”‚               boo: "lol",
  4 â”‚ â”‚               // I'm a comment
  5 â”‚ â”‚               dog: "cat"
  6 â”‚ â”‚           }, {
  7 â”‚ â”‚               // this is a bar
  8 â”‚ â”‚               foo: 'bar',
  9 â”‚ â”‚               baz: "cats"
 10 â”‚ â•°â”€â–¶         })
 11 â”‚             
    â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  Ã— Unexpected token
   â•­â”€[prefer_object_spread.tsx:3:13]
 2 â”‚         const test = Object.assign({ ...bar }, {
 3 â”‚             <!-- html comment
   Â·             â”€
 4 â”‚             foo: 'bar',
   â•°â”€â”€â”€â”€

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:22]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         const test = Object.assign({ ...bar }, {
 3 â”‚ â”‚               foo: 'bar', // inline comment
 4 â”‚ â”‚               baz: "cats"
 5 â”‚ â•°â”€â–¶         })
 6 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:22]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         const test = Object.assign({ ...bar }, {
 3 â”‚ â”‚               /**
 4 â”‚ â”‚                * foo
 5 â”‚ â”‚               */
 6 â”‚ â”‚               foo: 'bar',
 7 â”‚ â”‚               baz: "cats"
 8 â”‚ â•°â”€â–¶         })
 9 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({})
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ foo: bar })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         const foo = 'bar';
 3 â”‚         Object.assign({ foo: bar })
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         foo = 'bar';
 3 â”‚         Object.assign({ foo: bar })
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:9]
 1 â”‚ let a = Object.assign({})
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:9]
 1 â”‚ let a = Object.assign({}, a)
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:9]
 1 â”‚ let a = Object.assign   ({}, a)
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:9]
 1 â”‚ let a = Object.assign({ a: 1 }, b)
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign(  {},  a,      b,   )
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({}, a ? b : {}, b => c, a = 2)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         const someVar = 'foo';
 3 â”‚         Object.assign({}, a ? b : {}, b => c, a = 2)
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         someVar = 'foo';
 3 â”‚         Object.assign({}, a ? b : {}, b => c, a = 2)
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:8]
 1 â”‚ [1, 2, Object.assign({}, a)]
   Â·        â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:13]
 1 â”‚ const foo = Object.assign({}, a)
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:25]
 1 â”‚ function foo() { return Object.assign({}, a) }
   Â·                         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:5]
 1 â”‚ foo(Object.assign({}, a));
   Â·     â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:30]
 1 â”‚ const x = { foo: 'bar', baz: Object.assign({}, a) }
   Â·                              â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         import Foo from 'foo';
 3 â”‚         Object.assign({ foo: Foo });
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         import Foo from 'foo';
 3 â”‚         Object.assign({}, Foo);
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         const Foo = require('foo');
 3 â”‚         Object.assign({ foo: Foo });
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         import { Something as somethingelse } from 'foo';
 3 â”‚         Object.assign({}, somethingelse);
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         import { foo } from 'foo';
 3 â”‚         Object.assign({ foo: Foo });
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         const Foo = require('foo');
 3 â”‚         Object.assign({}, Foo);
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:25]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         const actions = Object.assign(
 3 â”‚ â”‚               {
 4 â”‚ â”‚                   onChangeInput: this.handleChangeInput,
 5 â”‚ â”‚               },
 6 â”‚ â”‚               this.props.actions
 7 â”‚ â•°â”€â–¶         );
 8 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:25]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         const actions = Object.assign(
 3 â”‚ â”‚               {
 4 â”‚ â”‚                   onChangeInput: this.handleChangeInput, //
 5 â”‚ â”‚               },
 6 â”‚ â”‚               this.props.actions
 7 â”‚ â•°â”€â–¶         );
 8 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:2:25]
 1 â”‚     
 2 â”‚ â•­â”€â–¶         const actions = Object.assign(
 3 â”‚ â”‚               {
 4 â”‚ â”‚                   onChangeInput: this.handleChangeInput //
 5 â”‚ â”‚               },
 6 â”‚ â”‚               this.props.actions
 7 â”‚ â•°â”€â–¶         );
 8 â”‚             
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
    â•­â”€[prefer_object_spread.tsx:2:25]
  1 â”‚     
  2 â”‚ â•­â”€â–¶         const actions = Object.assign(
  3 â”‚ â”‚               (
  4 â”‚ â”‚                   {
  5 â”‚ â”‚                       onChangeInput: this.handleChangeInput
  6 â”‚ â”‚                   }
  7 â”‚ â”‚               ),
  8 â”‚ â”‚               (
  9 â”‚ â”‚                   this.props.actions
 10 â”‚ â”‚               )
 11 â”‚ â•°â”€â–¶         );
 12 â”‚             
    â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:13]
 1 â”‚ eventData = Object.assign({}, eventData, { outsideLocality: `${originLocality} - ${destinationLocality}` })
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ });
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ â•­â”€â–¶ Object.assign({
 2 â”‚ â•°â”€â–¶ });
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ globalThis.Object.assign({ });
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ â•­â”€â–¶ globalThis.Object.assign({
 2 â”‚ â•°â”€â–¶ });
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ globalThis.Object.assign({}, foo)
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ globalThis.Object.assign({}, { foo: 'bar' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ globalThis.Object.assign({}, baz, { foo: 'bar' })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         function foo () { var globalThis = bar; }
 3 â”‚         globalThis.Object.assign({ });
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:3:9]
 2 â”‚         const Foo = require('foo');
 3 â”‚         globalThis.Object.assign({ foo: Foo });
   Â·         â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
 4 â”‚         
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign({ get a() {}, set b(val) {} })
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object literal instead of `Object.assign`. eg: `{ foo: bar }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:13]
 1 â”‚ const obj = Object.assign<{}, Record<string, string[]>>({}, getObject());
   Â·             â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.

  âš  eslint(prefer-object-spread): Disallow using `Object.assign` with an object literal as the first argument and prefer the use of object spread instead
   â•­â”€[prefer_object_spread.tsx:1:1]
 1 â”‚ Object.assign<{}, A>({}, foo);
   Â· â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   â•°â”€â”€â”€â”€
  help: Use an object spread instead of `Object.assign` eg: `{ ...foo }`.
