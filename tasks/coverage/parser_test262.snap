commit: d62fa93c

parser_test262 Summary:
AST Parsed     : 43765/43765 (100.00%)
Positive Passed: 43765/43765 (100.00%)
Negative Passed: 4237/4237 (100.00%)

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/annexB/language/expressions/template-literal/legacy-octal-escape-sequence-strict.js:19:4]
 18 │ 
 19 │ `${'\07'}`;
    ·    ─────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Unexpected token
    ╭─[test262/test/annexB/language/statements/for-in/bare-initializer.js:16:6]
 15 │ 
 16 │ for (a = 0 in {});
    ·      ─────
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/annexB/language/statements/for-in/const-initializer.js:15:6]
 14 │ 
 15 │ for (const a = 0 in {});
    ·      ───────────
 16 │ 
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/annexB/language/statements/for-in/let-initializer.js:15:6]
 14 │ 
 15 │ for (let a = 0 in {});
    ·      ─────────
 16 │ 
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/annexB/language/statements/for-in/strict-initializer.js:16:6]
 15 │ 
 16 │ for (var a = 0 in {});
    ·      ─────────
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/annexB/language/statements/for-in/var-arraybindingpattern-initializer.js:15:6]
 14 │ 
 15 │ for (var [a] = 0 in {});
    ·      ───────────
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/annexB/language/statements/for-in/var-objectbindingpattern-initializer.js:15:6]
 14 │ 
 15 │ for (var {a} = 0 in {});
    ·      ───────────
 16 │ 
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_F-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=F}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_F.js:19:11]
 18 │ 
 19 │ /\p{ASCII=F}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Invalid-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=Invalid}/u;
    ·           ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Invalid.js:19:11]
 18 │ 
 19 │ /\p{ASCII=Invalid}/u;
    ·           ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_N-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=N}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_N.js:19:11]
 18 │ 
 19 │ /\p{ASCII=N}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_No-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=No}/u;
    ·           ──
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_No.js:19:11]
 18 │ 
 19 │ /\p{ASCII=No}/u;
    ·           ──
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_T-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=T}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_T.js:19:11]
 18 │ 
 19 │ /\p{ASCII=T}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Y-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=Y}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Y.js:19:11]
 18 │ 
 19 │ /\p{ASCII=Y}/u;
    ·           ─
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Yes-negated.js:19:11]
 18 │ 
 19 │ /\P{ASCII=Yes}/u;
    ·           ───
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/binary-property-with-value-ASCII_-_Yes.js:19:11]
 18 │ 
 19 │ /\p{ASCII=Yes}/u;
    ·           ───
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/built-ins/RegExp/property-escapes/character-class-range-end.js:21:3]
 20 │ 
 21 │ /[--\p{Hex}]/u;
    ·   ─────────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/built-ins/RegExp/property-escapes/character-class-range-no-dash-end.js:21:3]
 20 │ 
 21 │ /[\uFFFF-\p{Hex}]/u;
    ·   ──────────────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/built-ins/RegExp/property-escapes/character-class-range-no-dash-start.js:21:3]
 20 │ 
 21 │ /[\p{Hex}-\uFFFF]/u;
    ·   ──────────────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/built-ins/RegExp/property-escapes/character-class-range-start.js:21:3]
 20 │ 
 21 │ /[\p{Hex}--]/u;
    ·   ─────────
    ╰────

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Basic_Emoji-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{Basic_Emoji}]/v;
    ·  ──────────────────
    ╰────

  × Invalid regular expression: Invalid property name `Basic_Emoji`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Basic_Emoji-negative-P.js:21:2]
 20 │ 
 21 │ /\P{Basic_Emoji}/v;
    ·  ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `Basic_Emoji`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Basic_Emoji-negative-u.js:21:5]
 20 │ 
 21 │ /\p{Basic_Emoji}/u;
    ·     ───────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Emoji_Keycap_Sequence-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{Emoji_Keycap_Sequence}]/v;
    ·  ────────────────────────────
    ╰────

  × Invalid regular expression: Invalid property name `Emoji_Keycap_Sequence`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Emoji_Keycap_Sequence-negative-P.js:21:2]
 20 │ 
 21 │ /\P{Emoji_Keycap_Sequence}/v;
    ·  ─────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `Emoji_Keycap_Sequence`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/Emoji_Keycap_Sequence-negative-u.js:21:5]
 20 │ 
 21 │ /\p{Emoji_Keycap_Sequence}/u;
    ·     ─────────────────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{RGI_Emoji}]/v;
    ·  ────────────────
    ╰────

  × Invalid regular expression: Invalid property name `RGI_Emoji`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji-negative-P.js:21:2]
 20 │ 
 21 │ /\P{RGI_Emoji}/v;
    ·  ─────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `RGI_Emoji`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji-negative-u.js:21:5]
 20 │ 
 21 │ /\p{RGI_Emoji}/u;
    ·     ─────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Flag_Sequence-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{RGI_Emoji_Flag_Sequence}]/v;
    ·  ──────────────────────────────
    ╰────

  × Invalid regular expression: Invalid property name `RGI_Emoji_Flag_Sequence`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Flag_Sequence-negative-P.js:21:2]
 20 │ 
 21 │ /\P{RGI_Emoji_Flag_Sequence}/v;
    ·  ───────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `RGI_Emoji_Flag_Sequence`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Flag_Sequence-negative-u.js:21:5]
 20 │ 
 21 │ /\p{RGI_Emoji_Flag_Sequence}/u;
    ·     ───────────────────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Modifier_Sequence-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{RGI_Emoji_Modifier_Sequence}]/v;
    ·  ──────────────────────────────────
    ╰────

  × Invalid regular expression: Invalid property name `RGI_Emoji_Modifier_Sequence`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Modifier_Sequence-negative-P.js:21:2]
 20 │ 
 21 │ /\P{RGI_Emoji_Modifier_Sequence}/v;
    ·  ───────────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `RGI_Emoji_Modifier_Sequence`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Modifier_Sequence-negative-u.js:21:5]
 20 │ 
 21 │ /\p{RGI_Emoji_Modifier_Sequence}/u;
    ·     ───────────────────────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Tag_Sequence-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{RGI_Emoji_Tag_Sequence}]/v;
    ·  ─────────────────────────────
    ╰────

  × Invalid regular expression: Invalid property name `RGI_Emoji_Tag_Sequence`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Tag_Sequence-negative-P.js:21:2]
 20 │ 
 21 │ /\P{RGI_Emoji_Tag_Sequence}/v;
    ·  ──────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `RGI_Emoji_Tag_Sequence`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_Tag_Sequence-negative-u.js:21:5]
 20 │ 
 21 │ /\p{RGI_Emoji_Tag_Sequence}/u;
    ·     ──────────────────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid character class with strings unicode property
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_ZWJ_Sequence-negative-CharacterClass.js:21:2]
 20 │ 
 21 │ /[^\p{RGI_Emoji_ZWJ_Sequence}]/v;
    ·  ─────────────────────────────
    ╰────

  × Invalid regular expression: Invalid property name `RGI_Emoji_ZWJ_Sequence`(negative + property of strings)
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_ZWJ_Sequence-negative-P.js:21:2]
 20 │ 
 21 │ /\P{RGI_Emoji_ZWJ_Sequence}/v;
    ·  ──────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property `RGI_Emoji_ZWJ_Sequence`
    ╭─[test262/test/built-ins/RegExp/property-escapes/generated/strings/RGI_Emoji_ZWJ_Sequence-negative-u.js:21:5]
 20 │ 
 21 │ /\p{RGI_Emoji_ZWJ_Sequence}/u;
    ·     ──────────────────────
    ╰────
  help: Enable `UnicodeSetsMode` to use this property

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Block-implicit-negated.js:22:5]
 21 │ 
 22 │ /\P{InAdlam}/u;
    ·     ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Block-implicit.js:22:5]
 21 │ 
 22 │ /\p{InAdlam}/u;
    ·     ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Script-implicit-negated.js:22:5]
 21 │ 
 22 │ /\P{InAdlam}/u;
    ·     ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Script-implicit.js:22:5]
 21 │ 
 22 │ /\p{InAdlam}/u;
    ·     ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Script-negated.js:22:14]
 21 │ 
 22 │ /\P{InScript=Adlam}/u;
    ·              ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-In-prefix-Script.js:22:14]
 21 │ 
 22 │ /\p{InScript=Adlam}/u;
    ·              ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-Is-prefix-Script-negated.js:22:14]
 21 │ 
 22 │ /\P{IsScript=Adlam}/u;
    ·              ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-Is-prefix-Script.js:22:14]
 21 │ 
 22 │ /\p{IsScript=Adlam}/u;
    ·              ─────
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-circumflex-negation-negated.js:22:2]
 21 │ 
 22 │ /\P{^General_Category=Letter}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-circumflex-negation.js:22:2]
 21 │ 
 22 │ /\p{^General_Category=Letter}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-empty-negated.js:22:3]
 21 │ 
 22 │ /[\p{}]/u;
    ·   ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-empty.js:22:3]
 21 │ 
 22 │ /[\P{}]/u;
    ·   ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-invalid-negated.js:22:6]
 21 │ 
 22 │ /[\P{invalid}]/u;
    ·      ───────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-invalid.js:22:6]
 21 │ 
 22 │ /[\p{invalid}]/u;
    ·      ───────
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-no-braces-negated.js:22:2]
 21 │ 
 22 │ /\P/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-no-braces-value-negated.js:22:2]
 21 │ 
 22 │ /\PL/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-no-braces-value.js:22:2]
 21 │ 
 22 │ /\pL/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-no-braces.js:22:2]
 21 │ 
 22 │ /\p/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator-and-value-only-negated.js:22:2]
 21 │ 
 22 │ /\P{=Letter}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator-and-value-only.js:22:2]
 21 │ 
 22 │ /\p{=Letter}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator-negated.js:22:5]
 21 │ 
 22 │ /\P{General_Category:Letter}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator-only-negated.js:22:2]
 21 │ 
 22 │ /\P{=}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator-only.js:22:2]
 21 │ 
 22 │ /\p{=}/u;
    ·  ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-separator.js:22:5]
 21 │ 
 22 │ /\p{General_Category:Letter}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-unclosed-negated.js:22:2]
 21 │ 
 22 │ /\P{/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-unclosed.js:22:2]
 21 │ 
 22 │ /\p{/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-unopened-negated.js:22:2]
 21 │ 
 22 │ /\P}/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/grammar-extension-unopened.js:22:2]
 21 │ 
 22 │ /\p}/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-01-negated.js:19:2]
 18 │ 
 19 │ /\P{ General_Category=Uppercase_Letter }/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-01.js:19:2]
 18 │ 
 19 │ /\p{ General_Category=Uppercase_Letter }/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-02-negated.js:19:2]
 18 │ 
 19 │ /\P{ Lowercase }/u;
    ·  ───
    ╰────

  × Invalid regular expression: Unterminated unicode property escape
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-02.js:19:2]
 18 │ 
 19 │ /\p{ Lowercase }/u;
    ·  ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-03-negated.js:19:5]
 18 │ 
 19 │ /\P{ANY}/u;
    ·     ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-03.js:19:5]
 18 │ 
 19 │ /\p{ANY}/u;
    ·     ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-04-negated.js:19:5]
 18 │ 
 19 │ /\P{ASSIGNED}/u;
    ·     ────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-04.js:19:5]
 18 │ 
 19 │ /\p{ASSIGNED}/u;
    ·     ────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-05-negated.js:19:5]
 18 │ 
 19 │ /\P{Ascii}/u;
    ·     ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-05.js:19:5]
 18 │ 
 19 │ /\p{Ascii}/u;
    ·     ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-06-negated.js:19:5]
 18 │ 
 19 │ /\P{General_Category = Uppercase_Letter}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-06.js:19:5]
 18 │ 
 19 │ /\p{General_Category = Uppercase_Letter}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-07-negated.js:19:5]
 18 │ 
 19 │ /\P{_-_lOwEr_C-A_S-E_-_}/u;
    ·     ─
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-07.js:19:5]
 18 │ 
 19 │ /\p{_-_lOwEr_C-A_S-E_-_}/u;
    ·     ─
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-08-negated.js:19:5]
 18 │ 
 19 │ /\P{any}/u;
    ·     ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-08.js:19:5]
 18 │ 
 19 │ /\p{any}/u;
    ·     ───
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-09-negated.js:19:5]
 18 │ 
 19 │ /\P{ascii}/u;
    ·     ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-09.js:19:5]
 18 │ 
 19 │ /\p{ascii}/u;
    ·     ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-10-negated.js:19:5]
 18 │ 
 19 │ /\P{assigned}/u;
    ·     ────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-10.js:19:5]
 18 │ 
 19 │ /\p{assigned}/u;
    ·     ────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-11-negated.js:19:8]
 18 │ 
 19 │ /\P{gC=uppercase_letter}/u;
    ·        ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-11.js:19:8]
 18 │ 
 19 │ /\p{gC=uppercase_letter}/u;
    ·        ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-12-negated.js:19:8]
 18 │ 
 19 │ /\P{gc=uppercaseletter}/u;
    ·        ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-12.js:19:8]
 18 │ 
 19 │ /\p{gc=uppercaseletter}/u;
    ·        ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-13-negated.js:19:5]
 18 │ 
 19 │ /\P{lowercase}/u;
    ·     ─────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-13.js:19:5]
 18 │ 
 19 │ /\p{lowercase}/u;
    ·     ─────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-14-negated.js:19:5]
 18 │ 
 19 │ /\P{lowercase}/u;
    ·     ─────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/loose-matching-14.js:19:5]
 18 │ 
 19 │ /\p{lowercase}/u;
    ·     ─────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-General_Category-equals-negated.js:18:5]
 17 │ 
 18 │ /\P{General_Category=}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-General_Category-equals.js:18:5]
 17 │ 
 18 │ /\p{General_Category=}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-General_Category-negated.js:18:5]
 17 │ 
 18 │ /\P{General_Category}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-General_Category.js:18:5]
 17 │ 
 18 │ /\p{General_Category}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script-equals-negated.js:18:5]
 17 │ 
 18 │ /\P{Script=}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script-equals.js:18:5]
 17 │ 
 18 │ /\p{Script=}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script-negated.js:18:5]
 17 │ 
 18 │ /\P{Script}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script.js:18:5]
 17 │ 
 18 │ /\p{Script}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script_Extensions-equals-negated.js:18:5]
 17 │ 
 18 │ /\P{Script_Extensions=}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script_Extensions-equals.js:18:5]
 17 │ 
 18 │ /\p{Script_Extensions=}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script_Extensions-negated.js:18:5]
 17 │ 
 18 │ /\P{Script_Extensions}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-binary-property-without-value-Script_Extensions.js:18:5]
 17 │ 
 18 │ /\p{Script_Extensions}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-binary-property-negated.js:18:5]
 17 │ 
 18 │ /\P{UnknownBinaryProperty}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-binary-property.js:18:5]
 17 │ 
 18 │ /\p{UnknownBinaryProperty}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-and-value-negated.js:19:17]
 18 │ 
 19 │ /\P{Line_Breakz=WAT}/u;
    ·                 ───
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-and-value.js:19:17]
 18 │ 
 19 │ /\p{Line_Breakz=WAT}/u;
    ·                 ───
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-existing-value-negated.js:18:17]
 17 │ 
 18 │ /\P{Line_Breakz=Alphabetic}/u;
    ·                 ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-existing-value.js:18:17]
 17 │ 
 18 │ /\p{Line_Breakz=Alphabetic}/u;
    ·                 ──────────
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-General_Category-negated.js:19:5]
 18 │ 
 19 │ /\\P{General_Category=WAT}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-Script-negated.js:19:5]
 18 │ 
 19 │ /\\P{Script=FooBarBazInvalid}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-Script.js:19:5]
 18 │ 
 19 │ /\\p{Script=FooBarBazInvalid}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-Script_Extensions-negated.js:19:5]
 18 │ 
 19 │ /\\P{Script_Extensions=H_e_h}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-Script_Extensions.js:19:5]
 18 │ 
 19 │ /\\p{Script_Extensions=H_e_h}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/built-ins/RegExp/property-escapes/non-existent-property-value-general-category.js:19:5]
 18 │ 
 19 │ /\\p{General_Category=WAT}/u;
    ·     ▲
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Composition_Exclusion-negated.js:19:5]
 18 │ 
 19 │ /\P{Composition_Exclusion}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Composition_Exclusion.js:19:5]
 18 │ 
 19 │ /\p{Composition_Exclusion}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFC-negated.js:19:5]
 18 │ 
 19 │ /\P{Expands_On_NFC}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFC.js:19:5]
 18 │ 
 19 │ /\p{Expands_On_NFC}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFD-negated.js:19:5]
 18 │ 
 19 │ /\P{Expands_On_NFD}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFD.js:19:5]
 18 │ 
 19 │ /\p{Expands_On_NFD}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFKC-negated.js:19:5]
 18 │ 
 19 │ /\P{Expands_On_NFKC}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFKC.js:19:5]
 18 │ 
 19 │ /\p{Expands_On_NFKC}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFKD-negated.js:19:5]
 18 │ 
 19 │ /\P{Expands_On_NFKD}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Expands_On_NFKD.js:19:5]
 18 │ 
 19 │ /\p{Expands_On_NFKD}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-FC_NFKC_Closure-negated.js:19:5]
 18 │ 
 19 │ /\P{FC_NFKC_Closure}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-FC_NFKC_Closure.js:19:5]
 18 │ 
 19 │ /\p{FC_NFKC_Closure}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Full_Composition_Exclusion-negated.js:19:5]
 18 │ 
 19 │ /\P{Full_Composition_Exclusion}/u;
    ·     ──────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Full_Composition_Exclusion.js:19:5]
 18 │ 
 19 │ /\p{Full_Composition_Exclusion}/u;
    ·     ──────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Grapheme_Link-negated.js:19:5]
 18 │ 
 19 │ /\P{Grapheme_Link}/u;
    ·     ─────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Grapheme_Link.js:19:5]
 18 │ 
 19 │ /\p{Grapheme_Link}/u;
    ·     ─────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Hyphen-negated.js:19:5]
 18 │ 
 19 │ /\P{Hyphen}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Hyphen.js:19:5]
 18 │ 
 19 │ /\p{Hyphen}/u;
    ·     ──────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Alphabetic-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Alphabetic}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Alphabetic.js:19:5]
 18 │ 
 19 │ /\p{Other_Alphabetic}/u;
    ·     ────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Default_Ignorable_Code_Point-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Default_Ignorable_Code_Point}/u;
    ·     ──────────────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Default_Ignorable_Code_Point.js:19:5]
 18 │ 
 19 │ /\p{Other_Default_Ignorable_Code_Point}/u;
    ·     ──────────────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Grapheme_Extend-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Grapheme_Extend}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Grapheme_Extend.js:19:5]
 18 │ 
 19 │ /\p{Other_Grapheme_Extend}/u;
    ·     ─────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_ID_Continue-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_ID_Continue}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_ID_Continue.js:19:5]
 18 │ 
 19 │ /\p{Other_ID_Continue}/u;
    ·     ─────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_ID_Start-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_ID_Start}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_ID_Start.js:19:5]
 18 │ 
 19 │ /\p{Other_ID_Start}/u;
    ·     ──────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Lowercase-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Lowercase}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Lowercase.js:19:5]
 18 │ 
 19 │ /\p{Other_Lowercase}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Math-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Math}/u;
    ·     ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Math.js:19:5]
 18 │ 
 19 │ /\p{Other_Math}/u;
    ·     ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Uppercase-negated.js:19:5]
 18 │ 
 19 │ /\P{Other_Uppercase}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Other_Uppercase.js:19:5]
 18 │ 
 19 │ /\p{Other_Uppercase}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Prepended_Concatenation_Mark-negated.js:19:5]
 18 │ 
 19 │ /\P{Prepended_Concatenation_Mark}/u;
    ·     ────────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-binary-property-Prepended_Concatenation_Mark.js:19:5]
 18 │ 
 19 │ /\p{Prepended_Concatenation_Mark}/u;
    ·     ────────────────────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Block-with-value-negated.js:19:11]
 18 │ 
 19 │ /\P{Block=Adlam}/u;
    ·           ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Block-with-value.js:19:11]
 18 │ 
 19 │ /\p{Block=Adlam}/u;
    ·           ─────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-FC_NFKC_Closure-negated.js:19:5]
 18 │ 
 19 │ /\P{FC_NFKC_Closure}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-FC_NFKC_Closure.js:19:5]
 18 │ 
 19 │ /\p{FC_NFKC_Closure}/u;
    ·     ───────────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Line_Break-negated.js:19:16]
 18 │ 
 19 │ /\P{Line_Break=Alphabetic}/u;
    ·                ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Line_Break-with-value-negated.js:19:16]
 18 │ 
 19 │ /\P{Line_Break=Alphabetic}/u;
    ·                ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Line_Break-with-value.js:19:16]
 18 │ 
 19 │ /\p{Line_Break=Alphabetic}/u;
    ·                ──────────
    ╰────

  × Invalid regular expression: Invalid unicode property name and/or value
    ╭─[test262/test/built-ins/RegExp/property-escapes/unsupported-property-Line_Break.js:19:5]
 18 │ 
 19 │ /\p{Line_Break}/u;
    ·     ──────────
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-01.js:20:3]
 19 │ 
 20 │ /[(]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-02.js:20:3]
 19 │ 
 20 │ /[)]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Unterminated character class
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-03.js:20:2]
 19 │ 
 20 │ /[[]/v;
    ·  ───
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-04.js:20:3]
 19 │ 
 20 │ /[{]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-05.js:20:3]
 19 │ 
 20 │ /[}]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-06.js:20:3]
 19 │ 
 20 │ /[/]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-07.js:20:3]
 19 │ 
 20 │ /[-]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-08.js:20:3]
 19 │ 
 20 │ /[|]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-09.js:20:3]
 19 │ 
 20 │ /[&&]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-10.js:20:3]
 19 │ 
 20 │ /[!!]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-11.js:20:3]
 19 │ 
 20 │ /[##]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-12.js:20:3]
 19 │ 
 20 │ /[$$]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-13.js:20:3]
 19 │ 
 20 │ /[%%]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-14.js:20:3]
 19 │ 
 20 │ /[**]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-15.js:20:3]
 19 │ 
 20 │ /[++]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-16.js:20:3]
 19 │ 
 20 │ /[,,]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-17.js:20:3]
 19 │ 
 20 │ /[..]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-18.js:20:3]
 19 │ 
 20 │ /[::]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-19.js:20:3]
 19 │ 
 20 │ /[;;]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-20.js:20:3]
 19 │ 
 20 │ /[<<]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-21.js:20:3]
 19 │ 
 20 │ /[==]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-22.js:20:3]
 19 │ 
 20 │ /[>>]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-23.js:20:3]
 19 │ 
 20 │ /[??]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-24.js:20:3]
 19 │ 
 20 │ /[@@]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-25.js:20:3]
 19 │ 
 20 │ /[``]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-26.js:20:3]
 19 │ 
 20 │ /[~~]/v;
    ·   ▲
    ╰────

  × Invalid regular expression: Expected nonempty class set expression
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-27.js:20:4]
 19 │ 
 20 │ /[^^^]/v;
    ·    ▲
    ╰────

  × Invalid regular expression: Unterminated character class
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/breaking-change-from-u-to-v-28.js:20:2]
 19 │ 
 20 │ /[_^^]/v;
    ·  ──
    ╰────

  × The 'u' and 'v' regular expression flags cannot be enabled at the same time
    ╭─[test262/test/built-ins/RegExp/prototype/unicodeSets/uv-flags.js:18:1]
 17 │ 
 18 │ /./uv;
    · ─────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/arguments-object/10.5-1gs.js:18:5]
 17 │ function f_10_5_1_gs(){
 18 │     arguments = 7;
    ·     ─────────
 19 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/asi/S7.9.2_A1_T1.js:17:4]
 16 │ //CHECK#1
 17 │ { 1 2 } 3
    ·    ▲
    ╰────
  help: Try insert a semicolon here

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9.2_A1_T3.js:18:1]
 17 │ for( a ; b
 18 │ )
    · ┬
    · ╰── `;` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9.2_A1_T6.js:21:1]
 20 │ if(a>b)
 21 │ else c=d
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A10_T2.js:17:4]
 16 │ //CHECK#1
 17 │ {} * 1
    ·    ─
    ╰────

  × Expected `,` but found `;`
    ╭─[test262/test/language/asi/S7.9_A10_T4.js:17:4]
 16 │ //CHECK#1
 17 │ ({};) * 1
    ·    ┬
    ·    ╰── `,` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A10_T6.js:18:2]
 17 │ {}
 18 │  * 1
    ·  ─
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/asi/S7.9_A10_T8.js:17:3]
 16 │ //CHECK#1
 17 │ {1 2} 3
    ·   ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/asi/S7.9_A11_T4.js:18:17]
 17 │ var x = 0;
 18 │ if (false) x = 1 else x = -1
    ·                 ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A11_T8.js:17:1]
 16 │ if (false) {};
 17 │ else {}
    · ────
    ╰────

  × Illegal newline after throw
    ╭─[test262/test/language/asi/S7.9_A4.js:18:3]
 17 │ try {
 18 │   throw
    ·   ──┬──
    ·     ╰── throw starts here
 19 │   1;
    ·   ┬
    ·   ╰── A newline is not expected here
 20 │ } catch(e) {
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A5.1_T1.js:18:3]
 17 │ x
 18 │ ++;
    ·   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A5.3_T1.js:19:3]
 18 │ x
 19 │ --;
    ·   ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/asi/S7.9_A5.7_T1.js:24:1]
 23 │     x
 24 │ ╭─▶ ++
 25 │ │   ++
 26 │ ╰─▶ y
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T1.js:21:1]
 20 │ for(;
 21 │ ) {
    · ┬
    · ╰── `;` expected
 22 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T10.js:22:2]
 21 │     false
 22 │ ;) {
    ·  ┬
    ·  ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T2.js:22:1]
 21 │     ;
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T3.js:21:2]
 20 │ for(
 21 │ ;) {
    ·  ┬
    ·  ╰── `;` expected
 22 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T4.js:22:2]
 21 │ 
 22 │ ;) {
    ·  ┬
    ·  ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T5.js:21:1]
 20 │ for(false;false
 21 │ ) {
    · ┬
    · ╰── `;` expected
 22 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T6.js:22:1]
 21 │ false
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T7.js:22:1]
 21 │     ;
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T8.js:22:1]
 21 │     ;false
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.2_T9.js:21:7]
 20 │ for(
 21 │ ;false) {
    ·       ┬
    ·       ╰── `;` expected
 22 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.3_T1.js:21:1]
 20 │ for(
 21 │ ) {
    · ┬
    · ╰── `;` expected
 22 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.3_T2.js:22:1]
 21 │ 
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.3_T3.js:23:1]
 22 │ 
 23 │ ) {
    · ┬
    · ╰── `;` expected
 24 │   break;
    ╰────

  × Expected `;` but found `)`
    ╭─[test262/test/language/asi/S7.9_A6.3_T4.js:22:1]
 21 │     false
 22 │ ) {
    · ┬
    · ╰── `;` expected
 23 │   break;
    ╰────

  × Expected `;` but found `false`
    ╭─[test262/test/language/asi/S7.9_A6.3_T5.js:21:5]
 20 │ for(false
 21 │     false
    ·     ──┬──
    ·       ╰── `;` expected
 22 │ ) {
    ╰────

  × Expected `;` but found `false`
    ╭─[test262/test/language/asi/S7.9_A6.3_T6.js:22:5]
 21 │     false
 22 │     false
    ·     ──┬──
    ·       ╰── `;` expected
 23 │ ) {
    ╰────

  × Expected `;` but found `false`
    ╭─[test262/test/language/asi/S7.9_A6.3_T7.js:22:5]
 21 │     false
 22 │     false
    ·     ──┬──
    ·       ╰── `;` expected
 23 │     false
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/asi/S7.9_A6.4_T1.js:19:22]
 18 │ //CHECK#1
 19 │ for(false;false;false;) {
    ·                      ┬
    ·                      ╰── `)` expected
 20 │   break;
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A6.4_T2.js:19:17]
 18 │ //CHECK#1
 19 │ for(false;false;;false) {
    ·                 ─
 20 │   break;
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A9_T6.js:19:1]
 18 │ while (false)
    ╰────

  × Unexpected token
    ╭─[test262/test/language/asi/S7.9_A9_T7.js:20:1]
 19 │ while (false)
    ╰────

  × Expected `while` but found `;`
    ╭─[test262/test/language/asi/S7.9_A9_T8.js:17:6]
 16 │ //CHECK#1
 17 │ do {};
    ·      ┬
    ·      ╰── `while` expected
 18 │ while (false)
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/language/block-scope/syntax/for-in/disallow-initialization-assignment.js:15:6]
 14 │ $DONOTEVALUATE();
 15 │ for (let x = 3 in {}) { }
    ·      ─────────
 16 │ 
    ╰────

  × Only a single declaration is allowed in a `for...in` statement
    ╭─[test262/test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-with-and-without-initializer.js:15:6]
 14 │ $DONOTEVALUATE();
 15 │ for (let x = 3, y in {}) { }
    ·      ────────────
 16 │ 
    ╰────

  × Only a single declaration is allowed in a `for...in` statement
    ╭─[test262/test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-with-initializer.js:15:6]
 14 │ $DONOTEVALUATE();
 15 │ for (let x = 3, y = 4 in {}) { }
    ·      ────────────────
 16 │ 
    ╰────

  × Only a single declaration is allowed in a `for...in` statement
    ╭─[test262/test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings-without-and-with-initializer.js:15:6]
 14 │ $DONOTEVALUATE();
 15 │ for (let x, y = 4 in {}) { }
    ·      ────────────
 16 │ 
    ╰────

  × Only a single declaration is allowed in a `for...in` statement
    ╭─[test262/test/language/block-scope/syntax/for-in/disallow-multiple-lexical-bindings.js:15:6]
 14 │ $DONOTEVALUATE();
 15 │ for (let x, y in {}) { }
    ·      ────────
 16 │ 
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/block-scope/syntax/function-declarations/in-statement-position-do-statement-while-expression.js:15:4]
 14 │ $DONOTEVALUATE();
 15 │ do function g() {} while (false)
    ·    ───────────────
 16 │ 
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/block-scope/syntax/function-declarations/in-statement-position-for-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) function g() {}
    ·               ───────────────
 16 │ 
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement-else-statement.js:16:19]
 15 │ $DONOTEVALUATE();
 16 │ if (true) {} else function g() {}
    ·                   ───────────────
 17 │ 
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/block-scope/syntax/function-declarations/in-statement-position-if-expression-statement.js:16:11]
 15 │ $DONOTEVALUATE();
 16 │ if (true) function g() {}
    ·           ───────────────
 17 │ 
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/block-scope/syntax/function-declarations/in-statement-position-while-expression-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ while (false) function g() {}
    ·               ───────────────
 16 │ 
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-async-function.js:24:18]
 23 │ 
 24 │ { async function f() {} async function f() {} }
    ·                  ┬                     ┬
    ·                  │                     ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-async-generator.js:24:18]
 23 │ 
 24 │ { async function f() {} async function* f() {} }
    ·                  ┬                      ┬
    ·                  │                      ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js:24:18]
 23 │ 
 24 │ { async function f() {} class f {} }
    ·                  ┬            ┬
    ·                  │            ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-const.js:24:18]
 23 │ 
 24 │ { async function f() {} const f = 0 }
    ·                  ┬            ┬
    ·                  │            ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-function.js:24:18]
 23 │ 
 24 │ { async function f() {} function f() {} }
    ·                  ┬               ┬
    ·                  │               ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-generator.js:24:18]
 23 │ 
 24 │ { async function f() {} function* f() {} }
    ·                  ┬                ┬
    ·                  │                ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js:24:18]
 23 │ 
 24 │ { async function f() {} let f }
    ·                  ┬          ┬
    ·                  │          ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-function-name-redeclaration-attempt-with-var.js:24:18]
 23 │ 
 24 │ { async function f() {} var f }
    ·                  ┬          ┬
    ·                  │          ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-async-function.js:24:19]
 23 │ 
 24 │ { async function* f() {} async function f() {} }
    ·                   ┬                     ┬
    ·                   │                     ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-async-generator.js:24:19]
 23 │ 
 24 │ { async function* f() {} async function* f() {} }
    ·                   ┬                      ┬
    ·                   │                      ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-class.js:24:19]
 23 │ 
 24 │ { async function* f() {} class f {} }
    ·                   ┬            ┬
    ·                   │            ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-const.js:24:19]
 23 │ 
 24 │ { async function* f() {} const f = 0 }
    ·                   ┬            ┬
    ·                   │            ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-function.js:24:19]
 23 │ 
 24 │ { async function* f() {} function f() {} }
    ·                   ┬               ┬
    ·                   │               ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-generator.js:24:19]
 23 │ 
 24 │ { async function* f() {} function* f() {} }
    ·                   ┬                ┬
    ·                   │                ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-let.js:24:19]
 23 │ 
 24 │ { async function* f() {} let f }
    ·                   ┬          ┬
    ·                   │          ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-var.js:24:19]
 23 │ 
 24 │ { async function* f() {} var f }
    ·                   ┬          ┬
    ·                   │          ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-async-function.js:24:9]
 23 │ 
 24 │ { class f {} async function f() {} }
    ·         ┬                   ┬
    ·         │                   ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-async-generator.js:24:9]
 23 │ 
 24 │ { class f {} async function* f() {} }
    ·         ┬                    ┬
    ·         │                    ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js:23:9]
 22 │ 
 23 │ { class f {} class f {} }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js:23:9]
 22 │ 
 23 │ { class f {} const f = 0 }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js:23:9]
 22 │ 
 23 │ { class f {} function f() {} }
    ·         ┬             ┬
    ·         │             ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-generator.js:24:9]
 23 │ 
 24 │ { class f {} function* f() {} }
    ·         ┬              ┬
    ·         │              ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js:23:9]
 22 │ 
 23 │ { class f {} let f }
    ·         ┬        ┬
    ·         │        ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js:23:9]
 22 │ 
 23 │ { class f {} var f }
    ·         ┬        ┬
    ·         │        ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js:24:9]
 23 │ 
 24 │ { const f = 0; async function f() {} }
    ·         ┬                     ┬
    ·         │                     ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-async-generator.js:24:9]
 23 │ 
 24 │ { const f = 0; async function* f() {} }
    ·         ┬                      ┬
    ·         │                      ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js:23:9]
 22 │ 
 23 │ { const f = 0; class f {} }
    ·         ┬            ┬
    ·         │            ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js:23:9]
 22 │ 
 23 │ { const f = 0; const f = 0 }
    ·         ┬            ┬
    ·         │            ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js:23:9]
 22 │ 
 23 │ { const f = 0; function f() {} }
    ·         ┬               ┬
    ·         │               ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-generator.js:24:9]
 23 │ 
 24 │ { const f = 0; function* f() {} }
    ·         ┬                ┬
    ·         │                ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js:23:9]
 22 │ 
 23 │ { const f = 0; let f }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js:23:9]
 22 │ 
 23 │ { const f = 0; var f }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-async-function.js:25:20]
 24 │ function x() {
 25 │   { async function f() {}; var f; }
    ·                    ┬           ┬
    ·                    │           ╰── It can not be redeclared here
    ·                    ╰── `f` has already been declared here
 26 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-async-generator.js:25:21]
 24 │ function x() {
 25 │   { async function* f() {}; var f; }
    ·                     ┬           ┬
    ·                     │           ╰── It can not be redeclared here
    ·                     ╰── `f` has already been declared here
 26 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-class.js:24:11]
 23 │ function x() {
 24 │   { class f {}; var f; }
    ·           ┬         ┬
    ·           │         ╰── It can not be redeclared here
    ·           ╰── `f` has already been declared here
 25 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-const.js:24:11]
 23 │ function x() {
 24 │   { const f = 0; var f; }
    ·           ┬          ┬
    ·           │          ╰── It can not be redeclared here
    ·           ╰── `f` has already been declared here
 25 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-function.js:24:14]
 23 │ function x() {
 24 │   { function f() {}; var f; }
    ·              ┬           ┬
    ·              │           ╰── It can not be redeclared here
    ·              ╰── `f` has already been declared here
 25 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-generator.js:25:15]
 24 │ function x() {
 25 │   { function* f() {}; var f; }
    ·               ┬           ┬
    ·               │           ╰── It can not be redeclared here
    ·               ╰── `f` has already been declared here
 26 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/fn-scope-var-name-redeclaration-attempt-with-let.js:24:9]
 23 │ function x() {
 24 │   { let f; var f; }
    ·         ┬      ┬
    ·         │      ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
 25 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-declaration-attempt-to-redeclare-with-var-declaration-nested-in-function.js:25:18]
 24 │         // A lexically declared function declaration.
 25 │         function f() {}
    ·                  ┬
    ·                  ╰── `f` has already been declared here
 26 │ 
 27 │         // An inner block-statement with a variable-declared name.
 28 │         {
 29 │             var f;
    ·                 ┬
    ·                 ╰── It can not be redeclared here
 30 │         }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-async-function.js:24:12]
 23 │ 
 24 │ { function f() {} async function f() {} }
    ·            ┬                     ┬
    ·            │                     ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-async-generator.js:24:12]
 23 │ 
 24 │ { function f() {} async function* f() {} }
    ·            ┬                      ┬
    ·            │                      ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js:23:12]
 22 │ 
 23 │ { function f() {} class f {} }
    ·            ┬            ┬
    ·            │            ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-const.js:23:12]
 22 │ 
 23 │ { function f() {} const f = 0 }
    ·            ┬            ┬
    ·            │            ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js:23:12]
 22 │ 
 23 │ { function f() {} function f() {} }
    ·            ┬               ┬
    ·            │               ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-generator.js:24:12]
 23 │ 
 24 │ { function f() {} function* f() {} }
    ·            ┬                ┬
    ·            │                ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js:23:12]
 22 │ 
 23 │ { function f() {} let f }
    ·            ┬          ┬
    ·            │          ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js:23:12]
 22 │ 
 23 │ { function f() {} var f }
    ·            ┬          ┬
    ·            │          ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-async-function.js:24:13]
 23 │ 
 24 │ { function* f() {} async function f() {} }
    ·             ┬                     ┬
    ·             │                     ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-async-generator.js:24:13]
 23 │ 
 24 │ { function* f() {} async function* f() {} }
    ·             ┬                      ┬
    ·             │                      ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-class.js:24:13]
 23 │ 
 24 │ { function* f() {} class f {} }
    ·             ┬            ┬
    ·             │            ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-const.js:24:13]
 23 │ 
 24 │ { function* f() {} const f = 0 }
    ·             ┬            ┬
    ·             │            ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-function.js:24:13]
 23 │ 
 24 │ { function* f() {} function f() {} }
    ·             ┬               ┬
    ·             │               ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-generator.js:24:13]
 23 │ 
 24 │ { function* f() {} function* f() {} }
    ·             ┬                ┬
    ·             │                ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-let.js:24:13]
 23 │ 
 24 │ { function* f() {} let f }
    ·             ┬          ┬
    ·             │          ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/generator-name-redeclaration-attempt-with-var.js:24:13]
 23 │ 
 24 │ { function* f() {} var f }
    ·             ┬          ┬
    ·             │          ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-async-function.js:40:9]
 39 │ 
 40 │ { { var f; } async function f() {}; }
    ·         ┬                   ┬
    ·         │                   ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-async-generator.js:40:9]
 39 │ 
 40 │ { { var f; } async function* f() {}; }
    ·         ┬                    ┬
    ·         │                    ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-class.js:39:9]
 38 │ 
 39 │ { { var f; } class f {}; }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-const.js:39:9]
 38 │ 
 39 │ { { var f; } const f = 0; }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-function.js:39:9]
 38 │ 
 39 │ { { var f; } function f() {} }
    ·         ┬             ┬
    ·         │             ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-generator.js:40:9]
 39 │ 
 40 │ { { var f; } function* f() {}; }
    ·         ┬              ┬
    ·         │              ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-name-redeclaration-attempt-with-let.js:39:9]
 38 │ 
 39 │ { { var f; } let f; }
    ·         ┬        ┬
    ·         │        ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-async-function.js:40:18]
 39 │ 
 40 │ { async function f() {}; { var f; } }
    ·                  ┬             ┬
    ·                  │             ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-async-generator.js:40:19]
 39 │ 
 40 │ { async function* f() {}; { var f; } }
    ·                   ┬             ┬
    ·                   │             ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-class.js:39:9]
 38 │ 
 39 │ { class f {}; { var f; } }
    ·         ┬           ┬
    ·         │           ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-const.js:39:9]
 38 │ 
 39 │ { const f = 0; { var f; } }
    ·         ┬            ┬
    ·         │            ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-function.js:39:12]
 38 │ 
 39 │ { function f() {} { var f; } }
    ·            ┬            ┬
    ·            │            ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-generator.js:40:13]
 39 │ 
 40 │ { function* f() {}; { var f; } }
    ·             ┬             ┬
    ·             │             ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/inner-block-var-redeclaration-attempt-after-let.js:39:7]
 38 │ 
 39 │ { let f; { var f; } }
    ·       ┬        ┬
    ·       │        ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-async-function.js:24:7]
 23 │ 
 24 │ { let f; async function f() {} }
    ·       ┬                 ┬
    ·       │                 ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-async-generator.js:24:7]
 23 │ 
 24 │ { let f; async function* f() {} }
    ·       ┬                  ┬
    ·       │                  ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js:23:7]
 22 │ 
 23 │ { let f; class f {} }
    ·       ┬        ┬
    ·       │        ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js:23:7]
 22 │ 
 23 │ { let f; const f = 0 }
    ·       ┬        ┬
    ·       │        ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js:23:7]
 22 │ 
 23 │ { let f; function f() {} }
    ·       ┬           ┬
    ·       │           ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-generator.js:24:7]
 23 │ 
 24 │ { let f; function* f() {} }
    ·       ┬            ┬
    ·       │            ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js:23:7]
 22 │ 
 23 │ { let f; let f }
    ·       ┬      ┬
    ·       │      ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js:23:7]
 22 │ 
 23 │ { let f; var f }
    ·       ┬      ┬
    ·       │      ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-async-function.js:24:7]
 23 │ 
 24 │ { var f; async function f() {} }
    ·       ┬                 ┬
    ·       │                 ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-async-generator.js:24:7]
 23 │ 
 24 │ { var f; async function* f() {} }
    ·       ┬                  ┬
    ·       │                  ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js:23:7]
 22 │ 
 23 │ { var f; class f {} }
    ·       ┬        ┬
    ·       │        ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js:23:7]
 22 │ 
 23 │ { var f; const f = 0 }
    ·       ┬        ┬
    ·       │        ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js:23:7]
 22 │ 
 23 │ { var f; function f() {} }
    ·       ┬           ┬
    ·       │           ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-generator.js:24:7]
 23 │ 
 24 │ { var f; function* f() {} }
    ·       ┬            ┬
    ·       │            ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js:23:7]
 22 │ 
 23 │ { var f; let f }
    ·       ┬      ┬
    ·       │      ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-async-function.js:24:18]
 23 │ 
 24 │ { async function f() {}; var f; }
    ·                  ┬           ┬
    ·                  │           ╰── It can not be redeclared here
    ·                  ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-async-generator.js:24:19]
 23 │ 
 24 │ { async function* f() {}; var f; }
    ·                   ┬           ┬
    ·                   │           ╰── It can not be redeclared here
    ·                   ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-class.js:23:9]
 22 │ 
 23 │ { class f {}; var f; }
    ·         ┬         ┬
    ·         │         ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-const.js:23:9]
 22 │ 
 23 │ { const f = 0; var f; }
    ·         ┬          ┬
    ·         │          ╰── It can not be redeclared here
    ·         ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-function.js:23:12]
 22 │ 
 23 │ { function f() {}; var f; }
    ·            ┬           ┬
    ·            │           ╰── It can not be redeclared here
    ·            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-generator.js:24:13]
 23 │ 
 24 │ { function* f() {}; var f; }
    ·             ┬           ┬
    ·             │           ╰── It can not be redeclared here
    ·             ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/block-scope/syntax/redeclaration/var-redeclaration-attempt-after-let.js:23:7]
 22 │ 
 23 │ { let f; var f; }
    ·       ┬      ┬
    ·       │      ╰── It can not be redeclared here
    ·       ╰── `f` has already been declared here
    ╰────

  × Unterminated multiline comment
    ╭─[test262/test/language/comments/S7.4_A2_T2.js:16:1]
 15 │ 
 16 │ /*CHECK#1/
    · ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/comments/S7.4_A3.js:22:1]
 21 │ /* x */
 22 │ = 1;
    · ─
 23 │ */
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/comments/S7.4_A4_T1.js:19:3]
 18 │ /* var*/
 19 │ x*/
    ·   ──
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/comments/S7.4_A4_T4.js:19:3]
 18 │ // var /*
 19 │ x*/
    ·   ──
    ╰────

  × Invalid Unicode escape sequence
   ╭─[test262/test/language/comments/hashbang/escaped-bang-041.js:1:3]
 1 │ #\041
   ·   ─
 2 │ 
   ╰────

  × Expected `in` but found `throw`
    ╭─[test262/test/language/comments/hashbang/escaped-bang-041.js:20:1]
 19 │ 
 20 │ throw "Test262: This statement should not be evaluated.";
    · ──┬──
    ·   ╰── `in` expected
    ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/escaped-bang-u0021.js:1:8]
 1 │ #\u0021
   ·        ▲
 2 │ 
   ╰────

  × Expected `in` but found `throw`
    ╭─[test262/test/language/comments/hashbang/escaped-bang-u0021.js:20:1]
 19 │ 
 20 │ throw "Test262: This statement should not be evaluated.";
    · ──┬──
    ·   ╰── `in` expected
    ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/escaped-bang-u21.js:1:8]
 1 │ #\u{21}
   ·        ▲
 2 │ 
   ╰────

  × Expected `in` but found `throw`
    ╭─[test262/test/language/comments/hashbang/escaped-bang-u21.js:20:1]
 19 │ 
 20 │ throw "Test262: This statement should not be evaluated.";
    · ──┬──
    ·   ╰── `in` expected
    ╰────

  × Invalid Unicode escape sequence
   ╭─[test262/test/language/comments/hashbang/escaped-bang-x21.js:1:3]
 1 │ #\x21
   ·   ─
 2 │ 
   ╰────

  × Expected `in` but found `throw`
    ╭─[test262/test/language/comments/hashbang/escaped-bang-x21.js:20:1]
 19 │ 
 20 │ throw "Test262: This statement should not be evaluated.";
    · ──┬──
    ·   ╰── `in` expected
    ╰────

  × Invalid Unicode escape sequence
   ╭─[test262/test/language/comments/hashbang/escaped-hash-043.js:1:2]
 1 │ \043!
   ·  ─
 2 │ 
   ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
   ╭─[test262/test/language/comments/hashbang/escaped-hash-043.js:1:5]
 1 │ \043!
   ·     ▲
 2 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid Character `#`
   ╭─[test262/test/language/comments/hashbang/escaped-hash-u0023.js:1:7]
 1 │ \u0023!
   ·       ▲
 2 │ 
   ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
   ╭─[test262/test/language/comments/hashbang/escaped-hash-u0023.js:1:7]
 1 │ \u0023!
   ·       ▲
 2 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid Character `#`
   ╭─[test262/test/language/comments/hashbang/escaped-hash-u23.js:1:7]
 1 │ \u{23}!
   ·       ▲
 2 │ 
   ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
   ╭─[test262/test/language/comments/hashbang/escaped-hash-u23.js:1:7]
 1 │ \u{23}!
   ·       ▲
 2 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid Unicode escape sequence
   ╭─[test262/test/language/comments/hashbang/escaped-hash-x23.js:1:2]
 1 │ \x23!
   ·  ─
 2 │ 
   ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
   ╭─[test262/test/language/comments/hashbang/escaped-hash-x23.js:1:5]
 1 │ \x23!
   ·     ▲
 2 │ 
   ╰────
  help: Try insert a semicolon here

  × Invalid Character `#`
   ╭─[test262/test/language/comments/hashbang/escaped-hashbang.js:1:7]
 1 │ \u0023\u0021
   ·       ▲
 2 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/escaped-hashbang.js:1:13]
 1 │ \u0023\u0021
   ·             ▲
 2 │ 
   ╰────

  × Invalid Character `!`
    ╭─[test262/test/language/comments/hashbang/function-body.js:20:17]
 19 │ 
 20 │ function fn() {#!
    ·                 ─
 21 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
   ╭─[test262/test/language/comments/hashbang/multi-line-comment.js:3:6]
 2 │ throw "Test262: This statement should not be evaluated.";
 3 │ these characters should not be considered within a comment
   ·      ▲
 4 │ */
   ╰────
  help: Try insert a semicolon here

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-directive-prologue-sc.js:2:2]
 1 │ "use strict";
 2 │ #!
   ·  ─
 3 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-directive-prologue.js:2:2]
 1 │ "use strict"
 2 │ #!
   ·  ─
 3 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-empty-statement.js:1:3]
 1 │ ;#!
   ·   ─
 2 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-hashbang.js:2:2]
 1 │ #!
 2 │ #!
   ·  ─
 3 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-line-comment.js:2:2]
 1 │ //
 2 │ #!
   ·  ─
 3 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-multi-line-comment.js:2:4]
 1 │ /*
 2 │ */#!
   ·    ─
 3 │ 
   ╰────

  × Invalid Character `!`
   ╭─[test262/test/language/comments/hashbang/preceding-whitespace.js:1:3]
 1 │  #!
   ·   ─
 2 │ 
   ╰────

  × Invalid Character `!`
    ╭─[test262/test/language/comments/hashbang/statement-block.js:21:4]
 20 │ {
 21 │   #!
    ·    ─
 22 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/comments/multi-line-html-close-extra.js:26:7]
 25 │ /*
 26 │ */ the comment should not include these characters, regardless of AnnexB extensions -->
    ·       ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/comments/single-line-html-close-without-lt.js:24:4]
 23 │ 
 24 │ ;-->
    ·    ─
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/directive-prologue/10.1.1-2gs.js:17:5]
 16 │ throw "Test262: This statement should not be evaluated.";
 17 │ var public = 1;
    ·     ──────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/directive-prologue/10.1.1-5gs.js:17:5]
 16 │ throw "Test262: This statement should not be evaluated.";
 17 │ var public = 1;
    ·     ──────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/directive-prologue/10.1.1-8gs.js:18:5]
 17 │ throw "Test262: This statement should not be evaluated.";
 18 │ var public = 1;
    ·     ──────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/directive-prologue/14.1-4gs.js:17:1]
 16 │ throw "Test262: This statement should not be evaluated.";
 17 │ eval = 42;
    · ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/directive-prologue/14.1-5gs.js:19:1]
 18 │ throw "Test262: This statement should not be evaluated.";
 19 │ eval = 42;
    · ────
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-decl-inside-func-decl-parse.js:22:9]
 21 │   function fun() {
 22 │     var static;
    ·         ──────
 23 │   }
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-decl-no-semi-parse.js:20:7]
 19 │   "use strict"
 20 │   var static;
    ·       ──────
 21 │ }
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-decl-parse.js:20:7]
 19 │   "use strict";
 20 │   var static;
    ·       ──────
 21 │ }
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-expr-inside-func-decl-parse.js:21:7]
 20 │   "use strict";
 21 │   var static;
    ·       ──────
 22 │ }
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-expr-no-semi-parse.js:21:7]
 20 │ 
 21 │   var static;
    ·       ──────
 22 │ });
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/directive-prologue/func-expr-parse.js:21:7]
 20 │ 
 21 │   var static;
    ·       ──────
 22 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/export/escaped-as-export-specifier.js:25:11]
 24 │ export var a = 0;
 25 │ export {a \u0061s b} from "./escaped-as-export-specifier.js";
    ·           ───────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/export/escaped-default.js:24:8]
 23 │ 
 24 │ export d\u0065fault 0;
    ·        ────────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/export/escaped-from.js:24:11]
 23 │ 
 24 │ export {} \u0066rom "./escaped-from.js";
    ·           ─────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/arrow-function/array-destructuring-param-strict-body.js:131:3]
 130 │ 0, ([element]) => {
 131 │   "use strict";
     ·   ─────────────
 132 │ };
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/dflt-params-duplicates.js:59:5]
 58 │ 
 59 │ 0, (x = 0, x) => {
    ·     ┬      ┬
    ·     │      ╰── It can not be redeclared here
    ·     ╰── `x` has already been declared here
 60 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dflt-params-rest.js:63:8]
 62 │ 
 63 │ 0, (...x = []) => {
    ·        ──────
 64 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-init-ary.js:53:10]
 52 │ var f;
 53 │ f = ([...[ x ] = []]) => {
    ·          ──────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-init-id.js:53:10]
 52 │ var f;
 53 │ f = ([...x = []]) => {
    ·          ──────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-init-obj.js:53:10]
 52 │ var f;
 53 │ f = ([...{ x } = []]) => {
    ·          ──────────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-not-final-ary.js:53:7]
 52 │ var f;
 53 │ f = ([...[x], y]) => {
    ·       ──────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-not-final-id.js:53:7]
 52 │ var f;
 53 │ f = ([...x, y]) => {
    ·       ────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/ary-ptrn-rest-not-final-obj.js:53:7]
 52 │ var f;
 53 │ f = ([...{ x }, y]) => {
    ·       ────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-init-ary.js:53:10]
 52 │ var f;
 53 │ f = ([...[ x ] = []] = []) => {
    ·          ──────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-init-id.js:53:10]
 52 │ var f;
 53 │ f = ([...x = []] = []) => {
    ·          ──────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-init-obj.js:53:10]
 52 │ var f;
 53 │ f = ([...{ x } = []] = []) => {
    ·          ──────────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-not-final-ary.js:53:7]
 52 │ var f;
 53 │ f = ([...[x], y] = [1, 2, 3]) => {
    ·       ──────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-not-final-id.js:53:7]
 52 │ var f;
 53 │ f = ([...x, y] = [1, 2, 3]) => {
    ·       ────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/arrow-function/dstr/dflt-ary-ptrn-rest-not-final-obj.js:53:7]
 52 │ var f;
 53 │ f = ([...{ x }, y] = [1, 2, 3]) => {
    ·       ────────
 54 │   
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-break-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ bre\u0061k }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-case-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ c\u0061se }) => {};
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-catch-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ c\u0061tch }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-class-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ cl\u0061ss }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-const-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ \u0063onst }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-continue-escaped.js:41:26]
 40 │ 
 41 │ var x = ({ \u0063ontinue }) => {};
    ·                          ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-debugger-escaped.js:41:26]
 40 │ 
 41 │ var x = ({ \u0064ebugger }) => {};
    ·                          ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-default-escaped-ext.js:41:25]
 40 │ 
 41 │ var x = ({ def\u{61}ult }) => {};
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-default-escaped.js:41:25]
 40 │ 
 41 │ var x = ({ def\u0061ult }) => {};
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-default.js:41:20]
 40 │ 
 41 │ var x = ({ default }) => {};
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-delete-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ \u0064elete }) => {};
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-do-escaped.js:41:20]
 40 │ 
 41 │ var x = ({ \u0064o }) => {};
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-else-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ \u0065lse }) => {};
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-enum-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ \u0065num }) => {};
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-export-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ \u0065xport }) => {};
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-extends-escaped-ext.js:41:25]
 40 │ 
 41 │ var x = ({ \u{65}xtends }) => {};
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-extends-escaped.js:41:25]
 40 │ 
 41 │ var x = ({ \u0065xtends }) => {};
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-extends.js:41:20]
 40 │ 
 41 │ var x = ({ extends }) => {};
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-finally-escaped.js:41:25]
 40 │ 
 41 │ var x = ({ \u0066inally }) => {};
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-for-escaped.js:41:21]
 40 │ 
 41 │ var x = ({ \u0066or }) => {};
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-function-escaped.js:41:26]
 40 │ 
 41 │ var x = ({ \u0066unction }) => {};
    ·                          ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-if-escaped.js:41:20]
 40 │ 
 41 │ var x = ({ i\u0066 }) => {};
    ·                    ─
    ╰────

  × The keyword 'implements' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-implements-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ \u0069mplements }) => {};
    ·            ───────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-import-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ \u0069mport }) => {};
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-in-escaped.js:41:20]
 40 │ 
 41 │ var x = ({ \u0069n }) => {};
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-instanceof-escaped.js:41:28]
 40 │ 
 41 │ var x = ({ \u0069nstanceof }) => {};
    ·                            ─
    ╰────

  × The keyword 'interface' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-interface-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ interf\u0061ce }) => {};
    ·            ──────────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-let-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ l\u0065t }) => {};
    ·            ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-new-escaped.js:41:21]
 40 │ 
 41 │ var x = ({ n\u0065w }) => {};
    ·                     ─
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-package-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ p\u0061ckage }) => {};
    ·            ────────────
    ╰────

  × The keyword 'private' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-private-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ privat\u0065 }) => {};
    ·            ────────────
    ╰────

  × The keyword 'protected' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-protected-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ prot\u0065cted }) => {};
    ·            ──────────────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-public-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ pu\u0062lic }) => {};
    ·            ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-return-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ r\u0065turn }) => {};
    ·                        ─
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-static-escaped.js:41:12]
 40 │ 
 41 │ var x = ({ st\u0061tic }) => {};
    ·            ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-super-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ sup\u0065r }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-switch-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ sw\u0069tch }) => {};
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-this-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ th\u0069s }) => {};
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-throw-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ t\u0068row }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-try-escaped.js:41:21]
 40 │ 
 41 │ var x = ({ tr\u0079 }) => {};
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-typeof-escaped.js:41:24]
 40 │ 
 41 │ var x = ({ typ\u0065of }) => {};
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-var-escaped.js:41:21]
 40 │ 
 41 │ var x = ({ v\u0061r }) => {};
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-void-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ voi\u0064 }) => {};
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-while-escaped.js:41:23]
 40 │ 
 41 │ var x = ({ whil\u0065 }) => {};
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/dstr/syntax-error-ident-ref-with-escaped.js:41:22]
 40 │ 
 41 │ var x = ({ w\u0069th }) => {};
    ·                      ─
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/arrow-function/object-destructuring-param-strict-body.js:131:3]
 130 │ 0, ({property}) => {
 131 │   "use strict";
     ·   ─────────────
 132 │ };
     ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/arrow-function/param-dflt-yield-expr.js:28:8]
 27 │ function *g() {
 28 │   (x = yield) => {};
    ·        ──┬──
    ·          ╰── yield expression not allowed in formal parameter
 29 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/arrow-function/param-dflt-yield-id-strict.js:22:6]
 21 │ 
 22 │ (x = yield) => {};
    ·      ─────
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/params-duplicate.js:34:5]
 33 │ 
 34 │ 0, (a, a) => { };
    ·     ┬  ┬
    ·     │  ╰── It can not be redeclared here
    ·     ╰── `a` has already been declared here
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/arrow-function/rest-param-strict-body.js:131:3]
 130 │ 0, (a,...rest) => {
 131 │   "use strict";
     ·   ─────────────
 132 │ };
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/arrow-function/rest-params-trailing-comma-early-error.js:55:5]
 54 │ 
 55 │ 0, (...a,) => {
    ·     ────
 56 │   
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/arrow-function/static-init-await-binding.js:17:6]
 16 │   static {
 17 │     (await => 0);
    ·      ─────
 18 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/static-init-await-reference.js:17:16]
 16 │   static {
 17 │     ((x = await) => 0);
    ·                ─
 18 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-identifier-futurereservedword.js:25:10]
 24 │ $DONOTEVALUATE();
 25 │ var af = enum => 1;
    ·          ────
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-identifier-strict-futurereservedword.js:28:10]
 27 │ $DONOTEVALUATE();
 28 │ var af = package => 1;
    ·          ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-identifier.js:25:10]
 24 │ $DONOTEVALUATE();
 25 │ var af = switch => 1;
    ·          ──────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-no-arguments.js:20:10]
 19 │ $DONOTEVALUATE();
 20 │ var af = arguments => 1;
    ·          ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-no-eval.js:21:10]
 20 │ $DONOTEVALUATE();
 21 │ var af = eval => 1;
    ·          ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-no-yield.js:21:10]
 20 │ $DONOTEVALUATE();
 21 │ var af = yield => 1;
    ·          ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-bindingidentifier-rest.js:17:10]
 16 │ $DONOTEVALUATE();
 17 │ var af = ...x => x;
    ·          ───
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-arguments.js:25:11]
 24 │ $DONOTEVALUATE();
 25 │ var af = (arguments) => 1;
    ·           ─────────
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-array-1.js:26:11]
 25 │ $DONOTEVALUATE();
 26 │ var af = (x, [x]) => 1;
    ·           ┬   ┬
    ·           │   ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-array-2.js:26:12]
 25 │ $DONOTEVALUATE();
 26 │ var af = ([x, x]) => 1;
    ·            ┬  ┬
    ·            │  ╰── It can not be redeclared here
    ·            ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-array-3.js:28:12]
 27 │ $DONOTEVALUATE();
 28 │ var af = ([x], ...x) => 1;
    ·            ┬      ┬
    ·            │      ╰── It can not be redeclared here
    ·            ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-1.js:26:11]
 25 │ $DONOTEVALUATE();
 26 │ var af = (x, {x}) => 1;
    ·           ┬   ┬
    ·           │   ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-2.js:28:11]
 27 │ $DONOTEVALUATE();
 28 │ var af = (x, {y: x}) => 1;
    ·           ┬      ┬
    ·           │      ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-3.js:28:12]
 27 │ $DONOTEVALUATE();
 28 │ var af = ({x}, {y: x}) => 1;
    ·            ┬       ┬
    ·            │       ╰── It can not be redeclared here
    ·            ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-4.js:30:12]
 29 │ $DONOTEVALUATE();
 30 │ var af = ({x}, ...x) => 1;
    ·            ┬      ┬
    ·            │      ╰── It can not be redeclared here
    ·            ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-5.js:30:15]
 29 │ $DONOTEVALUATE();
 30 │ var af = ({y: x}, ...x) => 1;
    ·               ┬      ┬
    ·               │      ╰── It can not be redeclared here
    ·               ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-binding-object-6.js:28:15]
 27 │ $DONOTEVALUATE();
 28 │ var af = ({y: x, x}) => 1;
    ·               ┬  ┬
    ·               │  ╰── It can not be redeclared here
    ·               ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates-rest.js:24:11]
 23 │ $DONOTEVALUATE();
 24 │ var af = (x, ...x) => 1;
    ·           ┬     ┬
    ·           │     ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-duplicates.js:24:11]
 23 │ $DONOTEVALUATE();
 24 │ var af = (x, x) => 1;
    ·           ┬  ┬
    ·           │  ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-eval.js:25:11]
 24 │ $DONOTEVALUATE();
 25 │ var af = (eval) => 1;
    ·           ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/arrowparameters-cover-no-yield.js:20:11]
 19 │ $DONOTEVALUATE();
 20 │ var af = (yield) => 1;
    ·           ─────
    ╰────

  × Line terminator not permitted before arrow
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/asi-restriction-invalid-parenless-parameters-expression-body.js:17:1]
 16 │ var af = x
 17 │ => x;
    · ──
    ╰────

  × Line terminator not permitted before arrow
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/asi-restriction-invalid-parenless-parameters.js:19:1]
 18 │ var af = x
 19 │ => {};
    · ──
    ╰────

  × Line terminator not permitted before arrow
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/asi-restriction-invalid.js:16:1]
 15 │ var af = ()
 16 │ => {};
    · ──
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/arrow-function/syntax/early-errors/use-strict-with-non-simple-param.js:21:3]
 20 │ var f = (a = 0) => {
 21 │   "use strict";
    ·   ─────────────
 22 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-init-yield-ident-invalid.js:24:10]
 23 │ 
 24 │ 0, [ x = yield ] = [];
    ·          ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-nested-array-invalid.js:24:7]
 23 │ 
 24 │ 0, [[(x, y)]] = [[]];
    ·       ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-nested-array-yield-ident-invalid.js:24:8]
 23 │ 
 24 │ 0, [[x[yield]]] = [[]];
    ·        ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-nested-memberexpr-optchain-prop-ref-init.js:57:5]
 56 │ 
 57 │ 0, [x?.y = 42] = [23];
    ·     ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-invalid.js:24:12]
 23 │ 
 24 │ 0, [{ get x() {} }] = [{}];
    ·            ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-nested-obj-yield-ident-invalid.js:24:11]
 23 │ 
 24 │ 0, [{ x = yield }] = [{}];
    ·           ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-put-obj-literal-optchain-prop-ref-init.js:56:5]
 55 │     
 56 │ ╭─▶ 0, [{
 57 │ │     set y(val) {
 58 │ │       throw new Test262Error('The property should not be accessed.');
 59 │ │     }
 60 │ ╰─▶ }?.y = 42] = [23];
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-target-simple-strict.js:24:5]
 23 │ 
 24 │ 0, [arguments] = [];
    ·     ─────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-elem-target-yield-invalid.js:24:8]
 23 │ 
 24 │ 0, [ x[yield] ] = [];
    ·        ─────
    ╰────

  × Spread must be last element
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-before-element.js:24:5]
 23 │ 
 24 │ 0, [...x, y] = [];
    ·     ────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-before-elision.js:24:9]
 23 │ 
 24 │ 0, [...x,] = [];
    ·         ─
    ╰────

  × Spread must be last element
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-before-rest.js:24:5]
 23 │ 
 24 │ 0, [...x, ...y] = [];
    ·     ────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-elision-invalid.js:24:9]
 23 │ 
 24 │ 0, [...x,] = [];
    ·         ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-init.js:25:8]
 24 │ 
 25 │ 0, [...x = 1] = [];
    ·        ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-nested-array-invalid.js:24:10]
 23 │ 
 24 │ 0, [...[(x, y)]] = [[]];
    ·          ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-nested-array-yield-ident-invalid.js:24:11]
 23 │ 
 24 │ 0, [...[x[yield]]] = [];
    ·           ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-nested-obj-invalid.js:24:15]
 23 │ 
 24 │ 0, [...{ get x() {} }] = [[]];
    ·               ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-nested-obj-yield-ident-invalid.js:24:14]
 23 │ 
 24 │ 0, [...{ x = yield }] = [{}];
    ·              ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/array-rest-yield-ident-invalid.js:25:10]
 24 │ 
 25 │ 0, [...x[yield]] = [];
    ·          ─────
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/assignment/dstr/obj-id-identifier-yield-expr.js:24:6]
 23 │ 
 24 │ 0, { yield } = {};
    ·      ─────
 25 │ 
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-id-identifier-yield-ident-invalid.js:24:6]
 23 │ 
 24 │ 0, { yield } = {};
    ·      ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/assignment/dstr/obj-id-init-simple-strict.js:24:6]
 23 │ 
 24 │ 0, { eval = 0 } = {};
    ·      ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-id-init-yield-ident-invalid.js:24:10]
 23 │ 
 24 │ 0, { x = yield } = {};
    ·          ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/assignment/dstr/obj-id-simple-strict.js:24:6]
 23 │ 
 24 │ 0, { eval } = {};
    ·      ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-elem-init-yield-ident-invalid.js:24:13]
 23 │ 
 24 │ 0, { x: x = yield } = {};
    ·             ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-elem-target-memberexpr-optchain-prop-ref-init.js:57:9]
 56 │ 
 57 │ 0, { x: y?.z = 42 } = { x: 23 };
    ·         ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-elem-target-obj-literal-optchain-prop-ref-init.js:56:9]
 55 │     
 56 │ ╭─▶ 0, { x: {
 57 │ │     set y(val) {
 58 │ │       throw new Test262Error('The property should not be accessed.');
 59 │ │     }
 60 │ ╰─▶ }?.y = 42} = {x: 42};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-elem-target-yield-ident-invalid.js:24:11]
 23 │ 
 24 │ 0, { x: x[yield] } = {};
    ·           ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-nested-array-invalid.js:24:11]
 23 │ 
 24 │ 0, { x: [(x, y)] } = { x: [] };
    ·           ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-nested-array-yield-ident-invalid.js:24:14]
 23 │ 
 24 │ 0, { x: [x = yield] } = { x: [] };
    ·              ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-nested-obj-invalid.js:24:16]
 23 │ 
 24 │ 0, { x: { get x() {} } } = { x: {} };
    ·                ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/obj-prop-nested-obj-yield-ident-invalid.js:24:15]
 23 │ 
 24 │ 0, { x: { x = yield } } = { x: {} };
    ·               ─────
    ╰────

  × Spread must be last element
    ╭─[test262/test/language/expressions/assignment/dstr/obj-rest-not-last-element-invalid.js:25:5]
 24 │ 
 25 │ 0, {...rest, b} = {}
    ·     ───────
 26 │ ;
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-break-escaped.js:41:22]
 40 │ 
 41 │ var x = { bre\u0061k } = { break: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-case-escaped.js:41:21]
 40 │ 
 41 │ var x = { c\u0061se } = { case: 42 };
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-catch-escaped.js:41:22]
 40 │ 
 41 │ var x = { c\u0061tch } = { catch: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-class-escaped.js:41:22]
 40 │ 
 41 │ var x = { cl\u0061ss } = { class: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-const-escaped.js:41:22]
 40 │ 
 41 │ var x = { \u0063onst } = { const: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-continue-escaped.js:41:25]
 40 │ 
 41 │ var x = { \u0063ontinue } = { continue: 42 };
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-debugger-escaped.js:41:25]
 40 │ 
 41 │ var x = { \u0064ebugger } = { debugger: 42 };
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-default-escaped-ext.js:41:24]
 40 │ 
 41 │ var x = { def\u{61}ult } = { default: 42 };
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-default-escaped.js:41:24]
 40 │ 
 41 │ var x = { def\u0061ult } = { default: 42 };
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-default.js:41:19]
 40 │ 
 41 │ var x = { default } = { default: 42 };
    ·                   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-delete-escaped.js:41:23]
 40 │ 
 41 │ var x = { \u0064elete } = { delete: 42 };
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-do-escaped.js:41:19]
 40 │ 
 41 │ var x = { \u0064o } = { do: 42 };
    ·                   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-else-escaped.js:41:21]
 40 │ 
 41 │ var x = { \u0065lse } = { else: 42 };
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-enum-escaped.js:41:21]
 40 │ 
 41 │ var x = { \u0065num } = { enum: 42 };
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-export-escaped.js:41:23]
 40 │ 
 41 │ var x = { \u0065xport } = { export: 42 };
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-extends-escaped-ext.js:41:24]
 40 │ 
 41 │ var x = { \u{65}xtends } = { extends: 42 };
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-extends-escaped.js:41:24]
 40 │ 
 41 │ var x = { \u0065xtends } = { extends: 42 };
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-extends.js:41:19]
 40 │ 
 41 │ var x = { extends } = { extends: 42 };
    ·                   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-finally-escaped.js:41:24]
 40 │ 
 41 │ var x = { \u0066inally } = { finally: 42 };
    ·                        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-for-escaped.js:41:20]
 40 │ 
 41 │ var x = { \u0066or } = { for: 42 };
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-function-escaped.js:41:25]
 40 │ 
 41 │ var x = { \u0066unction } = { function: 42 };
    ·                         ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-if-escaped.js:41:19]
 40 │ 
 41 │ var x = { i\u0066 } = { if: 42 };
    ·                   ─
    ╰────

  × The keyword 'implements' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-implements-escaped.js:41:11]
 40 │ 
 41 │ var x = { \u0069mplements } = { implements: 42 };
    ·           ───────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-import-escaped.js:41:23]
 40 │ 
 41 │ var x = { \u0069mport } = { import: 42 };
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-in-escaped.js:41:19]
 40 │ 
 41 │ var x = { \u0069n } = { in: 42 };
    ·                   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-instanceof-escaped.js:41:27]
 40 │ 
 41 │ var x = { \u0069nstanceof } = { instanceof: 42 };
    ·                           ─
    ╰────

  × The keyword 'interface' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-interface-escaped.js:41:11]
 40 │ 
 41 │ var x = { interf\u0061ce } = { interface: 42 };
    ·           ──────────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-let-escaped.js:41:11]
 40 │ 
 41 │ var x = { l\u0065t } = { let: 42 };
    ·           ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-new-escaped.js:41:20]
 40 │ 
 41 │ var x = { n\u0065w } = { new: 42 };
    ·                    ─
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-package-escaped.js:41:11]
 40 │ 
 41 │ var x = { p\u0061ckage } = { package: 42 };
    ·           ────────────
    ╰────

  × The keyword 'private' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-private-escaped.js:41:11]
 40 │ 
 41 │ var x = { privat\u0065 } = { private: 42 };
    ·           ────────────
    ╰────

  × The keyword 'protected' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-protected-escaped.js:41:11]
 40 │ 
 41 │ var x = { prot\u0065cted } = { protected: 42 };
    ·           ──────────────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-public-escaped.js:41:11]
 40 │ 
 41 │ var x = { pu\u0062lic } = { public: 42 };
    ·           ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-return-escaped.js:41:23]
 40 │ 
 41 │ var x = { r\u0065turn } = { return: 42 };
    ·                       ─
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-static-escaped.js:41:11]
 40 │ 
 41 │ var x = { st\u0061tic } = { static: 42 };
    ·           ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-super-escaped.js:41:22]
 40 │ 
 41 │ var x = { sup\u0065r } = { super: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-switch-escaped.js:41:23]
 40 │ 
 41 │ var x = { sw\u0069tch } = { switch: 42 };
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-this-escaped.js:41:21]
 40 │ 
 41 │ var x = { th\u0069s } = { this: 42 };
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-throw-escaped.js:41:22]
 40 │ 
 41 │ var x = { t\u0068row } = { throw: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-try-escaped.js:41:20]
 40 │ 
 41 │ var x = { tr\u0079 } = { try: 42 };
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-typeof-escaped.js:41:23]
 40 │ 
 41 │ var x = { typ\u0065of } = { typeof: 42 };
    ·                       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-var-escaped.js:41:20]
 40 │ 
 41 │ var x = { v\u0061r } = { var: 42 };
    ·                    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-void-escaped.js:41:21]
 40 │ 
 41 │ var x = { voi\u0064 } = { void: 42 };
    ·                     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-while-escaped.js:41:22]
 40 │ 
 41 │ var x = { whil\u0065 } = { while: 42 };
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignment/dstr/syntax-error-ident-ref-with-escaped.js:41:21]
 40 │ 
 41 │ var x = { w\u0069th } = { with: 42 };
    ·                     ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/assignment/id-arguments-strict.js:17:2]
 16 │ 
 17 │ (arguments) = 20;
    ·  ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/assignment/id-eval-strict.js:17:2]
 16 │ 
 17 │ (eval) = 20;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/non-simple-target.js:19:1]
 18 │ 
 19 │ 1 = 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-assignment-inside-function.js:23:4]
 22 │   var a, b = 2;
 23 │   (a = b) = 1;
    ·    ─────
 24 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-assignment.js:22:2]
 21 │ var a, b = 2;
 22 │ (a = b) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-boolean.js:23:1]
 22 │ 
 23 │ true = 42;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-cover-newtarget.js:30:4]
 29 │ function f() {
 30 │   (new.target) = 1;
    ·    ──────────
 31 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-cover-yieldexpr.js:33:4]
 32 │ function* g() {
 33 │   (yield) = 1;
    ·    ─────
 34 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-newtarget.js:30:3]
 29 │ function f() {
 30 │   new.target = 1;
    ·   ──────────
 31 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-null.js:23:1]
 22 │ 
 23 │ null = 42;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-number.js:23:1]
 22 │ 
 23 │ 42 = 42;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignment/target-string.js:23:1]
 22 │ 
 23 │ 'x' = 42;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-minus-multiplicativeexpression-0.js:21:1]
 20 │ 
 21 │ x - y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-minus-multiplicativeexpression-1.js:21:1]
 20 │ 
 21 │ 1 - 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-minus-multiplicativeexpression-2.js:21:1]
 20 │ 
 21 │ true - false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-plus-multiplicativeexpression-0.js:21:1]
 20 │ 
 21 │ x + y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-plus-multiplicativeexpression-1.js:21:1]
 20 │ 
 21 │ 1 + 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-additiveexpression-plus-multiplicativeexpression-2.js:21:1]
 20 │ 
 21 │ true + false = 1;
    · ────────────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-0.js:21:9]
 20 │ 
 21 │ () => {} = 1;
    ·         ▲
    ╰────
  help: Try insert a semicolon here

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-1.js:21:7]
 20 │ 
 21 │ () => ({}) = 1;
    ·       ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-2.js:21:2]
 20 │ 
 21 │ (x => x) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-3.js:21:2]
 20 │ 
 21 │ ((x) => x) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-4.js:21:2]
 20 │ 
 21 │ (() => 1) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-5.js:21:2]
 20 │ 
 21 │ (() => true) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-arrowfunction-6.js:21:2]
 20 │ 
 21 │ (() => 1) = 1;
    ·  ───────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-0.js:21:15]
 20 │ 
 21 │ async () => {} = 1;
    ·               ▲
    ╰────
  help: Try insert a semicolon here

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-1.js:21:13]
 20 │ 
 21 │ async () => ({}) = 1;
    ·             ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-2.js:21:2]
 20 │ 
 21 │ (async x => x) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-3.js:21:2]
 20 │ 
 21 │ (async (x) => x) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-4.js:21:2]
 20 │ 
 21 │ (async () => 1) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-5.js:21:2]
 20 │ 
 21 │ (async () => true) = 1;
    ·  ────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-asyncarrowfunction-6.js:21:2]
 20 │ 
 21 │ (async () => 1) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseandexpression-bitwise-and-equalityexpression-0.js:21:1]
 20 │ 
 21 │ x & y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseandexpression-bitwise-and-equalityexpression-1.js:21:1]
 20 │ 
 21 │ 1 & 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseandexpression-bitwise-and-equalityexpression-2.js:21:1]
 20 │ 
 21 │ true & false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseorexpression-bitwise-or-bitwisexorexpression-0.js:21:1]
 20 │ 
 21 │ x | y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseorexpression-bitwise-or-bitwisexorexpression-1.js:21:1]
 20 │ 
 21 │ 1 | 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwiseorexpression-bitwise-or-bitwisexorexpression-2.js:21:1]
 20 │ 
 21 │ true | false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwisexorexpression-bitwise-xor-bitwiseandexpression-0.js:21:1]
 20 │ 
 21 │ x ^ y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwisexorexpression-bitwise-xor-bitwiseandexpression-1.js:21:1]
 20 │ 
 21 │ 1 ^ 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-bitwisexorexpression-bitwise-xor-bitwiseandexpression-2.js:21:1]
 20 │ 
 21 │ true ^ false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-callexpression-arguments.js:21:1]
 20 │ 
 21 │ f() = 1;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-callexpression-templateliteral.js:21:1]
 20 │ 
 21 │ f()`` = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-coalesceexpressionhead-coalesce-bitwiseorexpression-0.js:21:1]
 20 │ 
 21 │ x ?? y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-coalesceexpressionhead-coalesce-bitwiseorexpression-1.js:21:1]
 20 │ 
 21 │ 1 ?? 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-coalesceexpressionhead-coalesce-bitwiseorexpression-2.js:21:1]
 20 │ 
 21 │ true ?? false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-equal-relationalexpression-0.js:21:1]
 20 │ 
 21 │ x == y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-equal-relationalexpression-1.js:21:1]
 20 │ 
 21 │ 1 == 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-equal-relationalexpression-2.js:21:1]
 20 │ 
 21 │ true == false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-not-equal-relationalexpression-0.js:21:1]
 20 │ 
 21 │ x != y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-not-equal-relationalexpression-1.js:21:1]
 20 │ 
 21 │ 1 != 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-abstract-not-equal-relationalexpression-2.js:21:1]
 20 │ 
 21 │ true != false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-equal-relationalexpression-0.js:21:1]
 20 │ 
 21 │ x == y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-equal-relationalexpression-1.js:21:1]
 20 │ 
 21 │ 1 == 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-equal-relationalexpression-2.js:21:1]
 20 │ 
 21 │ true == false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-not-equal-relationalexpression-0.js:21:1]
 20 │ 
 21 │ x !== y = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-not-equal-relationalexpression-1.js:21:1]
 20 │ 
 21 │ 1 !== 2 = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-equalityexpression-strict-not-equal-relationalexpression-2.js:21:1]
 20 │ 
 21 │ true !== false = 1;
    · ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-expression-comma-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x, y = z) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-expression-comma-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (x, y = 1) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-expression-comma-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (x, y = true) = 1;
    ·  ───────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-identifierreference-arguments-strict.js:17:1]
 16 │ 
 17 │ arguments = 1;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-identifierreference-eval-strict.js:17:1]
 16 │ 
 17 │ eval = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-import.meta.js:21:1]
 20 │ 
 21 │ import.meta = 1;
    · ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-importcall.js:20:8]
 19 │ 
 20 │ import() = 1;
    ·        ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x = y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (x = 1) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-assignment-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (x = true) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-coalesce-assignment-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x ??= y) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-coalesce-assignment-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (x ??= 1) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-coalesce-assignment-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (x ??= true) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-and-assignment-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x &&= y) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-and-assignment-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (x &&= 1) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-and-assignment-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (x &&= true) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-or-assignment-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x ||= y) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-or-assignment-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (x ||= 1) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-logical-or-assignment-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (x ||= true) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-minus-minus.js:21:1]
 20 │ 
 21 │ x-- = 1;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-lefthandsideexpression-plus-plus.js:21:1]
 20 │ 
 21 │ x++ = 1;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalandexpression-logical-and-bitwiseorexpression-0.js:21:1]
 20 │ 
 21 │ x && y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalandexpression-logical-and-bitwiseorexpression-1.js:21:1]
 20 │ 
 21 │ 1 && 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalandexpression-logical-and-bitwiseorexpression-2.js:21:1]
 20 │ 
 21 │ true && false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalorexpression-logical-or-logicalandexpression-0.js:21:1]
 20 │ 
 21 │ x || y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalorexpression-logical-or-logicalandexpression-1.js:21:1]
 20 │ 
 21 │ 1 || 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-logicalorexpression-logical-or-logicalandexpression-2.js:21:1]
 20 │ 
 21 │ true || false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-memberexpression-templateliteral.js:21:1]
 20 │ 
 21 │ o.f()`` = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-minus-minus-unaryexpression.js:21:1]
 20 │ 
 21 │ --x = 1;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-0.js:21:1]
 20 │ 
 21 │ x * y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-1.js:21:1]
 20 │ 
 21 │ 1 * 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-2.js:21:1]
 20 │ 
 21 │ true * false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-3.js:21:1]
 20 │ 
 21 │ x / y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-4.js:21:1]
 20 │ 
 21 │ 1 / 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-5.js:21:1]
 20 │ 
 21 │ true / false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-new-memberexpression-arguments.js:21:1]
 20 │ 
 21 │ new f() = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-new-newexpression.js:21:1]
 20 │ 
 21 │ new f = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-optionalexpression.js:22:1]
 21 │ 
 22 │ x?.y = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-plus-plus-unaryexpression.js:21:1]
 20 │ 
 21 │ ++x = 1;
    · ───
    ╰────

  × Expected function name
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-asyncfunctionexpression.js:17:16]
 16 │ 
 17 │ async function () {} = 1;
    ·                ─
    ╰────
  help: Function name is required in function declaration or named export

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-asyncfunctionexpression.js:17:22]
 16 │ 
 17 │ async function () {} = 1;
    ·                      ─
    ╰────

  × Expected function name
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-asyncgeneratorexpression.js:17:16]
 16 │ 
 17 │ async function () {} = 1;
    ·                ─
    ╰────
  help: Function name is required in function declaration or named export

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-asyncgeneratorexpression.js:17:22]
 16 │ 
 17 │ async function () {} = 1;
    ·                      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-classexpression.js:17:10]
 16 │ 
 17 │ class {} = 1;
    ·          ─
    ╰────

  × Expected function name
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-functionexpression.js:17:9]
 16 │ 
 17 │ function() {} = 1;
    ·         ─
    ╰────
  help: Function name is required in function declaration or named export

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-functionexpression.js:17:15]
 16 │ 
 17 │ function() {} = 1;
    ·               ─
    ╰────

  × Expected function name
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-generatorexpression.js:17:12]
 16 │ 
 17 │ function * () {} = 1;
    ·            ─
    ╰────
  help: Function name is required in function declaration or named export

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-generatorexpression.js:17:18]
 16 │ 
 17 │ function * () {} = 1;
    ·                  ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-literal-boolean.js:17:1]
 16 │ 
 17 │ true = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-literal-null.js:17:1]
 16 │ 
 17 │ null = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-literal-numeric.js:17:1]
 16 │ 
 17 │ 0 = 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-literal-string.js:17:1]
 16 │ 
 17 │ '' = 1;
    · ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-objectliteral.js:17:4]
 16 │ 
 17 │ {} = 1;
    ·    ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-regularexpressionliteral.js:17:1]
 16 │ 
 17 │ /1/ = 1;
    · ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-templateliteral.js:17:1]
 16 │ 
 17 │ `` = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-primaryexpression-this.js:17:1]
 16 │ 
 17 │ this = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-or-equal-to-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x >= y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-or-equal-to-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 >= 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-or-equal-to-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true >= false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x > y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 > 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-greater-than-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true > false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-in-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x in y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-in-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 in 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-in-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true in false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-instanceof-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x instanceof y = 1;
    · ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-instanceof-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 instanceof 2 = 1;
    · ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-instanceof-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true instanceof false = 1;
    · ─────────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-or-equal-to-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x <= y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-or-equal-to-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 <= 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-or-equal-to-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true <= false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-shiftexpression-0.js:21:1]
 20 │ 
 21 │ x < y = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-shiftexpression-1.js:21:1]
 20 │ 
 21 │ 1 < 2 = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-relationalexpression-less-than-shiftexpression-2.js:21:1]
 20 │ 
 21 │ true < false = 1;
    · ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-left-additiveexpression-0.js:21:1]
 20 │ 
 21 │ x << y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-left-additiveexpression-1.js:21:1]
 20 │ 
 21 │ 1 << 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-left-additiveexpression-2.js:21:1]
 20 │ 
 21 │ true << false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-right-additiveexpression-0.js:21:1]
 20 │ 
 21 │ x >> y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-right-additiveexpression-1.js:21:1]
 20 │ 
 21 │ 1 >> 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-bitwise-right-additiveexpression-2.js:21:1]
 20 │ 
 21 │ true >> false = 1;
    · ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-unsigned-bitwise-right-additiveexpression-0.js:21:1]
 20 │ 
 21 │ x >>> y = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-unsigned-bitwise-right-additiveexpression-1.js:21:1]
 20 │ 
 21 │ 1 >>> 2 = 1;
    · ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shiftexpression-unsigned-bitwise-right-additiveexpression-2.js:21:1]
 20 │ 
 21 │ true >>> false = 1;
    · ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-0.js:21:2]
 20 │ 
 21 │ (x ? y : z) = 1;
    ·  ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-1.js:21:2]
 20 │ 
 21 │ (1 ? 2 : 3) = 1;
    ·  ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-2.js:21:2]
 20 │ 
 21 │ (true ? false : true) = 1;
    ·  ───────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-delete-unaryexpression.js:21:1]
 20 │ 
 21 │ delete x.y = 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-exclamation-unaryexpression-0.js:21:1]
 20 │ 
 21 │ !x = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-exclamation-unaryexpression-1.js:21:1]
 20 │ 
 21 │ !1 = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-exclamation-unaryexpression-2.js:21:1]
 20 │ 
 21 │ !true = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-minus-unaryexpression-0.js:21:1]
 20 │ 
 21 │ -x = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-minus-unaryexpression-1.js:21:1]
 20 │ 
 21 │ -1 = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-minus-unaryexpression-2.js:21:1]
 20 │ 
 21 │ -true = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-plus-unaryexpression-0.js:21:1]
 20 │ 
 21 │ +x = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-plus-unaryexpression-1.js:21:1]
 20 │ 
 21 │ +1 = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-plus-unaryexpression-2.js:21:1]
 20 │ 
 21 │ +true = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-tilde-unaryexpression-0.js:21:1]
 20 │ 
 21 │ ~x = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-tilde-unaryexpression-1.js:21:1]
 20 │ 
 21 │ ~1 = 1;
    · ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-tilde-unaryexpression-2.js:21:1]
 20 │ 
 21 │ ~true = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-typeof-unaryexpression-0.js:21:1]
 20 │ 
 21 │ typeof x = 1;
    · ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-typeof-unaryexpression-1.js:21:1]
 20 │ 
 21 │ typeof 1 = 1;
    · ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-typeof-unaryexpression-2.js:21:1]
 20 │ 
 21 │ typeof true = 1;
    · ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-void-unaryexpression-0.js:21:1]
 20 │ 
 21 │ void x = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-void-unaryexpression-1.js:21:1]
 20 │ 
 21 │ void 1 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-unaryexpression-void-unaryexpression-2.js:21:1]
 20 │ 
 21 │ void true = 1;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-updateexpression-star-star-exponentiationexpression-0.js:22:1]
 21 │ 
 22 │ x ** y = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-updateexpression-star-star-exponentiationexpression-1.js:22:1]
 21 │ 
 22 │ 1 ** 2 = 1;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-updateexpression-star-star-exponentiationexpression-2.js:22:1]
 21 │ 
 22 │ true ** false = 1;
    · ─────────────
    ╰────

  × A 'yield' expression is only allowed in a generator body.
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-yieldexpression-0.js:21:1]
 20 │ 
 21 │ yield x = 1;
    · ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/direct-yieldexpression-1.js:21:1]
 20 │ 
 21 │ yield * x = 1;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-minus-multiplicativeexpression-0.js:24:2]
 23 │ 
 24 │ (x - y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-minus-multiplicativeexpression-1.js:24:2]
 23 │ 
 24 │ (1 - 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-minus-multiplicativeexpression-2.js:24:2]
 23 │ 
 24 │ (true - false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-plus-multiplicativeexpression-0.js:24:2]
 23 │ 
 24 │ (x + y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-plus-multiplicativeexpression-1.js:24:2]
 23 │ 
 24 │ (1 + 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-additiveexpression-plus-multiplicativeexpression-2.js:24:2]
 23 │ 
 24 │ (true + false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-0.js:24:2]
 23 │ 
 24 │ (() => {}) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-1.js:24:2]
 23 │ 
 24 │ (() => ({})) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-2.js:24:3]
 23 │ 
 24 │ ((x => x)) = 1;
    ·   ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-3.js:24:3]
 23 │ 
 24 │ (((x) => x)) = 1;
    ·   ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-4.js:24:3]
 23 │ 
 24 │ ((() => 1)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-5.js:24:3]
 23 │ 
 24 │ ((() => true)) = 1;
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-arrowfunction-6.js:24:3]
 23 │ 
 24 │ ((() => 1)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-0.js:24:2]
 23 │ 
 24 │ (async () => {}) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-1.js:24:2]
 23 │ 
 24 │ (async () => ({})) = 1;
    ·  ────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-2.js:24:3]
 23 │ 
 24 │ ((async x => x)) = 1;
    ·   ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-3.js:24:3]
 23 │ 
 24 │ ((async (x) => x)) = 1;
    ·   ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-4.js:24:3]
 23 │ 
 24 │ ((async () => 1)) = 1;
    ·   ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-5.js:24:3]
 23 │ 
 24 │ ((async () => true)) = 1;
    ·   ────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-asyncarrowfunction-6.js:24:3]
 23 │ 
 24 │ ((async () => 1)) = 1;
    ·   ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseandexpression-bitwise-and-equalityexpression-0.js:24:2]
 23 │ 
 24 │ (x & y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseandexpression-bitwise-and-equalityexpression-1.js:24:2]
 23 │ 
 24 │ (1 & 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseandexpression-bitwise-and-equalityexpression-2.js:24:2]
 23 │ 
 24 │ (true & false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseorexpression-bitwise-or-bitwisexorexpression-0.js:24:2]
 23 │ 
 24 │ (x | y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseorexpression-bitwise-or-bitwisexorexpression-1.js:24:2]
 23 │ 
 24 │ (1 | 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwiseorexpression-bitwise-or-bitwisexorexpression-2.js:24:2]
 23 │ 
 24 │ (true | false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwisexorexpression-bitwise-xor-bitwiseandexpression-0.js:24:2]
 23 │ 
 24 │ (x ^ y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwisexorexpression-bitwise-xor-bitwiseandexpression-1.js:24:2]
 23 │ 
 24 │ (1 ^ 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-bitwisexorexpression-bitwise-xor-bitwiseandexpression-2.js:24:2]
 23 │ 
 24 │ (true ^ false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-callexpression-arguments.js:24:2]
 23 │ 
 24 │ (f()) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-callexpression-templateliteral.js:24:2]
 23 │ 
 24 │ (f()``) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-coalesceexpressionhead-coalesce-bitwiseorexpression-0.js:24:2]
 23 │ 
 24 │ (x ?? y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-coalesceexpressionhead-coalesce-bitwiseorexpression-1.js:24:2]
 23 │ 
 24 │ (1 ?? 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-coalesceexpressionhead-coalesce-bitwiseorexpression-2.js:24:2]
 23 │ 
 24 │ (true ?? false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-equal-relationalexpression-0.js:24:2]
 23 │ 
 24 │ (x == y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-equal-relationalexpression-1.js:24:2]
 23 │ 
 24 │ (1 == 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-equal-relationalexpression-2.js:24:2]
 23 │ 
 24 │ (true == false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-not-equal-relationalexpression-0.js:24:2]
 23 │ 
 24 │ (x != y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-not-equal-relationalexpression-1.js:24:2]
 23 │ 
 24 │ (1 != 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-abstract-not-equal-relationalexpression-2.js:24:2]
 23 │ 
 24 │ (true != false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-equal-relationalexpression-0.js:24:2]
 23 │ 
 24 │ (x == y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-equal-relationalexpression-1.js:24:2]
 23 │ 
 24 │ (1 == 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-equal-relationalexpression-2.js:24:2]
 23 │ 
 24 │ (true == false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-not-equal-relationalexpression-0.js:24:2]
 23 │ 
 24 │ (x !== y) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-not-equal-relationalexpression-1.js:24:2]
 23 │ 
 24 │ (1 !== 2) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-equalityexpression-strict-not-equal-relationalexpression-2.js:24:2]
 23 │ 
 24 │ (true !== false) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-expression-comma-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x, y = z)) = 1;
    ·   ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-expression-comma-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((x, y = 1)) = 1;
    ·   ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-expression-comma-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((x, y = true)) = 1;
    ·   ───────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-identifierreference-arguments-strict.js:20:2]
 19 │ 
 20 │ (arguments) = 1;
    ·  ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-identifierreference-eval-strict.js:20:2]
 19 │ 
 20 │ (eval) = 1;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-import.meta.js:24:2]
 23 │ 
 24 │ (import.meta) = 1;
    ·  ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-importcall.js:23:9]
 22 │ 
 23 │ (import()) = 1;
    ·         ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x = y)) = 1;
    ·   ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((x = 1)) = 1;
    ·   ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-assignment-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((x = true)) = 1;
    ·   ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-coalesce-assignment-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x ??= y)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-coalesce-assignment-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((x ??= 1)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-coalesce-assignment-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((x ??= true)) = 1;
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-and-assignment-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x &&= y)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-and-assignment-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((x &&= 1)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-and-assignment-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((x &&= true)) = 1;
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-or-assignment-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x ||= y)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-or-assignment-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((x ||= 1)) = 1;
    ·   ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-logical-or-assignment-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((x ||= true)) = 1;
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-minus-minus.js:24:2]
 23 │ 
 24 │ (x--) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-lefthandsideexpression-plus-plus.js:24:2]
 23 │ 
 24 │ (x++) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalandexpression-logical-and-bitwiseorexpression-0.js:24:2]
 23 │ 
 24 │ (x && y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalandexpression-logical-and-bitwiseorexpression-1.js:24:2]
 23 │ 
 24 │ (1 && 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalandexpression-logical-and-bitwiseorexpression-2.js:24:2]
 23 │ 
 24 │ (true && false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalorexpression-logical-or-logicalandexpression-0.js:24:2]
 23 │ 
 24 │ (x || y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalorexpression-logical-or-logicalandexpression-1.js:24:2]
 23 │ 
 24 │ (1 || 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-logicalorexpression-logical-or-logicalandexpression-2.js:24:2]
 23 │ 
 24 │ (true || false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-memberexpression-templateliteral.js:24:2]
 23 │ 
 24 │ (o.f()``) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-minus-minus-unaryexpression.js:24:2]
 23 │ 
 24 │ (--x) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-0.js:24:2]
 23 │ 
 24 │ (x * y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-1.js:24:2]
 23 │ 
 24 │ (1 * 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-2.js:24:2]
 23 │ 
 24 │ (true * false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-3.js:24:2]
 23 │ 
 24 │ (x / y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-4.js:24:2]
 23 │ 
 24 │ (1 / 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-multiplicativeexpression-multiplicativeoperator-exponentiationexpression-5.js:24:2]
 23 │ 
 24 │ (true / false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-new-memberexpression-arguments.js:24:2]
 23 │ 
 24 │ (new f()) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-new-newexpression.js:24:2]
 23 │ 
 24 │ (new f) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-optionalexpression.js:25:2]
 24 │ 
 25 │ (x?.y) = 1;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-plus-plus-unaryexpression.js:24:2]
 23 │ 
 24 │ (++x) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-asyncfunctionexpression.js:20:2]
 19 │ 
 20 │ (async function () {}) = 1;
    ·  ────────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-asyncgeneratorexpression.js:20:2]
 19 │ 
 20 │ (async function () {}) = 1;
    ·  ────────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-classexpression.js:20:2]
 19 │ 
 20 │ (class {}) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-functionexpression.js:20:2]
 19 │ 
 20 │ (function() {}) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-generatorexpression.js:20:2]
 19 │ 
 20 │ (function * () {}) = 1;
    ·  ────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-literal-boolean.js:20:2]
 19 │ 
 20 │ (true) = 1;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-literal-null.js:20:2]
 19 │ 
 20 │ (null) = 1;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-literal-numeric.js:20:2]
 19 │ 
 20 │ (0) = 1;
    ·  ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-literal-string.js:20:2]
 19 │ 
 20 │ ('') = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-objectliteral.js:20:1]
 19 │ 
 20 │ ({}) = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-regularexpressionliteral.js:20:2]
 19 │ 
 20 │ (/1/) = 1;
    ·  ───
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-templateliteral.js:20:2]
 19 │ 
 20 │ (``) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-primaryexpression-this.js:20:2]
 19 │ 
 20 │ (this) = 1;
    ·  ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-or-equal-to-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x >= y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-or-equal-to-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 >= 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-or-equal-to-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true >= false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x > y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 > 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-greater-than-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true > false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-in-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x in y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-in-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 in 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-in-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true in false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-instanceof-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x instanceof y) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-instanceof-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 instanceof 2) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-instanceof-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true instanceof false) = 1;
    ·  ─────────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-or-equal-to-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x <= y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-or-equal-to-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 <= 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-or-equal-to-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true <= false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-shiftexpression-0.js:24:2]
 23 │ 
 24 │ (x < y) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-shiftexpression-1.js:24:2]
 23 │ 
 24 │ (1 < 2) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-relationalexpression-less-than-shiftexpression-2.js:24:2]
 23 │ 
 24 │ (true < false) = 1;
    ·  ────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-left-additiveexpression-0.js:24:2]
 23 │ 
 24 │ (x << y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-left-additiveexpression-1.js:24:2]
 23 │ 
 24 │ (1 << 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-left-additiveexpression-2.js:24:2]
 23 │ 
 24 │ (true << false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-right-additiveexpression-0.js:24:2]
 23 │ 
 24 │ (x >> y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-right-additiveexpression-1.js:24:2]
 23 │ 
 24 │ (1 >> 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-bitwise-right-additiveexpression-2.js:24:2]
 23 │ 
 24 │ (true >> false) = 1;
    ·  ─────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-unsigned-bitwise-right-additiveexpression-0.js:24:2]
 23 │ 
 24 │ (x >>> y) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-unsigned-bitwise-right-additiveexpression-1.js:24:2]
 23 │ 
 24 │ (1 >>> 2) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shiftexpression-unsigned-bitwise-right-additiveexpression-2.js:24:2]
 23 │ 
 24 │ (true >>> false) = 1;
    ·  ──────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-0.js:24:3]
 23 │ 
 24 │ ((x ? y : z)) = 1;
    ·   ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-1.js:24:3]
 23 │ 
 24 │ ((1 ? 2 : 3)) = 1;
    ·   ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-shortcircuitexpression-question-assignmentexpression-else-assignmentexpression-2.js:24:3]
 23 │ 
 24 │ ((true ? false : true)) = 1;
    ·   ───────────────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-delete-unaryexpression.js:24:2]
 23 │ 
 24 │ (delete x.y) = 1;
    ·  ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-exclamation-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (!x) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-exclamation-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (!1) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-exclamation-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (!true) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-minus-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (-x) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-minus-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (-1) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-minus-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (-true) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-plus-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (+x) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-plus-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (+1) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-plus-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (+true) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-tilde-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (~x) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-tilde-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (~1) = 1;
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-tilde-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (~true) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-typeof-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (typeof x) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-typeof-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (typeof 1) = 1;
    ·  ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-typeof-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (typeof true) = 1;
    ·  ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-void-unaryexpression-0.js:24:2]
 23 │ 
 24 │ (void x) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-void-unaryexpression-1.js:24:2]
 23 │ 
 24 │ (void 1) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-unaryexpression-void-unaryexpression-2.js:24:2]
 23 │ 
 24 │ (void true) = 1;
    ·  ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-updateexpression-star-star-exponentiationexpression-0.js:25:2]
 24 │ 
 25 │ (x ** y) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-updateexpression-star-star-exponentiationexpression-1.js:25:2]
 24 │ 
 25 │ (1 ** 2) = 1;
    ·  ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-updateexpression-star-star-exponentiationexpression-2.js:25:2]
 24 │ 
 25 │ (true ** false) = 1;
    ·  ─────────────
    ╰────

  × A 'yield' expression is only allowed in a generator body.
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-yieldexpression-0.js:24:2]
 23 │ 
 24 │ (yield x) = 1;
    ·  ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-yieldexpression-0.js:24:2]
 23 │ 
 24 │ (yield x) = 1;
    ·  ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/assignmenttargettype/parenthesized-yieldexpression-1.js:24:2]
 23 │ 
 24 │ (yield * x) = 1;
    ·  ─────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-arrow-function/array-destructuring-param-strict-body.js:123:3]
 122 │ (async ([element]) => {
 123 │   "use strict";
     ·   ─────────────
 124 │ });
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-binding-identifier-escaped.js:34:7]
 33 │ async () => {
 34 │   var \u0061wait;
    ·       ──────────
 35 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-binding-identifier.js:34:7]
 33 │ async () => {
 34 │   var await;
    ·       ─────
 35 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-identifier-reference-escaped.js:34:8]
 33 │ async () => {
 34 │   void \u0061wait;
    ·        ──────────
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-identifier-reference-escaped.js:34:18]
 33 │ async () => {
 34 │   void \u0061wait;
    ·                  ─
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-identifier-reference.js:34:13]
 33 │ async () => {
 34 │   void await;
    ·             ─
 35 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-label-identifier-escaped.js:34:3]
 33 │ async () => {
 34 │   \u0061wait: ;
    ·   ──────────
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-label-identifier-escaped.js:34:13]
 33 │ async () => {
 34 │   \u0061wait: ;
    ·             ─
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-label-identifier.js:34:8]
 33 │ async () => {
 34 │   await: ;
    ·        ─
 35 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-param-ident-nested-arrow-parameter-position.js:17:11]
 16 │ 
 17 │ async(a = await => {}) => {};
    ·           ─────
    ╰────

  × await expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-param-nested-arrow-body-position.js:17:19]
 16 │ 
 17 │ async() => { (a = await/r/g) => {} };
    ·                   ────┬────
    ·                       ╰── await expression not allowed in formal parameter
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-param-nested-arrow-parameter-position.js:17:12]
 16 │ 
 17 │ async(a = (await) => {}) => {};
    ·            ─────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/await-as-param-rest-nested-arrow-parameter-position.js:17:15]
 16 │ 
 17 │ async(a = (...await) => {}) => {};
    ·               ─────
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/async-arrow-function/dflt-params-duplicates.js:51:9]
 50 │ 
 51 │ (async (x = 0, x) => {
    ·         ┬      ┬
    ·         │      ╰── It can not be redeclared here
    ·         ╰── `x` has already been declared here
 52 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-arrow-function/dflt-params-rest.js:55:12]
 54 │ 
 55 │ (async (...x = []) => {
    ·            ──────
 56 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-NSPL-with-USD.js:17:19]
 16 │ 
 17 │ async (x = 1) => {"use strict"}
    ·                   ────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-arguments-in-formal-parameters.js:17:7]
 16 │ 
 17 │ async(arguments) => {  }
    ·       ─────────
 18 │ 
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-await-in-formals-default.js:15:17]
 14 │ $DONOTEVALUATE();
 15 │ async(x = await) => {  }
    ·                 ▲
    ╰────
  help: Try insert a semicolon here

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-await-in-formals.js:15:7]
 14 │ $DONOTEVALUATE();
 15 │ async(await) => {  }
    ·       ─────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-body-contains-super-call.js:16:17]
 15 │ 
 16 │ async(foo) => { super() };
    ·                 ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-body-contains-super-property.js:16:17]
 15 │ 
 16 │ async(foo) => { super.prop };
    ·                 ─────
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-duplicate-parameters.js:36:7]
 35 │ 
 36 │ async(a, a) => { }
    ·       ┬  ┬
    ·       │  ╰── It can not be redeclared here
    ·       ╰── `a` has already been declared here
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-eval-in-formal-parameters.js:17:7]
 16 │ 
 17 │ async(eval) => {  }
    ·       ────
    ╰────

  × Identifier `bar` has already been declared
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-formals-body-duplicate.js:16:7]
 15 │ 
 16 │ async(bar) => { let bar; }
    ·       ─┬─           ─┬─
    ·        │             ╰── It can not be redeclared here
    ·        ╰── `bar` has already been declared here
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-formals-contains-super-call.js:16:13]
 15 │ 
 16 │ async(foo = super()) => {}
    ·             ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-formals-contains-super-property.js:16:14]
 15 │ 
 16 │ async (foo = super.foo) => { }
    ·              ─────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-arrow-function/early-errors-arrow-formals-lineterminator.js:34:6]
 33 │ async
 34 │ (foo) => { }
    ·      ▲
    ╰────
  help: Try insert a semicolon here

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-arrow-function/escaped-async.js:25:1]
 24 │ 
 25 │ \u0061sync () => {}
    · ──────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-arrow-function/object-destructuring-param-strict-body.js:123:3]
 122 │ (async ({property}) => {
 123 │   "use strict";
     ·   ─────────────
 124 │ });
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-arrow-function/rest-param-strict-body.js:123:3]
 122 │ (async (a,...rest) => {
 123 │   "use strict";
     ·   ─────────────
 124 │ });
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/async-arrow-function/rest-params-trailing-comma-early-error.js:47:9]
 46 │ 
 47 │ (async (...a,) => {
    ·         ────
 48 │   
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-function/await-as-binding-identifier-escaped.js:30:7]
 29 │ var asyncFn = async function () {
 30 │   var \u0061wait;
    ·       ──────────
 31 │ };
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-function/await-as-binding-identifier.js:30:7]
 29 │ var asyncFn = async function () {
 30 │   var await;
    ·       ─────
 31 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-function/await-as-identifier-reference-escaped.js:30:8]
 29 │ var asyncFn = async function () {
 30 │   void \u0061wait;
    ·        ──────────
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/await-as-identifier-reference-escaped.js:30:18]
 29 │ var asyncFn = async function () {
 30 │   void \u0061wait;
    ·                  ─
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/await-as-identifier-reference.js:30:13]
 29 │ var asyncFn = async function () {
 30 │   void await;
    ·             ─
 31 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-function/await-as-label-identifier-escaped.js:30:3]
 29 │ var asyncFn = async function () {
 30 │   \u0061wait: ;
    ·   ──────────
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/await-as-label-identifier-escaped.js:30:13]
 29 │ var asyncFn = async function () {
 30 │   \u0061wait: ;
    ·             ─
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/await-as-label-identifier.js:30:8]
 29 │ var asyncFn = async function () {
 30 │   await: ;
    ·        ─
 31 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-NSPL-with-USD.js:17:26]
 16 │ 
 17 │ (async function (x = 1) {"use strict"})
    ·                          ────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-binding-identifier-arguments.js:17:17]
 16 │ $DONOTEVALUATE();
 17 │ (async function arguments () {  })
    ·                 ─────────
 18 │ 
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-binding-identifier-eval.js:17:17]
 16 │ $DONOTEVALUATE();
 17 │ (async function eval () { })
    ·                 ────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-body-contains-super-call.js:16:29]
 15 │ 
 16 │ (async function foo (foo) { super() })
    ·                             ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-body-contains-super-property.js:16:29]
 15 │ 
 16 │ (async function foo (foo) { super.prop });
    ·                             ─────
 17 │ 
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-eval-in-formal-parameters.js:17:22]
 16 │ 
 17 │ (async function foo (eval) {  })
    ·                      ────
    ╰────

  × Identifier `bar` has already been declared
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-formals-body-duplicate.js:16:22]
 15 │ 
 16 │ (async function foo (bar) { let bar; });
    ·                      ─┬─        ─┬─
    ·                       │          ╰── It can not be redeclared here
    ·                       ╰── `bar` has already been declared here
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-formals-contains-super-call.js:16:28]
 15 │ 
 16 │ (async function foo (foo = super()) { var bar; });
    ·                            ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-formals-contains-super-property.js:16:28]
 15 │ 
 16 │ (async function foo (foo = super.foo) { var bar; });
    ·                            ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/async-function/early-errors-expression-not-simple-assignment-target.js:17:2]
 16 │ 
 17 │ (async function foo() { } = 1)
    ·  ────────────────────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-function/escaped-async.js:25:6]
 24 │ 
 25 │ void \u0061sync function f(){}
    ·      ──────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/named-array-destructuring-param-strict-body.js:109:3]
 108 │ (async function f([element]) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-function/named-await-as-binding-identifier-escaped.js:30:7]
 29 │ var asyncFn = async function asyncFn() {
 30 │   var \u0061wait;
    ·       ──────────
 31 │ };
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-function/named-await-as-binding-identifier.js:30:7]
 29 │ var asyncFn = async function asyncFn() {
 30 │   var await;
    ·       ─────
 31 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-function/named-await-as-identifier-reference-escaped.js:30:8]
 29 │ var asyncFn = async function asyncFn() {
 30 │   void \u0061wait;
    ·        ──────────
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/named-await-as-identifier-reference-escaped.js:30:18]
 29 │ var asyncFn = async function asyncFn() {
 30 │   void \u0061wait;
    ·                  ─
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/named-await-as-identifier-reference.js:30:13]
 29 │ var asyncFn = async function asyncFn() {
 30 │   void await;
    ·             ─
 31 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-function/named-await-as-label-identifier-escaped.js:30:3]
 29 │ var asyncFn = async function asyncFn() {
 30 │   \u0061wait: ;
    ·   ──────────
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/named-await-as-label-identifier-escaped.js:30:13]
 29 │ var asyncFn = async function asyncFn() {
 30 │   \u0061wait: ;
    ·             ─
 31 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-function/named-await-as-label-identifier.js:30:8]
 29 │ var asyncFn = async function asyncFn() {
 30 │   await: ;
    ·        ─
 31 │ };
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/async-function/named-dflt-params-duplicates.js:37:19]
 36 │ 
 37 │ (async function f(x = 0, x) {
    ·                   ┬      ┬
    ·                   │      ╰── It can not be redeclared here
    ·                   ╰── `x` has already been declared here
 38 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-function/named-dflt-params-rest.js:41:22]
 40 │ 
 41 │ (async function f(...x = []) {
    ·                      ──────
 42 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/named-object-destructuring-param-strict-body.js:109:3]
 108 │ (async function f({property}) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/named-rest-param-strict-body.js:109:3]
 108 │ (async function f(a,...rest) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/async-function/named-rest-params-trailing-comma-early-error.js:34:19]
 33 │ 
 34 │ (async function f(...a,) {
    ·                   ────
 35 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/nameless-array-destructuring-param-strict-body.js:109:3]
 108 │ (async function([element]) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/async-function/nameless-dflt-params-duplicates.js:37:17]
 36 │ 
 37 │ (async function(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 38 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-function/nameless-dflt-params-rest.js:41:20]
 40 │ 
 41 │ (async function(...x = []) {
    ·                    ──────
 42 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/nameless-object-destructuring-param-strict-body.js:109:3]
 108 │ (async function({property}) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-function/nameless-rest-param-strict-body.js:109:3]
 108 │ (async function(a,...rest) {
 109 │   "use strict";
     ·   ─────────────
 110 │ });
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/async-function/nameless-rest-params-trailing-comma-early-error.js:34:17]
 33 │ 
 34 │ (async function(...a,) {
    ·                 ────
 35 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/array-destructuring-param-strict-body.js:112:3]
 111 │ 0, async function*([element]) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/await-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *() {
 31 │   var \u0061wait;
    ·       ──────────
 32 │ };
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/await-as-binding-identifier.js:31:7]
 30 │ var gen = async function *() {
 31 │   var await;
    ·       ─────
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/await-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *() {
 31 │   void \u0061wait;
    ·        ──────────
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/await-as-identifier-reference-escaped.js:31:18]
 30 │ var gen = async function *() {
 31 │   void \u0061wait;
    ·                  ─
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/await-as-identifier-reference.js:31:13]
 30 │ var gen = async function *() {
 31 │   void await;
    ·             ─
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/await-as-label-identifier-escaped.js:31:3]
 30 │ var gen = async function *() {
 31 │   \u0061wait: ;
    ·   ──────────
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/await-as-label-identifier-escaped.js:31:13]
 30 │ var gen = async function *() {
 31 │   \u0061wait: ;
    ·             ─
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/await-as-label-identifier.js:31:8]
 30 │ var gen = async function *() {
 31 │   await: ;
    ·        ─
 32 │ };
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/async-generator/dflt-params-duplicates.js:40:20]
 39 │ 
 40 │ 0, async function*(x = 0, x) {
    ·                    ┬      ┬
    ·                    │      ╰── It can not be redeclared here
    ·                    ╰── `x` has already been declared here
 41 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dflt-params-rest.js:44:23]
 43 │ 
 44 │ 0, async function*(...x = []) {
    ·                       ──────
 45 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-init-ary.js:34:25]
 33 │ var f;
 34 │ f = async function*([...[ x ] = []]) {
    ·                         ──────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-init-id.js:34:25]
 33 │ var f;
 34 │ f = async function*([...x = []]) {
    ·                         ──────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-init-obj.js:34:25]
 33 │ var f;
 34 │ f = async function*([...{ x } = []]) {
    ·                         ──────────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-not-final-ary.js:34:22]
 33 │ var f;
 34 │ f = async function*([...[x], y]) {
    ·                      ──────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-not-final-id.js:34:22]
 33 │ var f;
 34 │ f = async function*([...x, y]) {
    ·                      ────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/ary-ptrn-rest-not-final-obj.js:34:22]
 33 │ var f;
 34 │ f = async function*([...{ x }, y]) {
    ·                      ────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-init-ary.js:34:25]
 33 │ var f;
 34 │ f = async function*([...[ x ] = []] = []) {
    ·                         ──────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-init-id.js:34:25]
 33 │ var f;
 34 │ f = async function*([...x = []] = []) {
    ·                         ──────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-init-obj.js:34:25]
 33 │ var f;
 34 │ f = async function*([...{ x } = []] = []) {
    ·                         ──────────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-not-final-ary.js:34:22]
 33 │ var f;
 34 │ f = async function*([...[x], y] = [1, 2, 3]) {
    ·                      ──────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-not-final-id.js:34:22]
 33 │ var f;
 34 │ f = async function*([...x, y] = [1, 2, 3]) {
    ·                      ────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/dflt-ary-ptrn-rest-not-final-obj.js:34:22]
 33 │ var f;
 34 │ f = async function*([...{ x }, y] = [1, 2, 3]) {
    ·                      ────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-init-ary.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...[ x ] = []]) {
    ·                           ──────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-init-id.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...x = []]) {
    ·                           ──────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-init-obj.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...{ x } = []]) {
    ·                           ──────────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-not-final-ary.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...[x], y]) {
    ·                        ──────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-not-final-id.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...x, y]) {
    ·                        ────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-ary-ptrn-rest-not-final-obj.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...{ x }, y]) {
    ·                        ────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-init-ary.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...[ x ] = []] = []) {
    ·                           ──────────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-init-id.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...x = []] = []) {
    ·                           ──────
 35 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-init-obj.js:34:27]
 33 │ var f;
 34 │ f = async function* h([...{ x } = []] = []) {
    ·                           ──────────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-not-final-ary.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...[x], y] = [1, 2, 3]) {
    ·                        ──────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-not-final-id.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...x, y] = [1, 2, 3]) {
    ·                        ────
 35 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/async-generator/dstr/named-dflt-ary-ptrn-rest-not-final-obj.js:34:24]
 33 │ var f;
 34 │ f = async function* h([...{ x }, y] = [1, 2, 3]) {
    ·                        ────────
 35 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-NSPL-with-USD.js:19:26]
 18 │ 
 19 │ (async function*(x = 1) {"use strict"});
    ·                          ────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-arguments-in-formal-parameters.js:19:18]
 18 │ 
 19 │ (async function*(arguments) { });
    ·                  ─────────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-await-as-function-binding-identifier.js:18:18]
 17 │ 
 18 │ (async function* await() { });
    ·                  ─────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-binding-identifier-arguments.js:20:18]
 19 │ 
 20 │ (async function* arguments() { });
    ·                  ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-binding-identifier-eval.js:20:18]
 19 │ 
 20 │ (async function* eval() { });
    ·                  ────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-body-contains-super-call.js:18:22]
 17 │ 
 18 │ (async function*() { super(); });
    ·                      ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-body-contains-super-property.js:18:22]
 17 │ 
 18 │ (async function*() { super.prop; });
    ·                      ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-eval-in-formal-parameters.js:19:18]
 18 │ 
 19 │ (async function*(eval) { });
    ·                  ────
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-body-duplicate-const.js:22:18]
 21 │ 
 22 │ (async function*(a) { const a = 0; });
    ·                  ┬          ┬
    ·                  │          ╰── It can not be redeclared here
    ·                  ╰── `a` has already been declared here
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-body-duplicate-let.js:19:18]
 18 │ 
 19 │ (async function*(a) { let a; });
    ·                  ┬        ┬
    ·                  │        ╰── It can not be redeclared here
    ·                  ╰── `a` has already been declared here
    ╰────

  × await expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-await-expr.js:18:22]
 17 │ 
 18 │ (async function*(x = await 1) { });
    ·                      ───┬───
    ·                         ╰── await expression not allowed in formal parameter
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-await.js:19:18]
 18 │ 
 19 │ (async function*(await) { });
    ·                  ─────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-super-call.js:18:22]
 17 │ 
 18 │ (async function*(a = super()) { });
    ·                      ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-super-property.js:18:22]
 17 │ 
 18 │ (async function*(a = super.prop) { });
    ·                      ─────
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-yield-expr.js:18:22]
 17 │ 
 18 │ (async function*(x = yield) { });
    ·                      ──┬──
    ·                        ╰── yield expression not allowed in formal parameter
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-yield.js:19:18]
 18 │ 
 19 │ (async function*(yield) { });
    ·                  ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-formals-contains-yield.js:19:18]
 18 │ 
 19 │ (async function*(yield) { });
    ·                  ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-label-name-await.js:24:8]
 23 │ (async function*() {
 24 │   await: 1;
    ·        ─
 25 │ });
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-label-name-yield.js:26:8]
 25 │ (async function*() {
 26 │   yield: 1;
    ·        ▲
 27 │ });
    ╰────
  help: Try insert a semicolon here

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-not-simple-assignment-target.js:18:2]
 17 │ 
 18 │ (async function*() { } = 1);
    ·  ─────────────────────
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-yield-as-function-binding-identifier.js:18:18]
 17 │ 
 18 │ (async function* yield() { });
    ·                  ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-yield-as-function-binding-identifier.js:18:18]
 17 │ 
 18 │ (async function* yield() { });
    ·                  ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/early-errors-expression-yield-star-after-newline.js:20:3]
 19 │   yield
 20 │   * 1;
    ·   ─
 21 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/escaped-async.js:25:6]
 24 │ 
 25 │ void \u0061sync function* f(){};
    ·      ──────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/named-array-destructuring-param-strict-body.js:112:3]
 111 │ 0, async function* g([element]) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/named-await-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var \u0061wait;
    ·       ──────────
 32 │ };
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/async-generator/named-await-as-binding-identifier.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var await;
    ·       ─────
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/named-await-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *g() {
 31 │   void \u0061wait;
    ·        ──────────
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/named-await-as-identifier-reference-escaped.js:31:18]
 30 │ var gen = async function *g() {
 31 │   void \u0061wait;
    ·                  ─
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/named-await-as-identifier-reference.js:31:13]
 30 │ var gen = async function *g() {
 31 │   void await;
    ·             ─
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/named-await-as-label-identifier-escaped.js:31:3]
 30 │ var gen = async function *g() {
 31 │   \u0061wait: ;
    ·   ──────────
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/named-await-as-label-identifier-escaped.js:31:13]
 30 │ var gen = async function *g() {
 31 │   \u0061wait: ;
    ·             ─
 32 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/async-generator/named-await-as-label-identifier.js:31:8]
 30 │ var gen = async function *g() {
 31 │   await: ;
    ·        ─
 32 │ };
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/async-generator/named-dflt-params-duplicates.js:40:22]
 39 │ 
 40 │ 0, async function* g(x = 0, x) {
    ·                      ┬      ┬
    ·                      │      ╰── It can not be redeclared here
    ·                      ╰── `x` has already been declared here
 41 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/async-generator/named-dflt-params-rest.js:44:25]
 43 │ 
 44 │ 0, async function* g(...x = []) {
    ·                         ──────
 45 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/named-object-destructuring-param-strict-body.js:112:3]
 111 │ 0, async function* g({property}) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/named-rest-param-strict-body.js:112:3]
 111 │ 0, async function* g(a,...rest) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/async-generator/named-rest-params-trailing-comma-early-error.js:37:22]
 36 │ 
 37 │ 0, async function* g(...a,) {
    ·                      ────
 38 │   
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-binding-identifier.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var yield;
    ·       ─────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-binding-identifier.js:31:7]
 30 │ var gen = async function *g() {
 31 │   var yield;
    ·       ─────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *g() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *g() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-identifier-reference.js:31:8]
 30 │ var gen = async function *g() {
 31 │   void yield;
    ·        ─────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-identifier-reference.js:31:8]
 30 │ var gen = async function *g() {
 31 │   void yield;
    ·        ─────
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-label-identifier-escaped.js:31:3]
 30 │ var gen = async function *g() {
 31 │   yi\u0065ld: ;
    ·   ──────────
 32 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-label-identifier-escaped.js:31:13]
 30 │ var gen = async function *g() {
 31 │   yi\u0065ld: ;
    ·             ▲
 32 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-generator/named-yield-as-label-identifier.js:31:8]
 30 │ var gen = async function *g() {
 31 │   yield: ;
    ·        ▲
 32 │ };
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-identifier-spread-strict.js:37:15]
 36 │        ...(function() {
 37 │           var yield;
    ·               ─────
 38 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/named-yield-identifier-strict.js:29:11]
 28 │   (function() {
 29 │       var yield;
    ·           ─────
 30 │       throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/object-destructuring-param-strict-body.js:112:3]
 111 │ 0, async function*({property}) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/async-generator/rest-param-strict-body.js:112:3]
 111 │ 0, async function*(a,...rest) {
 112 │   "use strict";
     ·   ─────────────
 113 │ };
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/async-generator/rest-params-trailing-comma-early-error.js:37:20]
 36 │ 
 37 │ 0, async function*(...a,) {
    ·                    ────
 38 │   
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/yield-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-as-binding-identifier-escaped.js:31:7]
 30 │ var gen = async function *() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/yield-as-binding-identifier.js:31:7]
 30 │ var gen = async function *() {
 31 │   var yield;
    ·       ─────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-as-binding-identifier.js:31:7]
 30 │ var gen = async function *() {
 31 │   var yield;
    ·       ─────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/yield-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-as-identifier-reference-escaped.js:31:8]
 30 │ var gen = async function *() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/async-generator/yield-as-identifier-reference.js:31:8]
 30 │ var gen = async function *() {
 31 │   void yield;
    ·        ─────
 32 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-as-identifier-reference.js:31:8]
 30 │ var gen = async function *() {
 31 │   void yield;
    ·        ─────
 32 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/async-generator/yield-as-label-identifier-escaped.js:31:3]
 30 │ var gen = async function *() {
 31 │   yi\u0065ld: ;
    ·   ──────────
 32 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-generator/yield-as-label-identifier-escaped.js:31:13]
 30 │ var gen = async function *() {
 31 │   yi\u0065ld: ;
    ·             ▲
 32 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/async-generator/yield-as-label-identifier.js:31:8]
 30 │ var gen = async function *() {
 31 │   yield: ;
    ·        ▲
 32 │ };
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-identifier-spread-strict.js:37:15]
 36 │        ...(function() {
 37 │           var yield;
    ·               ─────
 38 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/async-generator/yield-identifier-strict.js:29:11]
 28 │   (function() {
 29 │       var yield;
    ·           ─────
 30 │       throw new Test262Error();
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/await/await-BindingIdentifier-nested.js:18:12]
 17 │ async function foo() {
 18 │   function await() {
    ·            ─────
 19 │   }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/await/early-errors-await-not-simple-assignment-target.js:18:4]
 17 │ async function foo() {
 18 │   (await 1) = 1;
    ·    ───────
 19 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/await/no-operand.js:18:8]
 17 │ async function foo() {
 18 │   await;
    ·        ─
 19 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/call/S11.2.4_A1.3_T1.js:21:9]
 20 │ 
 21 │ f_arg(1,,2);
    ·         ─
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method/array-destructuring-param-strict-body.js:136:5]
 135 │   async *method([element]) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-binding-identifier.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var await;
    ·         ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-identifier-reference-escaped.js:36:20]
 35 │ var C = class { async *gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-identifier-reference.js:36:15]
 35 │ var C = class { async *gen() {
 36 │     void await;
    ·               ─
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { async *gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { async *gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method/await-as-label-identifier.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     await: ;
    ·          ─
 37 │ }};
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/async-gen-method/dflt-params-duplicates.js:64:17]
 63 │ 0, class {
 64 │   async *method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 65 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/async-gen-method/dflt-params-rest.js:68:20]
 67 │ 0, class {
 68 │   async *method(...x = []) {
    ·                    ──────
 69 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method/object-destructuring-param-strict-body.js:136:5]
 135 │   async *method({property}) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method/rest-param-strict-body.js:136:5]
 135 │   async *method(a,...rest) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/async-gen-method/rest-params-trailing-comma-early-error.js:61:17]
 60 │ 0, class {
 61 │   async *method(...a,) {
    ·                 ────
 62 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { async *gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { async *gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-as-label-identifier.js:36:10]
 35 │ var C = class { async *gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-identifier-spread-strict.js:42:17]
 41 │          ...(function() {
 42 │             var yield;
    ·                 ─────
 43 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method/yield-identifier-strict.js:34:13]
 33 │     (function() {
 34 │         var yield;
    ·             ─────
 35 │         throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method-static/array-destructuring-param-strict-body.js:136:5]
 135 │   static async *method([element]) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var await;
    ·         ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-identifier-reference-escaped.js:36:20]
 35 │ var C = class { static async *gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-identifier-reference.js:36:15]
 35 │ var C = class { static async *gen() {
 36 │     void await;
    ·               ─
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { static async *gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { static async *gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-gen-method-static/await-as-label-identifier.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     await: ;
    ·          ─
 37 │ }};
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/async-gen-method-static/dflt-params-duplicates.js:64:24]
 63 │ 0, class {
 64 │   static async *method(x = 0, x) {
    ·                        ┬      ┬
    ·                        │      ╰── It can not be redeclared here
    ·                        ╰── `x` has already been declared here
 65 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/async-gen-method-static/dflt-params-rest.js:68:27]
 67 │ 0, class {
 68 │   static async *method(...x = []) {
    ·                           ──────
 69 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method-static/object-destructuring-param-strict-body.js:136:5]
 135 │   static async *method({property}) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-gen-method-static/rest-param-strict-body.js:136:5]
 135 │   static async *method(a,...rest) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/async-gen-method-static/rest-params-trailing-comma-early-error.js:61:24]
 60 │ 0, class {
 61 │   static async *method(...a,) {
    ·                        ────
 62 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { static async *gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { static async *gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-as-label-identifier.js:36:10]
 35 │ var C = class { static async *gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-identifier-spread-strict.js:42:17]
 41 │          ...(function() {
 42 │             var yield;
    ·                 ─────
 43 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/async-gen-method-static/yield-identifier-strict.js:34:13]
 33 │     (function() {
 34 │         var yield;
    ·             ─────
 35 │         throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method/array-destructuring-param-strict-body.js:134:5]
 133 │   static async method([element]) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-method/await-as-binding-identifier-escaped.js:37:9]
 36 │   async method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-method/await-as-binding-identifier.js:37:9]
 36 │   async method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-method/await-as-identifier-reference-escaped.js:37:10]
 36 │   async method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method/await-as-identifier-reference-escaped.js:37:20]
 36 │   async method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method/await-as-identifier-reference.js:37:15]
 36 │   async method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-method/await-as-label-identifier-escaped.js:37:5]
 36 │   async method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method/await-as-label-identifier-escaped.js:37:15]
 36 │   async method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method/await-as-label-identifier.js:37:10]
 36 │   async method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/async-method/dflt-params-duplicates.js:62:23]
 61 │ var C = class {
 62 │   static async method(x = 0, x) {
    ·                       ┬      ┬
    ·                       │      ╰── It can not be redeclared here
    ·                       ╰── `x` has already been declared here
 63 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/async-method/dflt-params-rest.js:66:26]
 65 │ var C = class {
 66 │   static async method(...x = []) {
    ·                          ──────
 67 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method/object-destructuring-param-strict-body.js:134:5]
 133 │   static async method({property}) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method/rest-param-strict-body.js:134:5]
 133 │   static async method(a,...rest) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/async-method/rest-params-trailing-comma-early-error.js:58:23]
 57 │ var C = class {
 58 │   static async method(...a,) {
    ·                       ────
 59 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method-static/array-destructuring-param-strict-body.js:134:5]
 133 │   static async method([element]) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-binding-identifier-escaped.js:37:9]
 36 │   static async method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-binding-identifier.js:37:9]
 36 │   static async method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-identifier-reference-escaped.js:37:10]
 36 │   static async method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-identifier-reference-escaped.js:37:20]
 36 │   static async method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-identifier-reference.js:37:15]
 36 │   static async method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-label-identifier-escaped.js:37:5]
 36 │   static async method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-label-identifier-escaped.js:37:15]
 36 │   static async method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/async-method-static/await-as-label-identifier.js:37:10]
 36 │   static async method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/async-method-static/dflt-params-duplicates.js:62:23]
 61 │ var C = class {
 62 │   static async method(x = 0, x) {
    ·                       ┬      ┬
    ·                       │      ╰── It can not be redeclared here
    ·                       ╰── `x` has already been declared here
 63 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/async-method-static/dflt-params-rest.js:66:26]
 65 │ var C = class {
 66 │   static async method(...x = []) {
    ·                          ──────
 67 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method-static/object-destructuring-param-strict-body.js:134:5]
 133 │   static async method({property}) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/async-method-static/rest-param-strict-body.js:134:5]
 133 │   static async method(a,...rest) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/async-method-static/rest-params-trailing-comma-early-error.js:58:23]
 57 │ var C = class {
 58 │   static async method(...a,) {
    ·                       ────
 59 │     
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/class-name-ident-await-escaped-module.js:23:15]
 22 │ 
 23 │ var C = class aw\u0061it {};
    ·               ──────────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-await-escaped-module.js:23:15]
 22 │ 
 23 │ var C = class aw\u0061it {};
    ·               ──────────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/class-name-ident-await-module.js:22:15]
 21 │ 
 22 │ var C = class await {};
    ·               ─────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-await-module.js:22:15]
 21 │ 
 22 │ var C = class await {};
    ·               ─────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-let-escaped.js:28:15]
 27 │ 
 28 │ var C = class l\u0065t {};
    ·               ────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-let.js:28:15]
 27 │ 
 28 │ var C = class let {};
    ·               ───
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-static-escaped.js:28:15]
 27 │ 
 28 │ var C = class st\u0061tic {};
    ·               ───────────
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-static.js:28:15]
 27 │ 
 28 │ var C = class static {};
    ·               ──────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-yield-escaped.js:28:15]
 27 │ 
 28 │ var C = class yi\u0065ld {};
    ·               ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/class-name-ident-yield.js:26:15]
 25 │ 
 26 │ var C = class yield {};
    ·               ─────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-init-ary.js:58:21]
 57 │ var C = class {
 58 │   async *method([...[ x ] = []]) {
    ·                     ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-init-id.js:58:21]
 57 │ var C = class {
 58 │   async *method([...x = []]) {
    ·                     ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-init-obj.js:58:21]
 57 │ var C = class {
 58 │   async *method([...{ x } = []]) {
    ·                     ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-ary.js:58:18]
 57 │ var C = class {
 58 │   async *method([...[x], y]) {
    ·                  ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-id.js:58:18]
 57 │ var C = class {
 58 │   async *method([...x, y]) {
    ·                  ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-obj.js:58:18]
 57 │ var C = class {
 58 │   async *method([...{ x }, y]) {
    ·                  ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-ary.js:58:21]
 57 │ var C = class {
 58 │   async *method([...[ x ] = []] = []) {
    ·                     ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-id.js:58:21]
 57 │ var C = class {
 58 │   async *method([...x = []] = []) {
    ·                     ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-obj.js:58:21]
 57 │ var C = class {
 58 │   async *method([...{ x } = []] = []) {
    ·                     ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:58:18]
 57 │ var C = class {
 58 │   async *method([...[x], y] = [1, 2, 3]) {
    ·                  ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:58:18]
 57 │ var C = class {
 58 │   async *method([...x, y] = [1, 2, 3]) {
    ·                  ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:58:18]
 57 │ var C = class {
 58 │   async *method([...{ x }, y] = [1, 2, 3]) {
    ·                  ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-ary.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...[ x ] = []]) {
    ·                            ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-id.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...x = []]) {
    ·                            ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-obj.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...{ x } = []]) {
    ·                            ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-ary.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...[x], y]) {
    ·                         ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-id.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...x, y]) {
    ·                         ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-obj.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...{ x }, y]) {
    ·                         ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...[ x ] = []] = []) {
    ·                            ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...x = []] = []) {
    ·                            ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:58:28]
 57 │ var C = class {
 58 │   static async *method([...{ x } = []] = []) {
    ·                            ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...[x], y] = [1, 2, 3]) {
    ·                         ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...x, y] = [1, 2, 3]) {
    ·                         ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:58:25]
 57 │ var C = class {
 58 │   static async *method([...{ x }, y] = [1, 2, 3]) {
    ·                         ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-ary.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...[ x ] = []]) {
    ·                       ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-id.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...x = []]) {
    ·                       ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-obj.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...{ x } = []]) {
    ·                       ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-ary.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...[x], y]) {
    ·                    ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-id.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...x, y]) {
    ·                    ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-obj.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...{ x }, y]) {
    ·                    ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-ary.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...[ x ] = []] = []) {
    ·                       ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-id.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...x = []] = []) {
    ·                       ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-obj.js:58:23]
 57 │ var C = class {
 58 │   async * #method([...{ x } = []] = []) {
    ·                       ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...[x], y] = [1, 2, 3]) {
    ·                    ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...x, y] = [1, 2, 3]) {
    ·                    ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:58:20]
 57 │ var C = class {
 58 │   async * #method([...{ x }, y] = [1, 2, 3]) {
    ·                    ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-ary.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...[ x ] = []]) {
    ·                              ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-id.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...x = []]) {
    ·                              ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-obj.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...{ x } = []]) {
    ·                              ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-ary.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...[x], y]) {
    ·                           ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-id.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...x, y]) {
    ·                           ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-obj.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...{ x }, y]) {
    ·                           ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...[ x ] = []] = []) {
    ·                              ──────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...x = []] = []) {
    ·                              ──────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:58:30]
 57 │ var C = class {
 58 │   static async * #method([...{ x } = []] = []) {
    ·                              ──────────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...[x], y] = [1, 2, 3]) {
    ·                           ──────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...x, y] = [1, 2, 3]) {
    ·                           ────
 59 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:58:27]
 57 │ var C = class {
 58 │   static async * #method([...{ x }, y] = [1, 2, 3]) {
    ·                           ────────
 59 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-init-ary.js:77:15]
 76 │ var C = class {
 77 │   *method([...[ x ] = []]) {
    ·               ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-init-id.js:77:15]
 76 │ var C = class {
 77 │   *method([...x = []]) {
    ·               ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-init-obj.js:77:15]
 76 │ var C = class {
 77 │   *method([...{ x } = []]) {
    ·               ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-not-final-ary.js:77:12]
 76 │ var C = class {
 77 │   *method([...[x], y]) {
    ·            ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-not-final-id.js:77:12]
 76 │ var C = class {
 77 │   *method([...x, y]) {
    ·            ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-ary-ptrn-rest-not-final-obj.js:77:12]
 76 │ var C = class {
 77 │   *method([...{ x }, y]) {
    ·            ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-ary.js:77:15]
 76 │ var C = class {
 77 │   *method([...[ x ] = []] = []) {
    ·               ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-id.js:77:15]
 76 │ var C = class {
 77 │   *method([...x = []] = []) {
    ·               ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-obj.js:77:15]
 76 │ var C = class {
 77 │   *method([...{ x } = []] = []) {
    ·               ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:77:12]
 76 │ var C = class {
 77 │   *method([...[x], y] = [1, 2, 3]) {
    ·            ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-id.js:77:12]
 76 │ var C = class {
 77 │   *method([...x, y] = [1, 2, 3]) {
    ·            ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:77:12]
 76 │ var C = class {
 77 │   *method([...{ x }, y] = [1, 2, 3]) {
    ·            ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-init-ary.js:77:22]
 76 │ var C = class {
 77 │   static *method([...[ x ] = []]) {
    ·                      ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-init-id.js:77:22]
 76 │ var C = class {
 77 │   static *method([...x = []]) {
    ·                      ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-init-obj.js:77:22]
 76 │ var C = class {
 77 │   static *method([...{ x } = []]) {
    ·                      ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-ary.js:77:19]
 76 │ var C = class {
 77 │   static *method([...[x], y]) {
    ·                   ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-id.js:77:19]
 76 │ var C = class {
 77 │   static *method([...x, y]) {
    ·                   ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-obj.js:77:19]
 76 │ var C = class {
 77 │   static *method([...{ x }, y]) {
    ·                   ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:77:22]
 76 │ var C = class {
 77 │   static *method([...[ x ] = []] = []) {
    ·                      ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-id.js:77:22]
 76 │ var C = class {
 77 │   static *method([...x = []] = []) {
    ·                      ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:77:22]
 76 │ var C = class {
 77 │   static *method([...{ x } = []] = []) {
    ·                      ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:77:19]
 76 │ var C = class {
 77 │   static *method([...[x], y] = [1, 2, 3]) {
    ·                   ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:77:19]
 76 │ var C = class {
 77 │   static *method([...x, y] = [1, 2, 3]) {
    ·                   ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:77:19]
 76 │ var C = class {
 77 │   static *method([...{ x }, y] = [1, 2, 3]) {
    ·                   ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-init-ary.js:74:14]
 73 │ var C = class {
 74 │   method([...[ x ] = []]) {
    ·              ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-init-id.js:74:14]
 73 │ var C = class {
 74 │   method([...x = []]) {
    ·              ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-init-obj.js:74:14]
 73 │ var C = class {
 74 │   method([...{ x } = []]) {
    ·              ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-not-final-ary.js:74:11]
 73 │ var C = class {
 74 │   method([...[x], y]) {
    ·           ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-not-final-id.js:74:11]
 73 │ var C = class {
 74 │   method([...x, y]) {
    ·           ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-ary-ptrn-rest-not-final-obj.js:74:11]
 73 │ var C = class {
 74 │   method([...{ x }, y]) {
    ·           ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-init-ary.js:74:14]
 73 │ var C = class {
 74 │   method([...[ x ] = []] = []) {
    ·              ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-init-id.js:74:14]
 73 │ var C = class {
 74 │   method([...x = []] = []) {
    ·              ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-init-obj.js:74:14]
 73 │ var C = class {
 74 │   method([...{ x } = []] = []) {
    ·              ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-not-final-ary.js:74:11]
 73 │ var C = class {
 74 │   method([...[x], y] = [1, 2, 3]) {
    ·           ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-not-final-id.js:74:11]
 73 │ var C = class {
 74 │   method([...x, y] = [1, 2, 3]) {
    ·           ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-dflt-ary-ptrn-rest-not-final-obj.js:74:11]
 73 │ var C = class {
 74 │   method([...{ x }, y] = [1, 2, 3]) {
    ·           ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-init-ary.js:74:21]
 73 │ var C = class {
 74 │   static method([...[ x ] = []]) {
    ·                     ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-init-id.js:74:21]
 73 │ var C = class {
 74 │   static method([...x = []]) {
    ·                     ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-init-obj.js:74:21]
 73 │ var C = class {
 74 │   static method([...{ x } = []]) {
    ·                     ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-not-final-ary.js:74:18]
 73 │ var C = class {
 74 │   static method([...[x], y]) {
    ·                  ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-not-final-id.js:74:18]
 73 │ var C = class {
 74 │   static method([...x, y]) {
    ·                  ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-ary-ptrn-rest-not-final-obj.js:74:18]
 73 │ var C = class {
 74 │   static method([...{ x }, y]) {
    ·                  ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-init-ary.js:74:21]
 73 │ var C = class {
 74 │   static method([...[ x ] = []] = []) {
    ·                     ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-init-id.js:74:21]
 73 │ var C = class {
 74 │   static method([...x = []] = []) {
    ·                     ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-init-obj.js:74:21]
 73 │ var C = class {
 74 │   static method([...{ x } = []] = []) {
    ·                     ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-ary.js:74:18]
 73 │ var C = class {
 74 │   static method([...[x], y] = [1, 2, 3]) {
    ·                  ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-id.js:74:18]
 73 │ var C = class {
 74 │   static method([...x, y] = [1, 2, 3]) {
    ·                  ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-obj.js:74:18]
 73 │ var C = class {
 74 │   static method([...{ x }, y] = [1, 2, 3]) {
    ·                  ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-init-ary.js:77:17]
 76 │ var C = class {
 77 │   * #method([...[ x ] = []]) {
    ·                 ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-init-id.js:77:17]
 76 │ var C = class {
 77 │   * #method([...x = []]) {
    ·                 ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-init-obj.js:77:17]
 76 │ var C = class {
 77 │   * #method([...{ x } = []]) {
    ·                 ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-ary.js:77:14]
 76 │ var C = class {
 77 │   * #method([...[x], y]) {
    ·              ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-id.js:77:14]
 76 │ var C = class {
 77 │   * #method([...x, y]) {
    ·              ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-obj.js:77:14]
 76 │ var C = class {
 77 │   * #method([...{ x }, y]) {
    ·              ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-ary.js:77:17]
 76 │ var C = class {
 77 │   * #method([...[ x ] = []] = []) {
    ·                 ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-id.js:77:17]
 76 │ var C = class {
 77 │   * #method([...x = []] = []) {
    ·                 ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-obj.js:77:17]
 76 │ var C = class {
 77 │   * #method([...{ x } = []] = []) {
    ·                 ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:77:14]
 76 │ var C = class {
 77 │   * #method([...[x], y] = [1, 2, 3]) {
    ·              ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:77:14]
 76 │ var C = class {
 77 │   * #method([...x, y] = [1, 2, 3]) {
    ·              ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:77:14]
 76 │ var C = class {
 77 │   * #method([...{ x }, y] = [1, 2, 3]) {
    ·              ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-ary.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...[ x ] = []]) {
    ·                        ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-id.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...x = []]) {
    ·                        ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-obj.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...{ x } = []]) {
    ·                        ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-ary.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...[x], y]) {
    ·                     ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-id.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...x, y]) {
    ·                     ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-obj.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...{ x }, y]) {
    ·                     ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...[ x ] = []] = []) {
    ·                        ──────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...x = []] = []) {
    ·                        ──────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:77:24]
 76 │ var C = class {
 77 │   static * #method([...{ x } = []] = []) {
    ·                        ──────────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...[x], y] = [1, 2, 3]) {
    ·                     ──────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...x, y] = [1, 2, 3]) {
    ·                     ────
 78 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:77:21]
 76 │ var C = class {
 77 │   static * #method([...{ x }, y] = [1, 2, 3]) {
    ·                     ────────
 78 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-init-ary.js:74:15]
 73 │ var C = class {
 74 │   #method([...[ x ] = []]) {
    ·               ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-init-id.js:74:15]
 73 │ var C = class {
 74 │   #method([...x = []]) {
    ·               ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-init-obj.js:74:15]
 73 │ var C = class {
 74 │   #method([...{ x } = []]) {
    ·               ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-not-final-ary.js:74:12]
 73 │ var C = class {
 74 │   #method([...[x], y]) {
    ·            ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-not-final-id.js:74:12]
 73 │ var C = class {
 74 │   #method([...x, y]) {
    ·            ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-ary-ptrn-rest-not-final-obj.js:74:12]
 73 │ var C = class {
 74 │   #method([...{ x }, y]) {
    ·            ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-init-ary.js:74:15]
 73 │ var C = class {
 74 │   #method([...[ x ] = []] = []) {
    ·               ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-init-id.js:74:15]
 73 │ var C = class {
 74 │   #method([...x = []] = []) {
    ·               ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-init-obj.js:74:15]
 73 │ var C = class {
 74 │   #method([...{ x } = []] = []) {
    ·               ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-ary.js:74:12]
 73 │ var C = class {
 74 │   #method([...[x], y] = [1, 2, 3]) {
    ·            ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-id.js:74:12]
 73 │ var C = class {
 74 │   #method([...x, y] = [1, 2, 3]) {
    ·            ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-obj.js:74:12]
 73 │ var C = class {
 74 │   #method([...{ x }, y] = [1, 2, 3]) {
    ·            ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-init-ary.js:74:22]
 73 │ var C = class {
 74 │   static #method([...[ x ] = []]) {
    ·                      ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-init-id.js:74:22]
 73 │ var C = class {
 74 │   static #method([...x = []]) {
    ·                      ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-init-obj.js:74:22]
 73 │ var C = class {
 74 │   static #method([...{ x } = []]) {
    ·                      ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-not-final-ary.js:74:19]
 73 │ var C = class {
 74 │   static #method([...[x], y]) {
    ·                   ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-not-final-id.js:74:19]
 73 │ var C = class {
 74 │   static #method([...x, y]) {
    ·                   ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-ary-ptrn-rest-not-final-obj.js:74:19]
 73 │ var C = class {
 74 │   static #method([...{ x }, y]) {
    ·                   ────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-ary.js:74:22]
 73 │ var C = class {
 74 │   static #method([...[ x ] = []] = []) {
    ·                      ──────────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-id.js:74:22]
 73 │ var C = class {
 74 │   static #method([...x = []] = []) {
    ·                      ──────
 75 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-obj.js:74:22]
 73 │ var C = class {
 74 │   static #method([...{ x } = []] = []) {
    ·                      ──────────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:74:19]
 73 │ var C = class {
 74 │   static #method([...[x], y] = [1, 2, 3]) {
    ·                   ──────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-id.js:74:19]
 73 │ var C = class {
 74 │   static #method([...x, y] = [1, 2, 3]) {
    ·                   ────
 75 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:74:19]
 73 │ var C = class {
 74 │   static #method([...{ x }, y] = [1, 2, 3]) {
    ·                   ────────
 75 │     
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/arrow-fnc-init-err-contains-arguments.js:34:13]
 33 │ var C = class {
 34 │   x = () => arguments;
    ·             ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/arrow-fnc-init-err-contains-super.js:27:13]
 26 │ var C = class {
 27 │   x = () => super();
    ·             ───────
 28 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-binding-identifier.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var await;
    ·         ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-identifier-reference-escaped.js:36:20]
 35 │ var C = class { async *#gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-identifier-reference.js:36:15]
 35 │ var C = class { async *#gen() {
 36 │     void await;
    ·               ─
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { async *#gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { async *#gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/await-as-label-identifier.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     await: ;
    ·          ─
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { async *#gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { async *#gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-as-label-identifier.js:36:10]
 35 │ var C = class { async *#gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-identifier-spread-strict.js:43:21]
 42 │              ...(function() {
 43 │                 var yield;
    ·                     ─────
 44 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method/yield-identifier-strict.js:35:17]
 34 │         (function() {
 35 │             var yield;
    ·                 ─────
 36 │             throw new Test262Error();
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var await;
    ·         ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-identifier-reference-escaped.js:36:20]
 35 │ var C = class { static async *#gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-identifier-reference.js:36:15]
 35 │ var C = class { static async *#gen() {
 36 │     void await;
    ·               ─
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { static async *#gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { static async *#gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }};
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/await-as-label-identifier.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     await: ;
    ·          ─
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-binding-identifier.js:36:9]
 35 │ var C = class { static async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-identifier-reference.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-label-identifier-escaped.js:36:5]
 35 │ var C = class { static async *#gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-label-identifier-escaped.js:36:15]
 35 │ var C = class { static async *#gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-as-label-identifier.js:36:10]
 35 │ var C = class { static async *#gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-identifier-spread-strict.js:43:21]
 42 │              ...(function() {
 43 │                 var yield;
    ·                     ─────
 44 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/async-gen-private-method-static/yield-identifier-strict.js:35:17]
 34 │         (function() {
 35 │             var yield;
    ·                 ─────
 36 │             throw new Test262Error();
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-binding-identifier-escaped.js:37:9]
 36 │   async #method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-binding-identifier.js:37:9]
 36 │   async #method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-identifier-reference-escaped.js:37:10]
 36 │   async #method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-identifier-reference-escaped.js:37:20]
 36 │   async #method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-identifier-reference.js:37:15]
 36 │   async #method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-label-identifier-escaped.js:37:5]
 36 │   async #method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-label-identifier-escaped.js:37:15]
 36 │   async #method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method/await-as-label-identifier.js:37:10]
 36 │   async #method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-binding-identifier-escaped.js:37:9]
 36 │   static async #method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-binding-identifier.js:37:9]
 36 │   static async #method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-identifier-reference-escaped.js:37:10]
 36 │   static async #method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-identifier-reference-escaped.js:37:20]
 36 │   static async #method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-identifier-reference.js:37:15]
 36 │   static async #method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-label-identifier-escaped.js:37:5]
 36 │   static async #method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-label-identifier-escaped.js:37:15]
 36 │   static async #method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/async-private-method-static/await-as-label-identifier.js:37:10]
 36 │   static async #method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/comp-name-init-err-contains-arguments.js:35:9]
 34 │ var C = class {
 35 │   [x] = arguments;
    ·         ─────────
 36 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/comp-name-init-err-contains-super.js:28:9]
 27 │ var C = class {
 28 │   [x] = super();
    ·         ───────
 29 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/equality-init-err-contains-arguments.js:34:13]
 33 │ var C = class {
 34 │   x = {} == arguments;
    ·             ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/equality-init-err-contains-super.js:27:13]
 26 │ var C = class {
 27 │   x = {} == super();
    ·             ───────
 28 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/fields-asi-3.js:18:8]
 17 │   x = "string"
 18 │   [0]() {}
    ·        ▲
 19 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/fields-asi-4.js:18:9]
 17 │   x = 42
 18 │   *gen() {}
    ·         ▲
 19 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/fields-asi-same-line-1.js:17:8]
 16 │ var C = class {
 17 │   field /* no ASI here */ method(){}
    ·        ▲
 18 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/fields-asi-same-line-2.js:17:12]
 16 │ var C = class {
 17 │   field = 1 /* no ASI here */ method(){}
    ·            ▲
 18 │ }
    ╰────
  help: Try insert a semicolon here

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/elements/fields-duplicate-privatenames.js:23:3]
 22 │ var C = class {
 23 │   #x;
    ·   ─┬
    ·    ╰── `x` has already been declared here
 24 │   #x;
    ·   ─┬
    ·    ╰── It can not be redeclared here
 25 │ }
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/expressions/class/elements/fields-literal-name-propname-constructor.js:29:3]
 28 │ var C = class {
 29 │   constructor;
    ·   ───────────
 30 │ };
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/expressions/class/elements/fields-literal-name-static-propname-constructor.js:29:10]
 28 │ var C = class {
 29 │   static constructor;
    ·          ───────────
 30 │ };
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/fields-literal-name-static-propname-prototype.js:29:10]
 28 │ var C = class {
 29 │   static prototype;
    ·          ─────────
 30 │ };
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/expressions/class/elements/fields-string-name-propname-constructor.js:30:3]
 29 │ var C = class {
 30 │   'constructor';
    ·   ─────────────
 31 │ };
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/expressions/class/elements/fields-string-name-static-propname-constructor.js:30:10]
 29 │ var C = class {
 30 │   static 'constructor';
    ·          ─────────────
 31 │ };
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/fields-string-name-static-propname-prototype.js:30:10]
 29 │ var C = class {
 30 │   static 'prototype';
    ·          ───────────
 31 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class {*#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class {*#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-binding-identifier.js:35:9]
 34 │ var C = class {*#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-binding-identifier.js:35:9]
 34 │ var C = class {*#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class {*#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class {*#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-identifier-reference.js:35:10]
 34 │ var C = class {*#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-identifier-reference.js:35:10]
 34 │ var C = class {*#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-label-identifier-escaped.js:35:5]
 34 │ var C = class {*#gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-label-identifier-escaped.js:35:15]
 34 │ var C = class {*#gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-as-label-identifier.js:35:10]
 34 │ var C = class {*#gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-identifier-spread-strict.js:42:21]
 41 │              ...(function() {
 42 │                 var yield;
    ·                     ─────
 43 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method/yield-identifier-strict.js:34:17]
 33 │         (function() {
 34 │             var yield;
    ·                 ─────
 35 │             throw new Test262Error();
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class { static *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class { static *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-binding-identifier.js:35:9]
 34 │ var C = class { static *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-binding-identifier.js:35:9]
 34 │ var C = class { static *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class { static *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class { static *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-identifier-reference.js:35:10]
 34 │ var C = class { static *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-identifier-reference.js:35:10]
 34 │ var C = class { static *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-label-identifier-escaped.js:35:5]
 34 │ var C = class { static *#gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-label-identifier-escaped.js:35:15]
 34 │ var C = class { static *#gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-as-label-identifier.js:35:10]
 34 │ var C = class { static *#gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-identifier-spread-strict.js:42:21]
 41 │              ...(function() {
 42 │                 var yield;
    ·                     ─────
 43 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/elements/gen-private-method-static/yield-identifier-strict.js:34:17]
 33 │         (function() {
 34 │             var yield;
    ·                 ─────
 35 │             throw new Test262Error();
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/literal-name-init-err-contains-arguments.js:34:7]
 33 │ var C = class {
 34 │   x = arguments;
    ·       ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/literal-name-init-err-contains-super.js:27:7]
 26 │ var C = class {
 27 │   x = super();
    ·       ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-arrow-fnc-init-err-contains-arguments.js:35:19]
 34 │   x = () => {
 35 │     var t = () => arguments;
    ·                   ─────────
 36 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-arrow-fnc-init-err-contains-super.js:28:19]
 27 │   x = () => {
 28 │     var t = () => super();
    ·                   ───────
 29 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-comp-name-init-err-contains-arguments.js:34:15]
 33 │ var C = class {
 34 │   [x] = () => arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-comp-name-init-err-contains-super.js:27:15]
 26 │ var C = class {
 27 │   [x] = () => super();
    ·               ───────
 28 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/nested-equality-init-err-contains-arguments.js:33:15]
 32 │ var C = class {
 33 │   x = () => {} == arguments;
    ·               ▲
 34 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/nested-equality-init-err-contains-super.js:26:15]
 25 │ var C = class {
 26 │   x = () => {} == super();
    ·               ▲
 27 │ }
    ╰────
  help: Try insert a semicolon here

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-literal-name-init-err-contains-arguments.js:33:13]
 32 │ var C = class {
 33 │   x = () => arguments;
    ·             ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-literal-name-init-err-contains-super.js:26:13]
 25 │ var C = class {
 26 │   x = () => super();
    ·             ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-private-arrow-fnc-init-err-contains-arguments.js:35:19]
 34 │   #x = () => {
 35 │     var t = () => arguments;
    ·                   ─────────
 36 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-private-arrow-fnc-init-err-contains-super.js:28:19]
 27 │   #x = () => {
 28 │     var t = () => super();
    ·                   ───────
 29 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-private-literal-name-init-err-contains-arguments.js:33:14]
 32 │ var C = class {
 33 │   #x = () => arguments;
    ·              ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-private-literal-name-init-err-contains-super.js:26:14]
 25 │ var C = class {
 26 │   #x = () => super();
    ·              ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-private-ternary-init-err-contains-arguments.js:33:26]
 32 │ var C = class {
 33 │   #x = () => true ? {} : arguments;
    ·                          ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-private-ternary-init-err-contains-super.js:26:26]
 25 │ var C = class {
 26 │   #x = () => true ? {} : super();
    ·                          ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-private-typeof-init-err-contains-arguments.js:33:21]
 32 │ var C = class {
 33 │   #x = () => typeof arguments;
    ·                     ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-private-typeof-init-err-contains-super.js:26:21]
 25 │ var C = class {
 26 │   #x = () => typeof super();
    ·                     ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-static-comp-name-init-err-contains-arguments.js:34:22]
 33 │ var C = class {
 34 │   static [x] = () => arguments;
    ·                      ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-static-comp-name-init-err-contains-super.js:27:22]
 26 │ var C = class {
 27 │   static [x] = () => super();
    ·                      ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-static-literal-init-err-contains-arguments.js:33:20]
 32 │ var C = class {
 33 │   static x = () => arguments;
    ·                    ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-static-literal-init-err-contains-super.js:26:20]
 25 │ var C = class {
 26 │   static x = () => super();
    ·                    ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-static-private-init-err-contains-arguments.js:33:21]
 32 │ var C = class {
 33 │   static #x = () => arguments;
    ·                     ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-static-private-init-err-contains-super.js:26:21]
 25 │ var C = class {
 26 │   static #x = () => super();
    ·                     ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-static-string-literal-name-init-err-contains-arguments.js:33:22]
 32 │ var C = class {
 33 │   static 'x' = () => arguments;
    ·                      ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-static-string-literal-name-init-err-contains-super.js:26:22]
 25 │ var C = class {
 26 │   static 'x' = () => super();
    ·                      ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-string-literal-name-init-err-contains-arguments.js:33:15]
 32 │ var C = class {
 33 │   'x' = () => arguments;
    ·               ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-string-literal-name-init-err-contains-super.js:26:15]
 25 │ var C = class {
 26 │   'x' = () => super();
    ·               ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-ternary-init-err-contains-arguments.js:33:25]
 32 │ var C = class {
 33 │   x = () => true ? {} : arguments;
    ·                         ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-ternary-init-err-contains-super.js:26:25]
 25 │ var C = class {
 26 │   x = () => true ? {} : super();
    ·                         ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/nested-typeof-init-err-contains-arguments.js:33:20]
 32 │ var C = class {
 33 │   x = () => typeof arguments;
    ·                    ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/nested-typeof-init-err-contains-super.js:26:20]
 25 │ var C = class {
 26 │   x = () => typeof super();
    ·                    ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/private-arrow-fnc-init-err-contains-arguments.js:34:14]
 33 │ var C = class {
 34 │   #x = () => arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/private-arrow-fnc-init-err-contains-super.js:27:14]
 26 │ var C = class {
 27 │   #x = () => super();
    ·              ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/private-literal-name-init-err-contains-arguments.js:34:8]
 33 │ var C = class {
 34 │   #x = arguments;
    ·        ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/private-literal-name-init-err-contains-super.js:27:8]
 26 │ var C = class {
 27 │   #x = super();
    ·        ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/private-ternary-init-err-contains-arguments.js:34:20]
 33 │ var C = class {
 34 │   #x = true ? {} : arguments;
    ·                    ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/private-ternary-init-err-contains-super.js:27:20]
 26 │ var C = class {
 27 │   #x = true ? {} : super();
    ·                    ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/private-typeof-init-err-contains-arguments.js:34:15]
 33 │ var C = class {
 34 │   #x = typeof arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/private-typeof-init-err-contains-super.js:27:15]
 26 │ var C = class {
 27 │   #x = typeof super();
    ·               ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/static-comp-name-init-err-contains-arguments.js:35:16]
 34 │ var C = class {
 35 │   static [x] = arguments;
    ·                ─────────
 36 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/static-comp-name-init-err-contains-super.js:28:16]
 27 │ var C = class {
 28 │   static [x] = super();
    ·                ───────
 29 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/static-literal-init-err-contains-arguments.js:34:14]
 33 │ var C = class {
 34 │   static x = arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/static-literal-init-err-contains-super.js:27:14]
 26 │ var C = class {
 27 │   static x = super();
    ·              ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/static-private-init-err-contains-arguments.js:34:15]
 33 │ var C = class {
 34 │   static #x = arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/static-private-init-err-contains-super.js:27:15]
 26 │ var C = class {
 27 │   static #x = super();
    ·               ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/static-string-literal-name-init-err-contains-arguments.js:34:16]
 33 │ var C = class {
 34 │   static 'x' = arguments;
    ·                ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/static-string-literal-name-init-err-contains-super.js:27:16]
 26 │ var C = class {
 27 │   static 'x' = super();
    ·                ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/string-literal-name-init-err-contains-arguments.js:34:9]
 33 │ var C = class {
 34 │   'x' = arguments;
    ·         ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/string-literal-name-init-err-contains-super.js:27:9]
 26 │ var C = class {
 27 │   'x' = super();
    ·         ───────
 28 │ }
    ╰────

  × Empty parenthesized expression
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/class-heritage-array-literal-arrow-heritage.js:24:23]
 23 │ 
 24 │ var C = class extends () => {} {
    ·                       ──
 25 │   
    ╰────

  × Expected `{` but found `=>`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/class-heritage-array-literal-async-arrow-heritage.js:24:32]
 23 │ 
 24 │ var C = class extends async () => {} {
    ·                                ─┬
    ·                                 ╰── `{` expected
 25 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-get.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-get.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-set.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-set.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async-gen.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async-gen.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-gen.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-gen.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-no-reference.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·               ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-no-reference.js:41:19]
 40 │   g = this.f;
 41 │   x = delete (g().#m);
    ·                   ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-privatename.js:41:15]
 40 │   g = this.f;
 41 │   x = delete (g().#x);
    ·               ──────
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-get.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-get.js:41:20]
 40 │   
 41 │   x = delete (this.#m
    ·                    ──
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-set.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-set.js:41:20]
 40 │   
 41 │   x = delete (this.#m
    ·                    ──
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-async-gen.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-async.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-gen.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method.js:41:15]
 40 │   
 41 │   x = delete (this.#m
    ·               ───────
 42 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method.js:41:20]
 40 │   
 41 │   x = delete (this.#m
    ·                    ──
 42 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-no-reference.js:41:15]
 40 │   
 41 │   x = delete (this.#m);
    ·               ───────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-no-reference.js:41:20]
 40 │   
 41 │   x = delete (this.#m);
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-privatename.js:41:15]
 40 │   
 41 │   x = delete (this.#x);
    ·               ───────
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-get.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-get.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-set.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-set.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async-gen.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async-gen.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-gen.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-gen.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-no-reference.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-no-reference.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-privatename.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#x;
    ·              ──────
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-get.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-get.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-set.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-set.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-async-gen.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-async.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-gen.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-no-reference.js:35:14]
 34 │   
 35 │   x = delete this.#m;
    ·              ───────
 36 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-no-reference.js:35:19]
 34 │   
 35 │   x = delete this.#m;
    ·                   ──
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-privatename.js:35:14]
 34 │   
 35 │   x = delete this.#x;
    ·              ───────
 36 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-gen.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-gen.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-no-reference.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                ──────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-no-reference.js:41:20]
 40 │   g = this.f;
 41 │   x = delete ((g().#m));
    ·                    ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-privatename.js:41:16]
 40 │   g = this.f;
 41 │   x = delete ((g().#x));
    ·                ──────
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:41:21]
 40 │   
 41 │   x = delete ((this.#m
    ·                     ──
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:41:21]
 40 │   
 41 │   x = delete ((this.#m
    ·                     ──
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-async-gen.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-async.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-gen.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method.js:41:16]
 40 │   
 41 │   x = delete ((this.#m
    ·                ───────
 42 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method.js:41:21]
 40 │   
 41 │   x = delete ((this.#m
    ·                     ──
 42 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-no-reference.js:41:16]
 40 │   
 41 │   x = delete ((this.#m));
    ·                ───────
 42 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-no-reference.js:41:21]
 40 │   
 41 │   x = delete ((this.#m));
    ·                     ──
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-privatename.js:41:16]
 40 │   
 41 │   x = delete ((this.#x));
    ·                ───────
 42 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-get.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-get.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-set.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-set.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async-gen.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async-gen.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-gen.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-gen.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-no-reference.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-no-reference.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-privatename.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#x);
    ·             ──────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-get.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-get.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-set.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-set.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-async-gen.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-async.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-gen.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-no-reference.js:43:13]
 42 │     
 43 │     delete (this.#m);
    ·             ───────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-no-reference.js:43:18]
 42 │     
 43 │     delete (this.#m);
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-privatename.js:43:13]
 42 │     
 43 │     delete (this.#x);
    ·             ───────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-get.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-get.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-set.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-set.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async-gen.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async-gen.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-gen.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-gen.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-no-reference.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-no-reference.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-privatename.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#x;
    ·            ──────
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-get.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-get.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-set.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-set.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-async-gen.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-async.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-gen.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-no-reference.js:37:12]
 36 │     
 37 │     delete this.#m;
    ·            ───────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-no-reference.js:37:17]
 36 │     
 37 │     delete this.#m;
    ·                 ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-privatename.js:37:12]
 36 │     
 37 │     delete this.#x;
    ·            ───────
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-gen.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-gen.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-no-reference.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-no-reference.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-privatename.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#x));
    ·              ──────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-async-gen.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-async.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-gen.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-no-reference.js:43:14]
 42 │     
 43 │     delete ((this.#m));
    ·              ───────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-no-reference.js:43:19]
 42 │     
 43 │     delete ((this.#m));
    ·                   ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-privatename.js:43:14]
 42 │     
 43 │     delete ((this.#x));
    ·              ───────
 44 │   }
    ╰────

  × Multiple constructor implementations are not allowed.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-class-body-ctor-duplicate.js:24:3]
 23 │ var C = class {
 24 │   constructor() {}
    ·   ─────┬─────
    ·        ╰── constructor has already been declared here
 25 │   constructor() {}
    ·   ─────┬─────
    ·        ╰── it cannot be redeclared here
 26 │ };
    ╰────

  × 'super' can only be referenced in a derived class.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-ctor-super-no-heritage.js:26:9]
 25 │     
 26 │ ╭─▶ var C = class {
 27 │ │     constructor() {
 28 │ │       super();
    · │       ─────
 29 │ │     }
 30 │ ├─▶ };
    · ╰──── class does not have `extends`
    ╰────
  help: either remove this super, or extend the class

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-field-identifier-invalid-ues-error.js:70:9]
 69 │ var C = class {
 70 │   \u0000;
    ·         ▲
 71 │ };
    ╰────

  × Invalid Character `‍`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-field-identifier-invalid-zwj-error.js:70:9]
 69 │ var C = class {
 70 │   \u200D_ZWJ;
    ·         ▲
 71 │ };
    ╰────

  × Invalid Character `‌`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-field-identifier-invalid-zwnj-error.js:70:9]
 69 │ var C = class {
 70 │   \u200C_ZWNJ;
    ·         ▲
 71 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-fields-same-line-error.js:33:4]
 32 │ var C = class {
 33 │   x y
    ·    ▲
 34 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected `{` but found `=>`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-array-literal.js:37:27]
 36 │ 
 37 │ var C = class extends (o) => [o.#foo]
    ·                           ─┬
    ·                            ╰── `{` expected
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:68]
 36 │ 
 37 │ var C = class extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                                    ────
 38 │ {
    ╰────

  × Private field 'bar' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:93]
 36 │ 
 37 │ var C = class extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                                                             ────
 38 │ {
    ╰────

  × Private field 'fuz' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:118]
 36 │ 
 37 │ var C = class extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                                                                                      ────
 38 │ {
    ╰────

  × Private identifier '#foo' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-function-expression.js:37:45]
 36 │ 
 37 │ var C = class extends function() { x = this.#foo; }
    ·                                             ────
 38 │ {
    ╰────

  × Expected `{` but found `=>`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-obj-literal.js:37:27]
 36 │ 
 37 │ var C = class extends (o) => {x: o.#foo}
    ·                           ─┬
    ·                            ╰── `{` expected
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-recursive.js:37:54]
 36 │ 
 37 │ var C = class extends class extends class { x = this.#foo; } {}
    ·                                                      ────
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage.js:37:40]
 36 │ 
 37 │ var C = class extends class { x = this.#foo; }
    ·                                        ────
 38 │ {
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-field-on-object-destructuring.js:31:13]
 30 │   destructureX() {
 31 │     const { #x: x } = this;
    ·             ──
 32 │   }
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-field-super-access.js:29:14]
 28 │     access() {
 29 │       return super.#m;
    ·              ────────
 30 │     }
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-private-field-super-access.js:33:14]
 32 │     method() {
 33 │       return super.#m();
    ·              ────────
 34 │     }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-async-gen.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   async * #m() {}
    ·           ─┬
    ·            ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-async.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   async #m() {}
    ·         ─┬
    ·          ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-gen.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   * #m() {}
    ·     ─┬
    ·      ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-get-field.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   get #m() {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-get-get.js:25:7]
 24 │ var C = class {
 25 │   get #m() {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   get #m() {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-field.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-get.js:25:7]
 24 │ var C = class {
 25 │   get #m() {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-meth.js:25:3]
 24 │ var C = class {
 25 │   #m() {}
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-set.js:25:7]
 24 │ var C = class {
 25 │   set #m(_) {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-staticfield.js:25:10]
 24 │ var C = class {
 25 │   static #m;
    ·          ─┬
    ·           ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-staticmeth.js:25:10]
 24 │ var C = class {
 25 │   static #m() {}
    ·          ─┬
    ·           ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-set-field.js:25:3]
 24 │ var C = class {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   set #m(_) {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-set-set.js:25:7]
 24 │ var C = class {
 25 │   set #m(_) {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   set #m(_) {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ };
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-constructor.js:25:3]
 24 │ var C = class {
 25 │   #constructor
    ·   ────────────
 26 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-error.js:36:4]
 35 │ var C = class {
 36 │   # x
    ·    ─
 37 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-ues.js:64:10]
 63 │ var C = class {
 64 │   #\u0000;
    ·          ▲
 65 │ };
    ╰────

  × Invalid Character `‍`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-zwj-error.js:64:10]
 63 │ var C = class {
 64 │   #\u200D_ZWJ;
    ·          ▲
 65 │ 
    ╰────

  × Invalid Character `‌`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-zwnj-error.js:64:10]
 63 │ var C = class {
 64 │   #\u200C_ZWNJ;
    ·          ▲
 65 │ 
    ╰────

  × Private field 'f' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-in-computed-property-missing.js:52:9]
 51 │ var C = class {
 52 │   [this.#f] = 'Test262'
    ·         ──
 53 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-get-meth.js:29:8]
 28 │ var C = class {
 29 │   get # m() {}
    ·        ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-get-meth.js:29:6]
 28 │ var C = class {
 29 │   get # m() {}
    ·      ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-set-meth.js:29:8]
 28 │ var C = class {
 29 │   set # m(_) {}
    ·        ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-set-meth.js:29:6]
 28 │ var C = class {
 29 │   set # m(_) {}
    ·      ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-gen-meth.js:29:12]
 28 │ var C = class {
 29 │   async * # m() {}
    ·            ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-meth.js:29:10]
 28 │ var C = class {
 29 │   async # m() {}
    ·          ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-meth.js:29:8]
 28 │ var C = class {
 29 │   async # m() {}
    ·        ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-call-expr.js:38:15]
 37 │   m() {
 38 │     this.f().# x;
    ·               ─
 39 │   }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-field-init.js:29:4]
 28 │ var C = class {
 29 │   # x = 1;
    ·    ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-field.js:29:4]
 28 │ var C = class {
 29 │   # x;
    ·    ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-gen-meth.js:29:6]
 28 │ var C = class {
 29 │   * # m() {}
    ·      ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-member-expr.js:33:11]
 32 │   m() {
 33 │     this.# x;
    ·           ─
 34 │   }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-meth.case.js:29:4]
 28 │ var C = class {
 29 │   # m() {}
    ·    ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-get-meth.js:29:15]
 28 │ var C = class {
 29 │   static get # m() {}
    ·               ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-get-meth.js:29:13]
 28 │ var C = class {
 29 │   static get # m() {}
    ·             ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-set-meth.js:29:15]
 28 │ var C = class {
 29 │   static set # m(_) {}
    ·               ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-set-meth.js:29:13]
 28 │ var C = class {
 29 │   static set # m(_) {}
    ·             ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-gen-meth.js:29:19]
 28 │ var C = class {
 29 │   static async * # m() {}
    ·                   ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-meth.js:29:17]
 28 │ var C = class {
 29 │   static async # m() {}
    ·                 ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-meth.js:29:15]
 28 │ var C = class {
 29 │   static async # m() {}
    ·               ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field-init.js:29:11]
 28 │ var C = class {
 29 │   static # x = 1;
    ·           ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field-init.js:29:9]
 28 │ var C = class {
 29 │   static # x = 1;
    ·         ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field.js:29:11]
 28 │ var C = class {
 29 │   static # x;
    ·           ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field.js:29:9]
 28 │ var C = class {
 29 │   static # x;
    ·         ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-gen-meth.js:29:13]
 28 │ var C = class {
 29 │   static * # m() {}
    ·             ─
 30 │ };
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-meth.js:29:11]
 28 │ var C = class {
 29 │   static # m() {}
    ·           ─
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-meth.js:29:9]
 28 │ var C = class {
 29 │   static # m() {}
    ·         ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-privatenames-same-line-error.js:36:5]
 35 │ var C = class {
 36 │   #x #y
    ·     ▲
 37 │ };
    ╰────
  help: Try insert a semicolon here

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-async-gen.js:26:7]
 25 │   async * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-async.js:26:7]
 25 │   async method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-gen.js:26:7]
 25 │   * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-get.js:26:7]
 25 │   get method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-method.js:26:7]
 25 │   method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-async-gen.js:26:7]
 25 │   async * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-async.js:26:7]
 25 │   async #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-gen.js:26:7]
 25 │   * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-method.js:26:7]
 25 │   #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-contains-super-set.js:26:7]
 25 │   set method(_) {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Constructor can't be an async method
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-gen.js:25:11]
 24 │ var C = class {
 25 │   async * constructor() {}
    ·           ───────────
 26 │ };
    ╰────

  × Constructor can't be a generator
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-gen.js:25:11]
 24 │ var C = class {
 25 │   async * constructor() {}
    ·           ───────────
 26 │ };
    ╰────

  × Constructor can't be an async method
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-meth.js:25:9]
 24 │ var C = class {
 25 │   async constructor() {}
    ·         ───────────
 26 │ };
    ╰────

  × Constructor can't be a generator
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-gen.js:25:5]
 24 │ var C = class {
 25 │   * constructor() {}
    ·     ───────────
 26 │ };
    ╰────

  × Constructor can't have get/set modifier
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-get.js:25:7]
 24 │ var C = class {
 25 │   get constructor() {}
    ·       ───────────
 26 │ };
    ╰────

  × Constructor can't have get/set modifier
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-special-meth-ctor-set.js:25:7]
 24 │ var C = class {
 25 │   set constructor(_) {}
    ·       ───────────
 26 │ };
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-async-gen-meth-prototype.js:25:18]
 24 │ var C = class {
 25 │   static async * prototype() {}
    ·                  ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-async-gen-meth-super.js:26:7]
 25 │   static async * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-async-meth-prototype.js:25:16]
 24 │ var C = class {
 25 │   static async prototype() {}
    ·                ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-async-meth-super.js:26:7]
 25 │   static async method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-gen-meth-prototype.js:25:12]
 24 │ var C = class {
 25 │   static * prototype() {}
    ·            ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-gen-meth-super.js:26:7]
 25 │   static * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js:25:14]
 24 │ var C = class {
 25 │   static get prototype() {}
    ·              ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-get-meth-super.js:26:7]
 25 │   static get method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-meth-prototype.js:25:10]
 24 │ var C = class {
 25 │   static prototype() {}
    ·          ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-meth-super.js:26:7]
 25 │   static method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-async-gen-meth-constructor.js:25:18]
 24 │ var C = class {
 25 │   static async * #constructor() {}
    ·                  ────────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-async-gen-meth-super.js:26:7]
 25 │   static async * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-async-meth-constructor.js:25:16]
 24 │ var C = class {
 25 │   static async #constructor() {}
    ·                ────────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-async-meth-super.js:26:7]
 25 │   static async #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-gen-meth-constructor.js:25:12]
 24 │ var C = class {
 25 │   static * #constructor() {}
    ·            ────────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-gen-meth-super.js:26:7]
 25 │   static * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-meth-constructor.js:25:10]
 24 │ var C = class {
 25 │   static #constructor() {}
    ·          ────────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-private-meth-super.js:26:7]
 25 │   static #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-privatename-constructor.js:25:10]
 24 │ var C = class {
 25 │   static #constructor
    ·          ────────────
 26 │ };
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js:25:14]
 24 │ var C = class {
 25 │   static set prototype(_) {}
    ·              ─────────
 26 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/grammar-static-set-meth-super.js:26:7]
 25 │   static set method(_) {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-call-expression-bad-reference.js:52:20]
 51 │ var C = class {
 52 │   f = (() => {})().#x
    ·                    ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-call-expression-this.js:52:22]
 51 │ var C = class {
 52 │   f = (() => this)().#x
    ·                      ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-fn-call-expression-bad-reference.js:52:33]
 51 │ var C = class {
 52 │   f = function() { (() => {})().#x }
    ·                                 ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-fn-call-expression-this.js:52:35]
 51 │ var C = class {
 52 │   f = function() { (() => this)().#x }
    ·                                   ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-fn-member-expression-bad-reference.js:52:30]
 51 │ var C = class {
 52 │   f = function() { something.#x }
    ·                              ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-fn-member-expression-this.js:52:25]
 51 │ var C = class {
 52 │   f = function() { this.#x }
    ·                         ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-heritage-call-expression-bad-reference.js:56:20]
 55 │ var C = class extends Parent {
 56 │   f = (() => {})().#x
    ·                    ──
 57 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-heritage-call-expression-this.js:56:22]
 55 │ var C = class extends Parent {
 56 │   f = (() => this)().#x
    ·                      ──
 57 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-heritage-member-expression-bad-reference.js:56:17]
 55 │ var C = class extends Parent {
 56 │   f = something.#x
    ·                 ──
 57 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-heritage-member-expression-this.js:56:12]
 55 │ var C = class extends Parent {
 56 │   f = this.#x
    ·            ──
 57 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-member-expression-bad-reference.js:52:17]
 51 │ var C = class {
 52 │   f = something.#x
    ·                 ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/field-init-member-expression-this.js:52:12]
 51 │ var C = class {
 52 │   f = this.#x
    ·            ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-call-expression-bad-reference.js:52:22]
 51 │ var C = class {
 52 │   m() { (() => {})().#x }
    ·                      ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-call-expression-this.js:52:24]
 51 │ var C = class {
 52 │   m() { (() => this)().#x }
    ·                        ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-fn-call-expression-bad-reference.js:53:34]
 52 │   m() {
 53 │     function fn() { (() => {})().#x }
    ·                                  ──
 54 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-fn-call-expression-this.js:53:36]
 52 │   m() {
 53 │     function fn() { (() => this)().#x }
    ·                                    ──
 54 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-fn-member-expression-bad-reference.js:53:31]
 52 │   m() {
 53 │     function fn() { something.#x }
    ·                               ──
 54 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-fn-member-expression-this.js:53:26]
 52 │   m() {
 53 │     function fn() { this.#x }
    ·                          ──
 54 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-heritage-call-expression-bad-reference.js:57:18]
 56 │   m() {
 57 │     (() => {})().#x
    ·                  ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-heritage-call-expression-this.js:57:20]
 56 │   m() {
 57 │     (() => this)().#x
    ·                    ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-heritage-member-expression-bad-reference.js:57:15]
 56 │   m() {
 57 │     something.#x
    ·               ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-heritage-member-expression-this.js:57:10]
 56 │   m() {
 57 │     this.#x
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-member-expression-bad-reference.js:52:19]
 51 │ var C = class {
 52 │   m() { something.#x }
    ·                   ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-member-expression-this.js:52:14]
 51 │ var C = class {
 52 │   m() { this.#x }
    ·              ──
 53 │ };
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-outter-call-expression-bad-reference.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-outter-call-expression-this.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-outter-member-expression-bad-reference.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/invalid-names/method-outter-member-expression-this.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-async-generator-cannot-escape-token.js:25:17]
 24 │ var C = class {
 25 │   async * \u0023m() { return 42; }
    ·                 ▲
 26 │ };
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-async-method-cannot-escape-token.js:25:15]
 24 │ var C = class {
 25 │   async \u0023m() { return 42; }
    ·               ▲
 26 │ };
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-call-exp-cannot-escape-token.js:32:17]
 31 │   method() {
 32 │     foo().\u0023field;
    ·                 ▲
 33 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-field-cannot-escape-token.js:25:9]
 24 │ var C = class {
 25 │   \u0023field;
    ·         ▲
 26 │ };
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-generator-cannot-escape-token.js:25:11]
 24 │ var C = class {
 25 │   * \u0023m() { return 42; }
    ·           ▲
 26 │ };
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-member-exp-cannot-escape-token.js:32:16]
 31 │   method() {
 32 │     this.\u0023field;
    ·                ▲
 33 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/private-method-cannot-escape-token.js:25:9]
 24 │ var C = class {
 25 │   \u0023m() { return 42; }
    ·         ▲
 26 │ };
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/expressions/class/elements/syntax/early-errors/super-private-access-invalid.js:35:5]
 34 │   method() {
 35 │     super.#x();
    ·     ────────
 36 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/ternary-init-err-contains-arguments.js:34:19]
 33 │ var C = class {
 34 │   x = true ? {} : arguments;
    ·                   ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/ternary-init-err-contains-super.js:27:19]
 26 │ var C = class {
 27 │   x = true ? {} : super();
    ·                   ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/expressions/class/elements/typeof-init-err-contains-arguments.js:34:14]
 33 │ var C = class {
 34 │   x = typeof arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/class/elements/typeof-init-err-contains-super.js:27:14]
 26 │ var C = class {
 27 │   x = typeof super();
    ·              ───────
 28 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method/array-destructuring-param-strict-body.js:157:5]
 156 │   *method([element]) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/gen-method/dflt-params-duplicates.js:85:11]
 84 │ 0, class {
 85 │   *method(x = 0, x) {
    ·           ┬      ┬
    ·           │      ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
 86 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/gen-method/dflt-params-rest.js:89:14]
 88 │ 0, class {
 89 │   *method(...x = []) {
    ·              ──────
 90 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method/object-destructuring-param-strict-body.js:157:5]
 156 │   *method({property}) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method/rest-param-strict-body.js:157:5]
 156 │   *method(a,...rest) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/gen-method/rest-params-trailing-comma-early-error.js:82:11]
 81 │ 0, class {
 82 │   *method(...a,) {
    ·           ────
 83 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class {*gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class {*gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-binding-identifier.js:35:9]
 34 │ var C = class {*gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-binding-identifier.js:35:9]
 34 │ var C = class {*gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class {*gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class {*gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-identifier-reference.js:35:10]
 34 │ var C = class {*gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-identifier-reference.js:35:10]
 34 │ var C = class {*gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-label-identifier-escaped.js:35:5]
 34 │ var C = class {*gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-label-identifier-escaped.js:35:15]
 34 │ var C = class {*gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/gen-method/yield-as-label-identifier.js:35:10]
 34 │ var C = class {*gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-identifier-spread-strict.js:41:17]
 40 │          ...(function() {
 41 │             var yield;
    ·                 ─────
 42 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method/yield-identifier-strict.js:33:13]
 32 │     (function() {
 33 │         var yield;
    ·             ─────
 34 │         throw new Test262Error();
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/class/gen-method-param-dflt-yield.js:27:10]
 26 │ 0, class {
 27 │   *g(x = yield) {}
    ·          ──┬──
    ·            ╰── yield expression not allowed in formal parameter
 28 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method-static/array-destructuring-param-strict-body.js:157:5]
 156 │   static *method([element]) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/gen-method-static/dflt-params-duplicates.js:85:18]
 84 │ 0, class {
 85 │   static *method(x = 0, x) {
    ·                  ┬      ┬
    ·                  │      ╰── It can not be redeclared here
    ·                  ╰── `x` has already been declared here
 86 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/gen-method-static/dflt-params-rest.js:89:21]
 88 │ 0, class {
 89 │   static *method(...x = []) {
    ·                     ──────
 90 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method-static/object-destructuring-param-strict-body.js:157:5]
 156 │   static *method({property}) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/gen-method-static/rest-param-strict-body.js:157:5]
 156 │   static *method(a,...rest) {
 157 │     "use strict";
     ·     ─────────────
 158 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/gen-method-static/rest-params-trailing-comma-early-error.js:82:18]
 81 │ 0, class {
 82 │   static *method(...a,) {
    ·                  ────
 83 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class { static *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ var C = class { static *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-binding-identifier.js:35:9]
 34 │ var C = class { static *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-binding-identifier.js:35:9]
 34 │ var C = class { static *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class { static *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ var C = class { static *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }};
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-identifier-reference.js:35:10]
 34 │ var C = class { static *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-identifier-reference.js:35:10]
 34 │ var C = class { static *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }};
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-label-identifier-escaped.js:35:5]
 34 │ var C = class { static *gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }};
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-label-identifier-escaped.js:35:15]
 34 │ var C = class { static *gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-as-label-identifier.js:35:10]
 34 │ var C = class { static *gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }};
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-identifier-spread-strict.js:41:17]
 40 │          ...(function() {
 41 │             var yield;
    ·                 ─────
 42 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/gen-method-static/yield-identifier-strict.js:33:13]
 32 │     (function() {
 33 │         var yield;
    ·             ─────
 34 │         throw new Test262Error();
    ╰────

  × A 'get' accessor must not have any formal parameters.
    ╭─[test262/test/language/expressions/class/getter-param-dflt.js:24:17]
 23 │ 
 24 │ 0, class { get a(param = null) {} };
    ·                 ──────────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method/array-destructuring-param-strict-body.js:153:5]
 152 │   method([element]) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/method/dflt-params-duplicates.js:81:10]
 80 │ 0, class {
 81 │   method(x = 0, x) {
    ·          ┬      ┬
    ·          │      ╰── It can not be redeclared here
    ·          ╰── `x` has already been declared here
 82 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/method/dflt-params-rest.js:85:13]
 84 │ 0, class {
 85 │   method(...x = []) {
    ·             ──────
 86 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method/object-destructuring-param-strict-body.js:153:5]
 152 │   method({property}) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method/rest-param-strict-body.js:153:5]
 152 │   method(a,...rest) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/method/rest-params-trailing-comma-early-error.js:77:10]
 76 │ 0, class {
 77 │   method(...a,) {
    ·          ────
 78 │     
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/method-param-dflt-yield.js:22:9]
 21 │ 0, class {
 22 │   m(x = yield) {}
    ·         ─────
 23 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method-static/array-destructuring-param-strict-body.js:153:5]
 152 │   static method([element]) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/class/method-static/dflt-params-duplicates.js:81:17]
 80 │ 0, class {
 81 │   static method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 82 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/class/method-static/dflt-params-rest.js:85:20]
 84 │ 0, class {
 85 │   static method(...x = []) {
    ·                    ──────
 86 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method-static/object-destructuring-param-strict-body.js:153:5]
 152 │   static method({property}) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/class/method-static/rest-param-strict-body.js:153:5]
 152 │   static method(a,...rest) {
 153 │     "use strict";
     ·     ─────────────
 154 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/class/method-static/rest-params-trailing-comma-early-error.js:77:17]
 76 │ 0, class {
 77 │   static method(...a,) {
    ·                 ────
 78 │     
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/class/static-gen-method-param-dflt-yield.js:27:17]
 26 │ 0, class {
 27 │   static *g(x = yield) {}
    ·                 ──┬──
    ·                   ╰── yield expression not allowed in formal parameter
 28 │ };
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/class/static-init-await-binding.js:22:12]
 21 │   static {
 22 │     (class await {});
    ·            ─────
 23 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/expressions/class/static-init-await-binding.js:22:12]
 21 │   static {
 22 │     (class await {});
    ·            ─────
 23 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/class/static-method-param-dflt-yield.js:22:16]
 21 │ 0, class {
 22 │   static m(x = yield) {}
    ·                ─────
 23 │ };
    ╰────

  × Logical expressions and coalesce expressions cannot be mixed
    ╭─[test262/test/language/expressions/coalesce/cannot-chain-head-with-logical-and.js:32:1]
 31 │ 
 32 │ 0 && 0 ?? true;
    · ──────────────
    ╰────
  help: Wrap either expression by parentheses

  × Logical expressions and coalesce expressions cannot be mixed
    ╭─[test262/test/language/expressions/coalesce/cannot-chain-head-with-logical-or.js:32:1]
 31 │ 
 32 │ 0 || 0 ?? true;
    · ──────────────
    ╰────
  help: Wrap either expression by parentheses

  × Logical expressions and coalesce expressions cannot be mixed
    ╭─[test262/test/language/expressions/coalesce/cannot-chain-tail-with-logical-and.js:33:1]
 32 │ 
 33 │ 0 ?? 0 && true;
    · ──────────────
    ╰────
  help: Wrap either expression by parentheses

  × Logical expressions and coalesce expressions cannot be mixed
    ╭─[test262/test/language/expressions/coalesce/cannot-chain-tail-with-logical-or.js:33:1]
 32 │ 
 33 │ 0 ?? 0 || true;
    · ──────────────
    ╰────
  help: Wrap either expression by parentheses

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/11.13.2-6-1gs.js:18:1]
 17 │ 
 18 │ eval *= 20;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/add-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments += 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/add-eval-strict.js:19:1]
 18 │ 
 19 │ eval += 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/add-non-simple.js:18:1]
 17 │ 
 18 │ 1 += 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/and-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments &= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/and-eval-strict.js:19:1]
 18 │ 
 19 │ eval &= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/btws-and-non-simple.js:18:1]
 17 │ 
 18 │ 1 &= 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/btws-or-non-simple.js:18:1]
 17 │ 
 18 │ 1 |= 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/btws-xor-non-simple.js:18:1]
 17 │ 
 18 │ 1 ^= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/div-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments /= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/div-eval-strict.js:19:1]
 18 │ 
 19 │ eval /= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/div-non-simple.js:18:1]
 17 │ 
 18 │ 1 /= 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/left-shift-non-simple.js:18:1]
 17 │ 
 18 │ 1 <<= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/lshift-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments <<= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/lshift-eval-strict.js:20:1]
 19 │ 
 20 │ eval <<= 20;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/mod-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments %= 20;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/mod-div-non-simple.js:18:1]
 17 │ 
 18 │ 1 %= 1;
    · ─
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/mod-eval-strict.js:19:1]
 18 │ 
 19 │ eval %= 20;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/mult-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments *= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/mult-eval-strict.js:19:1]
 18 │ 
 19 │ eval *= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/mult-non-simple.js:18:1]
 17 │ 
 18 │ 1 *= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/or-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments |= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/or-eval-strict.js:19:1]
 18 │ 
 19 │ eval |= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/right-shift-non-simple.js:18:1]
 17 │ 
 18 │ 1 >>= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/srshift-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments >>= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/srshift-eval-strict.js:20:1]
 19 │ 
 20 │ eval >>= 20;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/sub-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments -= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/sub-eval-strict.js:19:1]
 18 │ 
 19 │ eval -= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/subtract-non-simple.js:18:1]
 17 │ 
 18 │ 1 -= 1;
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/compound-assignment/u-right-shift-non-simple.js:18:1]
 17 │ 
 18 │ 1 >>>= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/urshift-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments >>>= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/urshift-eval-strict.js:20:1]
 19 │ 
 20 │ eval >>>= 20;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/xor-arguments-strict.js:20:1]
 19 │ 
 20 │ arguments ^= 20;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/compound-assignment/xor-eval-strict.js:19:1]
 18 │ 
 19 │ eval ^= 20;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/conditional/in-branch-2.js:23:6]
 22 │ 
 23 │ for (true ? 0 : 0 in {}; false; ) ;
    ·      ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/conditional/in-condition.js:23:6]
 22 │ 
 23 │ for ('' in {} ? 0 : 0; false; ) ;
    ·      ──
    ╰────

  × Delete of an unqualified identifier in strict mode.
    ╭─[test262/test/language/expressions/delete/identifier-strict-recursive.js:19:10]
 18 │ 
 19 │ delete ((identifier));
    ·          ──────────
    ╰────

  × Delete of an unqualified identifier in strict mode.
    ╭─[test262/test/language/expressions/delete/identifier-strict.js:18:8]
 17 │ 
 18 │ delete test262identifier;
    ·        ─────────────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/dynamic-import/escape-sequence-import.js:36:1]
 35 │ 
 36 │ im\u0070ort('./empty_FIXTURE.js');
    · ───────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/dynamic-import/import-attributes/2nd-param-yield-ident-invalid.js:20:30]
 19 │ 
 20 │ import('./empty_FIXTURE.js', yield);
    ·                              ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-1-update-expression.js:47:1]
 46 │ 
 47 │ import('')++
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-10-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') -= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-11-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') <<= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-12-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') >>= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-13-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') >>>= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-14-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') &= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-15-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') ^= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-16-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') |= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-17-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') **= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-2-update-expression.js:47:1]
 46 │ 
 47 │ import('')--
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-3-update-expression.js:47:3]
 46 │ 
 47 │ ++import('')
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-4-update-expression.js:47:3]
 46 │ 
 47 │ --import('')
    ·   ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-5-lhs-equals-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') = 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-6-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') *= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-7-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') /= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-8-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') %= 1;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/invalid-assignmenttargettype-syntax-error-9-lhs-assignment-operator-assignment-expression.js:49:1]
 48 │ 
 49 │ import('') += 1;
    · ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expr-not-optional.js:35:10]
 34 │ let f = () => {
 35 │   import();
    ·          ─
 36 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expression-assignment-expr-not-optional.js:34:22]
 33 │ 
 34 │ let f = () => import();
    ·                      ─
 35 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expression-no-new-call-expression.js:37:19]
 36 │ 
 37 │ let f = () => new import('');
    ·                   ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expression-no-rest-param.js:42:22]
 41 │ 
 42 │ let f = () => import(...['']);
    ·                      ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expression-not-extensible-args.js:39:48]
 38 │ 
 39 │ let f = () => import('./empty_FIXTURE.js', {}, '');
    ·                                                ─┬
    ·                                                 ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-assignment-expression-typeof-import.js:34:28]
 33 │ 
 34 │ let f = () => typeof import;
    ·                            ─
 35 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-no-new-call-expression.js:38:7]
 37 │ let f = () => {
 38 │   new import('');
    ·       ──────────
 39 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-no-rest-param.js:43:10]
 42 │ let f = () => {
 43 │   import(...['']);
    ·          ───
 44 │ };
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-not-extensible-args.js:40:36]
 39 │ let f = () => {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-arrow-typeof-import.js:35:16]
 34 │ let f = () => {
 35 │   typeof import;
    ·                ─
 36 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-await-assignment-expr-not-optional.js:35:16]
 34 │ (async () => {
 35 │   await import()
    ·                ─
 36 │ });
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-await-no-new-call-expression.js:38:13]
 37 │ (async () => {
 38 │   await new import('')
    ·             ──────────
 39 │ });
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-await-no-rest-param.js:43:16]
 42 │ (async () => {
 43 │   await import(...[''])
    ·                ───
 44 │ });
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-await-not-extensible-args.js:40:42]
 39 │ (async () => {
 40 │   await import('./empty_FIXTURE.js', {}, '')
    ·                                          ─┬
    ·                                           ╰── `)` expected
 41 │ });
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-await-typeof-import.js:36:1]
 35 │   await typeof import
 36 │ });
    · ─
 37 │ 
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-return-await-assignment-expr-not-optional.js:34:27]
 33 │ 
 34 │ (async () => await import())
    ·                           ─
 35 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-return-await-no-new-call-expression.js:37:24]
 36 │ 
 37 │ (async () => await new import(''))
    ·                        ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-return-await-no-rest-param.js:42:27]
 41 │ 
 42 │ (async () => await import(...['']))
    ·                           ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-return-await-not-extensible-args.js:39:53]
 38 │ 
 39 │ (async () => await import('./empty_FIXTURE.js', {}, ''))
    ·                                                     ─┬
    ·                                                      ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-arrow-function-return-await-typeof-import.js:34:33]
 33 │ 
 34 │ (async () => await typeof import)
    ·                                 ─
 35 │ 
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-assignment-expr-not-optional.js:35:10]
 34 │ async function f() {
 35 │   import();
    ·          ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-await-assignment-expr-not-optional.js:35:16]
 34 │ async function f() {
 35 │   await import();
    ·                ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-await-no-new-call-expression.js:38:13]
 37 │ async function f() {
 38 │   await new import('');
    ·             ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-await-no-rest-param.js:43:16]
 42 │ async function f() {
 43 │   await import(...['']);
    ·                ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-await-not-extensible-args.js:40:42]
 39 │ async function f() {
 40 │   await import('./empty_FIXTURE.js', {}, '');
    ·                                          ─┬
    ·                                           ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-await-typeof-import.js:35:22]
 34 │ async function f() {
 35 │   await typeof import;
    ·                      ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-no-new-call-expression.js:38:7]
 37 │ async function f() {
 38 │   new import('');
    ·       ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-no-rest-param.js:43:10]
 42 │ async function f() {
 43 │   import(...['']);
    ·          ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-not-extensible-args.js:40:36]
 39 │ async function f() {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-return-await-assignment-expr-not-optional.js:35:23]
 34 │ async function f() {
 35 │   return await import();
    ·                       ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-return-await-no-new-call-expression.js:38:20]
 37 │ async function f() {
 38 │   return await new import('');
    ·                    ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-return-await-no-rest-param.js:43:23]
 42 │ async function f() {
 43 │   return await import(...['']);
    ·                       ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-return-await-not-extensible-args.js:40:49]
 39 │ async function f() {
 40 │   return await import('./empty_FIXTURE.js', {}, '');
    ·                                                 ─┬
    ·                                                  ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-return-await-typeof-import.js:35:29]
 34 │ async function f() {
 35 │   return await typeof import;
    ·                             ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-function-typeof-import.js:35:16]
 34 │ async function f() {
 35 │   typeof import;
    ·                ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-gen-await-assignment-expr-not-optional.js:35:16]
 34 │ async function * f() {
 35 │   await import()
    ·                ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-gen-await-no-new-call-expression.js:38:13]
 37 │ async function * f() {
 38 │   await new import('')
    ·             ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-gen-await-no-rest-param.js:43:16]
 42 │ async function * f() {
 43 │   await import(...[''])
    ·                ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-gen-await-not-extensible-args.js:40:42]
 39 │ async function * f() {
 40 │   await import('./empty_FIXTURE.js', {}, '')
    ·                                          ─┬
    ·                                           ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-async-gen-await-typeof-import.js:36:1]
 35 │   await typeof import
 36 │ }
    · ─
 37 │ 
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-assignment-expr-not-optional.js:35:10]
 34 │ {
 35 │   import();
    ·          ─
 36 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-labeled-assignment-expr-not-optional.js:35:10]
 34 │ label: {
 35 │   import();
    ·          ─
 36 │ };
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-labeled-no-new-call-expression.js:38:7]
 37 │ label: {
 38 │   new import('');
    ·       ──────────
 39 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-labeled-no-rest-param.js:43:10]
 42 │ label: {
 43 │   import(...['']);
    ·          ───
 44 │ };
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-labeled-not-extensible-args.js:40:36]
 39 │ label: {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-labeled-typeof-import.js:35:16]
 34 │ label: {
 35 │   typeof import;
    ·                ─
 36 │ };
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-no-new-call-expression.js:38:7]
 37 │ {
 38 │   new import('');
    ·       ──────────
 39 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-no-rest-param.js:43:10]
 42 │ {
 43 │   import(...['']);
    ·          ───
 44 │ };
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-not-extensible-args.js:40:36]
 39 │ {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-block-typeof-import.js:35:16]
 34 │ {
 35 │   typeof import;
    ·                ─
 36 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-do-while-assignment-expr-not-optional.js:35:10]
 34 │ do {
 35 │   import();
    ·          ─
 36 │ } while (false);
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-do-while-no-new-call-expression.js:38:7]
 37 │ do {
 38 │   new import('');
    ·       ──────────
 39 │ } while (false);
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-do-while-no-rest-param.js:43:10]
 42 │ do {
 43 │   import(...['']);
    ·          ───
 44 │ } while (false);
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-do-while-not-extensible-args.js:40:36]
 39 │ do {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ } while (false);
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-do-while-typeof-import.js:35:16]
 34 │ do {
 35 │   typeof import;
    ·                ─
 36 │ } while (false);
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-assignment-expr-not-optional.js:37:10]
 36 │ } else {
 37 │   import();
    ·          ─
 38 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-braceless-assignment-expr-not-optional.js:36:15]
 35 │ 
 36 │ } else import();
    ·               ─
 37 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-braceless-no-new-call-expression.js:39:12]
 38 │ 
 39 │ } else new import('');
    ·            ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-braceless-no-rest-param.js:44:15]
 43 │ 
 44 │ } else import(...['']);
    ·               ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-braceless-not-extensible-args.js:41:41]
 40 │ 
 41 │ } else import('./empty_FIXTURE.js', {}, '');
    ·                                         ─┬
    ·                                          ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-braceless-typeof-import.js:36:21]
 35 │ 
 36 │ } else typeof import;
    ·                     ─
 37 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-no-new-call-expression.js:40:7]
 39 │ } else {
 40 │   new import('');
    ·       ──────────
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-no-rest-param.js:45:10]
 44 │ } else {
 45 │   import(...['']);
    ·          ───
 46 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-not-extensible-args.js:42:36]
 41 │ } else {
 42 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 43 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-else-typeof-import.js:37:16]
 36 │ } else {
 37 │   typeof import;
    ·                ─
 38 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-assignment-expr-not-optional.js:35:10]
 34 │ function fn() {
 35 │   import();
    ·          ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-no-new-call-expression.js:38:7]
 37 │ function fn() {
 38 │   new import('');
    ·       ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-no-rest-param.js:43:10]
 42 │ function fn() {
 43 │   import(...['']);
    ·          ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-not-extensible-args.js:40:36]
 39 │ function fn() {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-return-assignment-expr-not-optional.js:35:17]
 34 │ function fn() {
 35 │   return import();
    ·                 ─
 36 │ }
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-return-no-new-call-expression.js:38:14]
 37 │ function fn() {
 38 │   return new import('');
    ·              ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-return-no-rest-param.js:43:17]
 42 │ function fn() {
 43 │   return import(...['']);
    ·                 ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-return-not-extensible-args.js:40:43]
 39 │ function fn() {
 40 │   return import('./empty_FIXTURE.js', {}, '');
    ·                                           ─┬
    ·                                            ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-return-typeof-import.js:35:23]
 34 │ function fn() {
 35 │   return typeof import;
    ·                       ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-function-typeof-import.js:35:16]
 34 │ function fn() {
 35 │   typeof import;
    ·                ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-assignment-expr-not-optional.js:35:10]
 34 │ if (true) {
 35 │   import();
    ·          ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-braceless-assignment-expr-not-optional.js:34:18]
 33 │ 
 34 │ if (true) import();
    ·                  ─
 35 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-braceless-no-new-call-expression.js:37:15]
 36 │ 
 37 │ if (true) new import('');
    ·               ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-braceless-no-rest-param.js:42:18]
 41 │ 
 42 │ if (true) import(...['']);
    ·                  ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-braceless-not-extensible-args.js:39:44]
 38 │ 
 39 │ if (true) import('./empty_FIXTURE.js', {}, '');
    ·                                            ─┬
    ·                                             ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-braceless-typeof-import.js:34:24]
 33 │ 
 34 │ if (true) typeof import;
    ·                        ─
 35 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-no-new-call-expression.js:38:7]
 37 │ if (true) {
 38 │   new import('');
    ·       ──────────
 39 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-no-rest-param.js:43:10]
 42 │ if (true) {
 43 │   import(...['']);
    ·          ───
 44 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-not-extensible-args.js:40:36]
 39 │ if (true) {
 40 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 41 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-if-typeof-import.js:35:16]
 34 │ if (true) {
 35 │   typeof import;
    ·                ─
 36 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-while-assignment-expr-not-optional.js:37:10]
 36 │   x++;
 37 │   import();
    ·          ─
 38 │ };
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-while-no-new-call-expression.js:40:7]
 39 │   x++;
 40 │   new import('');
    ·       ──────────
 41 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-while-no-rest-param.js:45:10]
 44 │   x++;
 45 │   import(...['']);
    ·          ───
 46 │ };
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-while-not-extensible-args.js:42:36]
 41 │   x++;
 42 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 43 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-while-typeof-import.js:37:16]
 36 │   x++;
 37 │   typeof import;
    ·                ─
 38 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-assignment-expr-not-optional.js:34:10]
 33 │ with ({}) {
 34 │   import();
    ·          ─
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-expression-assignment-expr-not-optional.js:33:14]
 32 │ 
 33 │ with (import()) {}
    ·              ─
 34 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-expression-no-new-call-expression.js:36:11]
 35 │ 
 36 │ with (new import('')) {}
    ·           ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-expression-no-rest-param.js:41:14]
 40 │ 
 41 │ with (import(...[''])) {}
    ·              ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-expression-not-extensible-args.js:38:40]
 37 │ 
 38 │ with (import('./empty_FIXTURE.js', {}, '')) {}
    ·                                        ─┬
    ·                                         ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-expression-typeof-import.js:33:20]
 32 │ 
 33 │ with (typeof import) {}
    ·                    ─
 34 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-no-new-call-expression.js:37:7]
 36 │ with ({}) {
 37 │   new import('');
    ·       ──────────
 38 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-no-rest-param.js:42:10]
 41 │ with ({}) {
 42 │   import(...['']);
    ·          ───
 43 │ }
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-not-extensible-args.js:39:36]
 38 │ with ({}) {
 39 │   import('./empty_FIXTURE.js', {}, '');
    ·                                    ─┬
    ·                                     ╰── `)` expected
 40 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/nested-with-typeof-import.js:34:16]
 33 │ with ({}) {
 34 │   typeof import;
    ·                ─
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/top-level-assignment-expr-not-optional.js:24:8]
 23 │ 
 24 │ import();
    ·        ─
 25 │ 
    ╰────

  × Cannot use new with dynamic import
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/top-level-no-new-call-expression.js:27:5]
 26 │ 
 27 │ new import('');
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/top-level-no-rest-param.js:32:8]
 31 │ 
 32 │ import(...['']);
    ·        ───
    ╰────

  × Expected `)` but found `string`
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/top-level-not-extensible-args.js:29:34]
 28 │ 
 29 │ import('./empty_FIXTURE.js', {}, '');
    ·                                  ─┬
    ·                                   ╰── `)` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/dynamic-import/syntax/invalid/top-level-typeof-import.js:24:14]
 23 │ 
 24 │ typeof import;
    ·              ─
 25 │ 
    ╰────

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-bitnot-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ ~3 ** 2;
    · ───────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-delete-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ delete o.p ** 2;
    · ───────────────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-logical-not-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ !1 ** 2;
    · ───────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-negate-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ -3 ** 2;
    · ───────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-plus-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ +1 ** 2;
    · ───────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-typeof-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ typeof 1 ** 2;
    · ─────────────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Unexpected exponentiation expression
    ╭─[test262/test/language/expressions/exponentiation/exp-operator-syntax-error-void-unary-expression-base.js:26:1]
 25 │ $DONOTEVALUATE();
 26 │ void 1 ** 2;
    · ───────────
    ╰────
  help: Wrap unary expression in parentheses to enforce operator precedence

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/function/array-destructuring-param-strict-body.js:132:3]
 131 │ 0, function([element]) {
 132 │   "use strict";
     ·   ─────────────
 133 │ };
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/function/dflt-params-duplicates.js:60:13]
 59 │ 
 60 │ 0, function(x = 0, x) {
    ·             ┬      ┬
    ·             │      ╰── It can not be redeclared here
    ·             ╰── `x` has already been declared here
 61 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dflt-params-rest.js:64:16]
 63 │ 
 64 │ 0, function(...x = []) {
    ·                ──────
 65 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-init-ary.js:54:18]
 53 │ var f;
 54 │ f = function([...[ x ] = []]) {
    ·                  ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-init-id.js:54:18]
 53 │ var f;
 54 │ f = function([...x = []]) {
    ·                  ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-init-obj.js:54:18]
 53 │ var f;
 54 │ f = function([...{ x } = []]) {
    ·                  ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-not-final-ary.js:54:15]
 53 │ var f;
 54 │ f = function([...[x], y]) {
    ·               ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-not-final-id.js:54:15]
 53 │ var f;
 54 │ f = function([...x, y]) {
    ·               ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/ary-ptrn-rest-not-final-obj.js:54:15]
 53 │ var f;
 54 │ f = function([...{ x }, y]) {
    ·               ────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-init-ary.js:54:18]
 53 │ var f;
 54 │ f = function([...[ x ] = []] = []) {
    ·                  ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-init-id.js:54:18]
 53 │ var f;
 54 │ f = function([...x = []] = []) {
    ·                  ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-init-obj.js:54:18]
 53 │ var f;
 54 │ f = function([...{ x } = []] = []) {
    ·                  ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-not-final-ary.js:54:15]
 53 │ var f;
 54 │ f = function([...[x], y] = [1, 2, 3]) {
    ·               ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-not-final-id.js:54:15]
 53 │ var f;
 54 │ f = function([...x, y] = [1, 2, 3]) {
    ·               ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/function/dstr/dflt-ary-ptrn-rest-not-final-obj.js:54:15]
 53 │ var f;
 54 │ f = function([...{ x }, y] = [1, 2, 3]) {
    ·               ────────
 55 │   
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/function/early-body-super-call.js:18:3]
 17 │ 0, function() {
 18 │   super();
    ·   ───────
 19 │ };
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/function/early-body-super-prop.js:18:3]
 17 │ 0, function() {
 18 │   super.x;
    ·   ─────
 19 │ };
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/function/early-errors/invalid-names-call-expression-bad-reference.js:41:36]
 40 │ 
 41 │ var fn = function() { (() => {})().#x };
    ·                                    ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/function/early-errors/invalid-names-call-expression-this.js:41:38]
 40 │ 
 41 │ var fn = function() { (() => this)().#x };
    ·                                      ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/function/early-errors/invalid-names-member-expression-bad-reference.js:41:33]
 40 │ 
 41 │ var fn = function() { something.#x };
    ·                                 ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/function/early-errors/invalid-names-member-expression-this.js:41:28]
 40 │ 
 41 │ var fn = function() { this.#x };
    ·                            ──
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/function/early-params-super-call.js:17:17]
 16 │ 
 17 │ 0, function(x = super()) {};
    ·                 ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/expressions/function/early-params-super-prop.js:17:17]
 16 │ 
 17 │ 0, function(x = super.x) {};
    ·                 ─────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/function/name-arguments-strict-body.js:18:11]
 17 │ 
 18 │ (function arguments() {'use strict';});
    ·           ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/function/name-arguments-strict.js:18:11]
 17 │ 
 18 │ (function arguments() {});
    ·           ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/function/name-eval-strict-body.js:18:11]
 17 │ 
 18 │ (function eval() {'use strict';});
    ·           ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/function/name-eval-strict.js:18:11]
 17 │ 
 18 │ (function eval() {});
    ·           ────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/function/object-destructuring-param-strict-body.js:132:3]
 131 │ 0, function({property}) {
 132 │   "use strict";
     ·   ─────────────
 133 │ };
     ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/function/param-dflt-yield-strict.js:23:19]
 22 │ function *g() {
 23 │   0, function(x = yield) {
    ·                   ─────
 24 │     paramValue = x;
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-1.js:23:12]
 22 │ 
 23 │ (function (param, param) { });
    ·            ──┬──  ──┬──
    ·              │      ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Identifier `param1` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-2.js:24:12]
 23 │ 
 24 │ (function (param1, param2, param1) { });
    ·            ───┬──          ───┬──
    ·               │               ╰── It can not be redeclared here
    ·               ╰── `param1` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-3.js:23:12]
 22 │ 
 23 │ (function (param, param, param) { });
    ·            ──┬──  ──┬──
    ·              │      ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-3.js:23:12]
 22 │ 
 23 │ (function (param, param, param) { });
    ·            ──┬──         ──┬──
    ·              │             ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-body-1.js:22:12]
 21 │ 
 22 │ (function (param, param) { 'use strict'; });
    ·            ──┬──  ──┬──
    ·              │      ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Identifier `param1` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-body-2.js:23:12]
 22 │ 
 23 │ (function (param1, param2, param1) { 'use strict'; });
    ·            ───┬──          ───┬──
    ·               │               ╰── It can not be redeclared here
    ·               ╰── `param1` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-body-3.js:21:12]
 20 │ 
 21 │ (function (param, param, param) { 'use strict'; });
    ·            ──┬──  ──┬──
    ·              │      ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/function/param-duplicated-strict-body-3.js:21:12]
 20 │ 
 21 │ (function (param, param, param) { 'use strict'; });
    ·            ──┬──         ──┬──
    ·              │             ╰── It can not be redeclared here
    ·              ╰── `param` has already been declared here
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/function/param-eval-strict-body.js:22:12]
 21 │ 
 22 │ (function (eval) { 'use strict'; });
    ·            ────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/function/rest-param-strict-body.js:132:3]
 131 │ 0, function(a,...rest) {
 132 │   "use strict";
     ·   ─────────────
 133 │ };
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/function/rest-params-trailing-comma-early-error.js:56:13]
 55 │ 
 56 │ 0, function(...a,) {
    ·             ────
 57 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/function/use-strict-with-non-simple-param.js:21:3]
 20 │ var f = function(a = 0) {
 21 │   "use strict";
    ·   ─────────────
 22 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/generators/array-destructuring-param-strict-body.js:133:3]
 132 │ 0, function*([element]) {
 133 │   "use strict";
     ·   ─────────────
 134 │ };
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/generators/dflt-params-duplicates.js:61:14]
 60 │ 
 61 │ 0, function*(x = 0, x) {
    ·              ┬      ┬
    ·              │      ╰── It can not be redeclared here
    ·              ╰── `x` has already been declared here
 62 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dflt-params-rest.js:65:17]
 64 │ 
 65 │ 0, function*(...x = []) {
    ·                 ──────
 66 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-init-ary.js:54:19]
 53 │ var f;
 54 │ f = function*([...[ x ] = []]) {
    ·                   ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-init-id.js:54:19]
 53 │ var f;
 54 │ f = function*([...x = []]) {
    ·                   ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-init-obj.js:54:19]
 53 │ var f;
 54 │ f = function*([...{ x } = []]) {
    ·                   ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-not-final-ary.js:54:16]
 53 │ var f;
 54 │ f = function*([...[x], y]) {
    ·                ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-not-final-id.js:54:16]
 53 │ var f;
 54 │ f = function*([...x, y]) {
    ·                ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/ary-ptrn-rest-not-final-obj.js:54:16]
 53 │ var f;
 54 │ f = function*([...{ x }, y]) {
    ·                ────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-init-ary.js:54:19]
 53 │ var f;
 54 │ f = function*([...[ x ] = []] = []) {
    ·                   ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-init-id.js:54:19]
 53 │ var f;
 54 │ f = function*([...x = []] = []) {
    ·                   ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-init-obj.js:54:19]
 53 │ var f;
 54 │ f = function*([...{ x } = []] = []) {
    ·                   ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-not-final-ary.js:54:16]
 53 │ var f;
 54 │ f = function*([...[x], y] = [1, 2, 3]) {
    ·                ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-not-final-id.js:54:16]
 53 │ var f;
 54 │ f = function*([...x, y] = [1, 2, 3]) {
    ·                ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/generators/dstr/dflt-ary-ptrn-rest-not-final-obj.js:54:16]
 53 │ var f;
 54 │ f = function*([...{ x }, y] = [1, 2, 3]) {
    ·                ────────
 55 │   
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/named-yield-as-binding-identifier-escaped.js:29:7]
 28 │ var gen = function *g() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-as-binding-identifier-escaped.js:29:7]
 28 │ var gen = function *g() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/named-yield-as-binding-identifier.js:29:7]
 28 │ var gen = function *g() {
 29 │   var yield;
    ·       ─────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-as-binding-identifier.js:29:7]
 28 │ var gen = function *g() {
 29 │   var yield;
    ·       ─────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/named-yield-as-identifier-reference-escaped.js:29:8]
 28 │ var gen = function *g() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-as-identifier-reference-escaped.js:29:8]
 28 │ var gen = function *g() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/named-yield-as-identifier-reference.js:29:8]
 28 │ var gen = function *g() {
 29 │   void yield;
    ·        ─────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-as-identifier-reference.js:29:8]
 28 │ var gen = function *g() {
 29 │   void yield;
    ·        ─────
 30 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/generators/named-yield-as-label-identifier-escaped.js:29:3]
 28 │ var gen = function *g() {
 29 │   yi\u0065ld: ;
    ·   ──────────
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/generators/named-yield-as-label-identifier-escaped.js:29:13]
 28 │ var gen = function *g() {
 29 │   yi\u0065ld: ;
    ·             ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/generators/named-yield-as-label-identifier.js:29:8]
 28 │ var gen = function *g() {
 29 │   yield: ;
    ·        ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-identifier-spread-strict.js:35:15]
 34 │        ...(function() {
 35 │           var yield;
    ·               ─────
 36 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/named-yield-identifier-strict.js:27:11]
 26 │   (function() {
 27 │       var yield;
    ·           ─────
 28 │       throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/generators/object-destructuring-param-strict-body.js:133:3]
 132 │ 0, function*({property}) {
 133 │   "use strict";
     ·   ─────────────
 134 │ };
     ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/generators/param-dflt-yield.js:26:18]
 25 │ 
 26 │ 0, function*(x = yield) {};
    ·                  ──┬──
    ·                    ╰── yield expression not allowed in formal parameter
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/generators/rest-param-strict-body.js:133:3]
 132 │ 0, function*(a,...rest) {
 133 │   "use strict";
     ·   ─────────────
 134 │ };
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/generators/rest-params-trailing-comma-early-error.js:58:14]
 57 │ 
 58 │ 0, function*(...a,) {
    ·              ────
 59 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/generators/use-strict-with-non-simple-param.js:22:3]
 21 │ var f = function*(a = 0) {
 22 │   "use strict";
    ·   ─────────────
 23 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-binding-identifier-escaped.js:29:7]
 28 │ var gen = function *() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-as-binding-identifier-escaped.js:29:7]
 28 │ var gen = function *() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-binding-identifier.js:29:7]
 28 │ var gen = function *() {
 29 │   var yield;
    ·       ─────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-as-binding-identifier.js:29:7]
 28 │ var gen = function *() {
 29 │   var yield;
    ·       ─────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-generator-expression-binding-identifier.js:17:19]
 16 │ 
 17 │ var g = function* yield() {};
    ·                   ─────
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-identifier-reference-escaped.js:29:8]
 28 │ var gen = function *() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-as-identifier-reference-escaped.js:29:8]
 28 │ var gen = function *() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-identifier-reference.js:29:8]
 28 │ var gen = function *() {
 29 │   void yield;
    ·        ─────
 30 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-as-identifier-reference.js:29:8]
 28 │ var gen = function *() {
 29 │   void yield;
    ·        ─────
 30 │ };
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/generators/yield-as-label-identifier-escaped.js:29:3]
 28 │ var gen = function *() {
 29 │   yi\u0065ld: ;
    ·   ──────────
 30 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/generators/yield-as-label-identifier-escaped.js:29:13]
 28 │ var gen = function *() {
 29 │   yi\u0065ld: ;
    ·             ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/generators/yield-as-label-identifier.js:29:8]
 28 │ var gen = function *() {
 29 │   yield: ;
    ·        ▲
 30 │ };
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/expressions/generators/yield-as-logical-or-expression.js:19:9]
 18 │ var g = function*() {
 19 │   yield ? yield : yield;
    ·         ─
 20 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-as-parameter.js:18:19]
 17 │ 
 18 │ var g = function*(yield) {};
    ·                   ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-as-parameter.js:18:19]
 17 │ 
 18 │ var g = function*(yield) {};
    ·                   ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-identifier-spread-strict.js:35:15]
 34 │        ...(function() {
 35 │           var yield;
    ·               ─────
 36 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/generators/yield-identifier-strict.js:27:11]
 26 │   (function() {
 27 │       var yield;
    ·           ─────
 28 │       throw new Test262Error();
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/generators/yield-star-after-newline.js:19:3]
 18 │   yield
 19 │   * 1
    ·   ─
 20 │ };
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/generators/yield-weak-binding.js:17:33]
 16 │ 
 17 │ var g = function*() { yield 3 + yield 4; };
    ·                                 ─────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/generators/yield-weak-binding.js:17:38]
 16 │ 
 17 │ var g = function*() { yield 3 + yield 4; };
    ·                                      ▲
    ╰────
  help: Try insert a semicolon here

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/import.meta/syntax/escape-sequence-import.js:34:1]
 33 │ 
 34 │ im\u0070ort.meta;
    · ───────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/import.meta/syntax/escape-sequence-meta.js:34:8]
 33 │ 
 34 │ import.m\u0065ta;
    ·        ─────────
    ╰────

  × Unexpected import.meta expression
    ╭─[test262/test/language/expressions/import.meta/syntax/goal-script.js:19:1]
 18 │ 
 19 │ import.meta;
    · ───────────
    ╰────
  help: import.meta is only allowed in module code

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-array-destructuring-expr.js:31:2]
 30 │ 
 31 │ [import.meta] = [];
    ·  ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-array-rest-destructuring-expr.js:31:5]
 30 │ 
 31 │ [...import.meta] = [];
    ·     ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-assignment-expr.js:31:1]
 30 │ 
 31 │ import.meta = 0;
    · ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-for-await-of-loop.js:31:16]
 30 │ async function* f() {
 31 │     for await (import.meta of null) ;
    ·                ───────────
 32 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-for-in-loop.js:30:6]
 29 │ 
 30 │ for (import.meta in null) ;
    ·      ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-for-of-loop.js:30:6]
 29 │ 
 30 │ for (import.meta of null) ;
    ·      ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-object-destructuring-expr.js:31:6]
 30 │ 
 31 │ ({a: import.meta} = {});
    ·      ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-object-rest-destructuring-expr.js:31:6]
 30 │ 
 31 │ ({...import.meta} = {});
    ·      ───────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/import.meta/syntax/invalid-assignment-target-update-expr.js:32:1]
 31 │ 
 32 │ import.meta++;
    · ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/in/private-field-in-nested.js:26:15]
 25 │   constructor() {
 26 │     #field in #field in this;
    ·               ──────
 27 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/in/private-field-in.js:25:10]
 24 │   constructor() {
 25 │     for (#field in value;;) break;
    ·          ──────
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/in/private-field-invalid-assignment-reference.js:24:10]
 23 │   m() {
 24 │     for (#field in []) ;
    ·          ──────
 25 │   }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/in/private-field-invalid-assignment-target.js:30:5]
 29 │   constructor() {
 30 │     #field in {} = 0;
    ·     ────────────
 31 │   }
    ╰────

  × Private field 'b' must be declared in an enclosing class
    ╭─[test262/test/language/expressions/in/private-field-invalid-identifier-complex.js:30:5]
 29 │   constructor() {
 30 │     #b in {};
    ·     ──
 31 │   }
    ╰────

  × Private identifier '#name' is not allowed outside class bodies
    ╭─[test262/test/language/expressions/in/private-field-invalid-identifier-simple.js:26:1]
 25 │ 
 26 │ #name in {};
    · ─────
    ╰────

  × Empty parenthesized expression
    ╭─[test262/test/language/expressions/in/private-field-invalid-rhs.js:25:15]
 24 │   constructor() {
 25 │     #field in () => {};
    ·               ──
 26 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/in/private-field-rhs-yield-absent.js:32:15]
 31 │   static method() {
 32 │     #field in yield;
    ·               ─────
 33 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/in/rhs-yield-absent-strict.js:21:8]
 20 │ 
 21 │ '' in (yield);
    ·        ─────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-and-arguments-strict.js:19:1]
 18 │ 
 19 │ arguments &&= 20;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-and-assignment-operator-non-simple-lhs.js:20:1]
 19 │ function test() {}
 20 │ test() &&= 1;
    · ──────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-and-eval-strict.js:18:1]
 17 │ 
 18 │ eval &&= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-and-non-simple.js:18:1]
 17 │ 
 18 │ 1 &&= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-nullish-arguments-strict.js:19:1]
 18 │ 
 19 │ arguments ??= 20;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-nullish-assignment-operator-non-simple-lhs.js:20:1]
 19 │ function test() {}
 20 │ test() ??= 1;
    · ──────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-nullish-eval-strict.js:18:1]
 17 │ 
 18 │ eval ??= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-nullish-non-simple.js:18:1]
 17 │ 
 18 │ 1 ??= 1;
    · ─
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-or-arguments-strict.js:19:1]
 18 │ 
 19 │ arguments ||= 20;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-or-assignment-operator-non-simple-lhs.js:20:1]
 19 │ function test() {}
 20 │ test() ||= 1;
    · ──────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-or-eval-strict.js:18:1]
 17 │ 
 18 │ eval ||= 20;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/logical-assignment/lgcl-or-non-simple.js:18:1]
 17 │ 
 18 │ 1 ||= 1;
    · ─
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/new.target/escaped-new.js:25:5]
 24 │ function f() {
 25 │     n\u0065w.target;
    ·     ────────
 26 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/new.target/escaped-target.js:25:9]
 24 │ function f() {
 25 │     new.t\u0061rget;
    ·         ───────────
 26 │ }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/object/11.1.5-1gs.js:19:31]
 18 │ 
 19 │ var obj = { set _11_1_5_1_fun(eval) {}};
    ·                               ────
    ╰────

  × Identifier `__proto__` has already been declared
    ╭─[test262/test/language/expressions/object/__proto__-duplicate.js:21:3]
 20 │ ({
 21 │   __proto__: null,
    ·   ────┬────
    ·       ╰── `__proto__` has already been declared here
 22 │   other: null,
 23 │   '__proto__': null
    ·   ─────┬─────
    ·        ╰── It can not be redeclared here
 24 │ });
    ╰────

  × Invalid assignment in object literal
    ╭─[test262/test/language/expressions/object/cover-initialized-name.js:33:4]
 32 │ 
 33 │ ({ a = 1 });
    ·    ─────
    ╰────
  help: Did you mean to use a ':'? An '=' can only follow a property name when the containing object literal is part of a destructuring pattern.

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-init-ary.js:39:21]
 38 │ var obj = {
 39 │   async *method([...[ x ] = []]) {
    ·                     ──────────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-init-id.js:39:21]
 38 │ var obj = {
 39 │   async *method([...x = []]) {
    ·                     ──────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-init-obj.js:39:21]
 38 │ var obj = {
 39 │   async *method([...{ x } = []]) {
    ·                     ──────────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-not-final-ary.js:39:18]
 38 │ var obj = {
 39 │   async *method([...[x], y]) {
    ·                  ──────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-not-final-id.js:39:18]
 38 │ var obj = {
 39 │   async *method([...x, y]) {
    ·                  ────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-ary-ptrn-rest-not-final-obj.js:39:18]
 38 │ var obj = {
 39 │   async *method([...{ x }, y]) {
    ·                  ────────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-ary.js:39:21]
 38 │ var obj = {
 39 │   async *method([...[ x ] = []] = []) {
    ·                     ──────────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-id.js:39:21]
 38 │ var obj = {
 39 │   async *method([...x = []] = []) {
    ·                     ──────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-obj.js:39:21]
 38 │ var obj = {
 39 │   async *method([...{ x } = []] = []) {
    ·                     ──────────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:39:18]
 38 │ var obj = {
 39 │   async *method([...[x], y] = [1, 2, 3]) {
    ·                  ──────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:39:18]
 38 │ var obj = {
 39 │   async *method([...x, y] = [1, 2, 3]) {
    ·                  ────
 40 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:39:18]
 38 │ var obj = {
 39 │   async *method([...{ x }, y] = [1, 2, 3]) {
    ·                  ────────
 40 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-init-ary.js:59:15]
 58 │ var obj = {
 59 │   *method([...[ x ] = []]) {
    ·               ──────────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-init-id.js:59:15]
 58 │ var obj = {
 59 │   *method([...x = []]) {
    ·               ──────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-init-obj.js:59:15]
 58 │ var obj = {
 59 │   *method([...{ x } = []]) {
    ·               ──────────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-not-final-ary.js:59:12]
 58 │ var obj = {
 59 │   *method([...[x], y]) {
    ·            ──────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-not-final-id.js:59:12]
 58 │ var obj = {
 59 │   *method([...x, y]) {
    ·            ────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-ary-ptrn-rest-not-final-obj.js:59:12]
 58 │ var obj = {
 59 │   *method([...{ x }, y]) {
    ·            ────────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-init-ary.js:59:15]
 58 │ var obj = {
 59 │   *method([...[ x ] = []] = []) {
    ·               ──────────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-init-id.js:59:15]
 58 │ var obj = {
 59 │   *method([...x = []] = []) {
    ·               ──────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-init-obj.js:59:15]
 58 │ var obj = {
 59 │   *method([...{ x } = []] = []) {
    ·               ──────────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:59:12]
 58 │ var obj = {
 59 │   *method([...[x], y] = [1, 2, 3]) {
    ·            ──────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-id.js:59:12]
 58 │ var obj = {
 59 │   *method([...x, y] = [1, 2, 3]) {
    ·            ────
 60 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:59:12]
 58 │ var obj = {
 59 │   *method([...{ x }, y] = [1, 2, 3]) {
    ·            ────────
 60 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-init-ary.js:56:14]
 55 │ var obj = {
 56 │   method([...[ x ] = []]) {
    ·              ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-init-id.js:56:14]
 55 │ var obj = {
 56 │   method([...x = []]) {
    ·              ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-init-obj.js:56:14]
 55 │ var obj = {
 56 │   method([...{ x } = []]) {
    ·              ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-not-final-ary.js:56:11]
 55 │ var obj = {
 56 │   method([...[x], y]) {
    ·           ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-not-final-id.js:56:11]
 55 │ var obj = {
 56 │   method([...x, y]) {
    ·           ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-ary-ptrn-rest-not-final-obj.js:56:11]
 55 │ var obj = {
 56 │   method([...{ x }, y]) {
    ·           ────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-init-ary.js:56:14]
 55 │ var obj = {
 56 │   method([...[ x ] = []] = []) {
    ·              ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-init-id.js:56:14]
 55 │ var obj = {
 56 │   method([...x = []] = []) {
    ·              ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-init-obj.js:56:14]
 55 │ var obj = {
 56 │   method([...{ x } = []] = []) {
    ·              ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-not-final-ary.js:56:11]
 55 │ var obj = {
 56 │   method([...[x], y] = [1, 2, 3]) {
    ·           ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-not-final-id.js:56:11]
 55 │ var obj = {
 56 │   method([...x, y] = [1, 2, 3]) {
    ·           ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/expressions/object/dstr/meth-dflt-ary-ptrn-rest-not-final-obj.js:56:11]
 55 │ var obj = {
 56 │   method([...{ x }, y] = [1, 2, 3]) {
    ·           ────────
 57 │     
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/object/getter-body-strict-inside.js:20:5]
 19 │     "use strict";
 20 │     public = 42;
    ·     ──────
 21 │   }
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/object/getter-body-strict-outside.js:19:5]
 18 │   get x() {
 19 │     public = 42;
    ·     ──────
 20 │   }
    ╰────

  × A 'get' accessor must not have any formal parameters.
    ╭─[test262/test/language/expressions/object/getter-param-dflt.js:24:11]
 23 │ 
 24 │ 0, { get a(param = null) {} };
    ·           ──────────────
    ╰────

  × The keyword 'implements' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-implements-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     implements
    ·     ──────────
 32 │   });
    ╰────

  × The keyword 'interface' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-interface-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     interface
    ·     ─────────
 32 │   });
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/identifier-shorthand-invalid-computed-name.js:30:6]
 29 │ 
 30 │ ({[x]});
    ·      ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/identifier-shorthand-invalid-zero.js:23:4]
 22 │ 
 23 │ ({0});
    ·    ─
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-let-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     let
    ·     ───
 32 │   });
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-package-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     package
    ·     ───────
 32 │   });
    ╰────

  × The keyword 'private' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-private-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     private
    ·     ───────
 32 │   });
    ╰────

  × The keyword 'protected' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-protected-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     protected
    ·     ─────────
 32 │   });
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-public-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     public
    ·     ──────
 32 │   });
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/identifier-shorthand-static-init-await-invalid.js:24:8]
 23 │   static {
 24 │     ({ await });
    ·        ─────
 25 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/expressions/object/identifier-shorthand-static-init-await-invalid.js:24:8]
 23 │   static {
 24 │     ({ await });
    ·        ─────
 25 │   }
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-static-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     static
    ·     ──────
 32 │   });
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/identifier-shorthand-yield-invalid-strict-mode.js:31:5]
 30 │   ({
 31 │     yield
    ·     ─────
 32 │   });
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-binding-identifier-escaped.js:31:9]
 30 │   async method() {
 31 │     var \u0061wait;
    ·         ──────────
 32 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-binding-identifier.js:31:9]
 30 │   async method() {
 31 │     var await;
    ·         ─────
 32 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-identifier-reference-escaped.js:31:10]
 30 │   async method() {
 31 │     void \u0061wait;
    ·          ──────────
 32 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-identifier-reference-escaped.js:31:20]
 30 │   async method() {
 31 │     void \u0061wait;
    ·                    ─
 32 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-identifier-reference.js:31:15]
 30 │   async method() {
 31 │     void await;
    ·               ─
 32 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-label-identifier-escaped.js:31:5]
 30 │   async method() {
 31 │     \u0061wait: ;
    ·     ──────────
 32 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-label-identifier-escaped.js:31:15]
 30 │   async method() {
 31 │     \u0061wait: ;
    ·               ─
 32 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-await-as-label-identifier.js:31:10]
 30 │   async method() {
 31 │     await: ;
    ·          ─
 32 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-binding-identifier-escaped.js:30:9]
 29 │   async *method() {
 30 │     var \u0061wait;
    ·         ──────────
 31 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-binding-identifier.js:30:9]
 29 │   async *method() {
 30 │     var await;
    ·         ─────
 31 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-identifier-reference-escaped.js:30:10]
 29 │   async *method() {
 30 │     void \u0061wait;
    ·          ──────────
 31 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-identifier-reference-escaped.js:30:20]
 29 │   async *method() {
 30 │     void \u0061wait;
    ·                    ─
 31 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-identifier-reference.js:30:15]
 29 │   async *method() {
 30 │     void await;
    ·               ─
 31 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-label-identifier-escaped.js:30:5]
 29 │   async *method() {
 30 │     \u0061wait: ;
    ·     ──────────
 31 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-label-identifier-escaped.js:30:15]
 29 │   async *method() {
 30 │     \u0061wait: ;
    ·               ─
 31 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-await-as-label-identifier.js:30:10]
 29 │   async *method() {
 30 │     await: ;
    ·          ─
 31 │   }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-array-destructuring-param-strict-body.js:117:5]
 116 │   async *method([element]) {
 117 │     "use strict";
     ·     ─────────────
 118 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-dflt-params-duplicates.js:45:17]
 44 │ 0, {
 45 │   async *method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 46 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-dflt-params-rest.js:49:20]
 48 │ 0, {
 49 │   async *method(...x = []) {
    ·                    ──────
 50 │     
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-escaped-async.js:26:5]
 25 │ ({
 26 │     \u0061sync* m(){}
    ·     ──────────
 27 │ });
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-object-destructuring-param-strict-body.js:117:5]
 116 │   async *method({property}) {
 117 │     "use strict";
     ·     ─────────────
 118 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-rest-param-strict-body.js:117:5]
 116 │   async *method(a,...rest) {
 117 │     "use strict";
     ·     ─────────────
 118 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-meth-rest-params-trailing-comma-early-error.js:42:17]
 41 │ 0, {
 42 │   async *method(...a,) {
    ·                 ────
 43 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-binding-identifier-escaped.js:30:9]
 29 │   async *method() {
 30 │     var yi\u0065ld;
    ·         ──────────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-binding-identifier-escaped.js:30:9]
 29 │   async *method() {
 30 │     var yi\u0065ld;
    ·         ──────────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-binding-identifier.js:30:9]
 29 │   async *method() {
 30 │     var yield;
    ·         ─────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-binding-identifier.js:30:9]
 29 │   async *method() {
 30 │     var yield;
    ·         ─────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-identifier-reference-escaped.js:30:10]
 29 │   async *method() {
 30 │     void yi\u0065ld;
    ·          ──────────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-identifier-reference-escaped.js:30:10]
 29 │   async *method() {
 30 │     void yi\u0065ld;
    ·          ──────────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-identifier-reference.js:30:10]
 29 │   async *method() {
 30 │     void yield;
    ·          ─────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-identifier-reference.js:30:10]
 29 │   async *method() {
 30 │     void yield;
    ·          ─────
 31 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-label-identifier-escaped.js:30:5]
 29 │   async *method() {
 30 │     yi\u0065ld: ;
    ·     ──────────
 31 │   }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-label-identifier-escaped.js:30:15]
 29 │   async *method() {
 30 │     yi\u0065ld: ;
    ·               ▲
 31 │   }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-as-label-identifier.js:30:10]
 29 │   async *method() {
 30 │     yield: ;
    ·          ▲
 31 │   }
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-identifier-spread-strict.js:36:17]
 35 │          ...(function() {
 36 │             var yield;
    ·                 ─────
 37 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/async-gen-yield-identifier-strict.js:28:13]
 27 │     (function() {
 28 │         var yield;
    ·             ─────
 29 │         throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-meth-array-destructuring-param-strict-body.js:110:5]
 109 │   async *method([element]) {
 110 │     "use strict";
     ·     ─────────────
 111 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/async-meth-dflt-params-duplicates.js:38:17]
 37 │ ({
 38 │   async *method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 39 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/method-definition/async-meth-dflt-params-rest.js:42:20]
 41 │ ({
 42 │   async *method(...x = []) {
    ·                    ──────
 43 │     
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/async-meth-escaped-async.js:26:5]
 25 │ ({
 26 │     \u0061sync m(){}
    ·     ──────────
 27 │ });
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-meth-object-destructuring-param-strict-body.js:110:5]
 109 │   async *method({property}) {
 110 │     "use strict";
     ·     ─────────────
 111 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/async-meth-rest-param-strict-body.js:110:5]
 109 │   async *method(a,...rest) {
 110 │     "use strict";
     ·     ─────────────
 111 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/object/method-definition/async-meth-rest-params-trailing-comma-early-error.js:35:17]
 34 │ ({
 35 │   async *method(...a,) {
    ·                 ────
 36 │     
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-async-method-duplicate-parameters.js:28:13]
 27 │ ({
 28 │   async foo(a, a) { }
    ·             ┬  ┬
    ·             │  ╰── It can not be redeclared here
    ·             ╰── `a` has already been declared here
 29 │ })
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-NSPL-with-USD.js:17:15]
 16 │ ({
 17 │   foo(x = 1) {"use strict"}
    ·               ────────────
 18 │ });
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-arguments-in-formal-parameters.js:18:14]
 17 │ ({
 18 │   async foo (arguments) { }
    ·              ─────────
 19 │ })
    ╰────

  × Expected `,` but found `Identifier`
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-async-lineterminator.js:22:3]
 21 │   async
 22 │   foo() { }
    ·   ─┬─
    ·    ╰── `,` expected
 23 │ })
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-await-in-formals-default.js:17:23]
 16 │ ({
 17 │   async foo (x = await) {  }
    ·                       ─
 18 │ })
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-await-in-formals.js:17:14]
 16 │ ({
 17 │   async foo (await) {  }
    ·              ─────
 18 │ })
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-body-contains-super-call.js:17:18]
 16 │ ({
 17 │   async foo () { super() }
    ·                  ───────
 18 │ })
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-duplicate-parameters.js:27:7]
 26 │ ({
 27 │   foo(a, a) { }
    ·       ┬  ┬
    ·       │  ╰── It can not be redeclared here
    ·       ╰── `a` has already been declared here
 28 │ })
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-eval-in-formal-parameters.js:18:13]
 17 │ ({
 18 │   async foo(eval) { }
    ·             ────
 19 │ })
    ╰────

  × Expected `(` but found `Identifier`
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-formals-body-duplicate.js:18:18]
 17 │ ({
 18 │   async function foo(bar) { let bar; }
    ·                  ─┬─
    ·                   ╰── `(` expected
 19 │ })
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/early-errors-object-method-formals-contains-super-call.js:16:19]
 15 │ ({
 16 │   async foo(foo = super()) { }
    ·                   ───────
 17 │ })
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-get-e.js:25:3]
 24 │ ({
 25 │   g\u0065t m() {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-get-g.js:25:3]
 24 │ ({
 25 │   \u0067et m() {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-get-t.js:25:3]
 24 │ ({
 25 │   ge\u0074 m() {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-get.js:25:3]
 24 │ ({
 25 │   \u0067\u0065\u0074 m() {}
    ·   ──────────────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-set-e.js:25:3]
 24 │ ({
 25 │   s\u0065t m(v) {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-set-s.js:25:3]
 24 │ ({
 25 │   \u0073et m(v) {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-set-t.js:25:3]
 24 │ ({
 25 │   se\u0074 m(v) {}
    ·   ────────
 26 │ });
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/escaped-set.js:25:3]
 24 │ ({
 25 │   \u0073\u0065\u0074 m(v) {}
    ·   ──────────────────
 26 │ });
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/gen-meth-array-destructuring-param-strict-body.js:139:5]
 138 │   *method([element]) {
 139 │     "use strict";
     ·     ─────────────
 140 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/gen-meth-dflt-params-duplicates.js:67:11]
 66 │ 0, {
 67 │   *method(x = 0, x) {
    ·           ┬      ┬
    ·           │      ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
 68 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/method-definition/gen-meth-dflt-params-rest.js:71:14]
 70 │ 0, {
 71 │   *method(...x = []) {
    ·              ──────
 72 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/gen-meth-object-destructuring-param-strict-body.js:139:5]
 138 │   *method({property}) {
 139 │     "use strict";
     ·     ─────────────
 140 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/gen-meth-rest-param-strict-body.js:139:5]
 138 │   *method(a,...rest) {
 139 │     "use strict";
     ·     ─────────────
 140 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/object/method-definition/gen-meth-rest-params-trailing-comma-early-error.js:64:11]
 63 │ 0, {
 64 │   *method(...a,) {
    ·           ────
 65 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-binding-identifier-escaped.js:30:9]
 29 │   *method() {
 30 │     var yi\u0065ld;
    ·         ──────────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-binding-identifier-escaped.js:30:9]
 29 │   *method() {
 30 │     var yi\u0065ld;
    ·         ──────────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-binding-identifier.js:30:9]
 29 │   *method() {
 30 │     var yield;
    ·         ─────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-binding-identifier.js:30:9]
 29 │   *method() {
 30 │     var yield;
    ·         ─────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-identifier-reference-escaped.js:30:10]
 29 │   *method() {
 30 │     void yi\u0065ld;
    ·          ──────────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-identifier-reference-escaped.js:30:10]
 29 │   *method() {
 30 │     void yi\u0065ld;
    ·          ──────────
 31 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-identifier-reference.js:30:10]
 29 │   *method() {
 30 │     void yield;
    ·          ─────
 31 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-identifier-reference.js:30:10]
 29 │   *method() {
 30 │     void yield;
    ·          ─────
 31 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-label-identifier-escaped.js:30:5]
 29 │   *method() {
 30 │     yi\u0065ld: ;
    ·     ──────────
 31 │   }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-label-identifier-escaped.js:30:15]
 29 │   *method() {
 30 │     yi\u0065ld: ;
    ·               ▲
 31 │   }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-as-label-identifier.js:30:10]
 29 │   *method() {
 30 │     yield: ;
    ·          ▲
 31 │   }
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-identifier-spread-strict.js:36:17]
 35 │          ...(function() {
 36 │             var yield;
    ·                 ─────
 37 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/gen-yield-identifier-strict.js:28:13]
 27 │     (function() {
 28 │         var yield;
    ·             ─────
 29 │         throw new Test262Error();
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/generator-param-id-yield.js:19:11]
 18 │ ({
 19 │   *method(yield) {}
    ·           ─────
 20 │ });
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/expressions/object/method-definition/generator-param-init-yield.js:20:17]
 19 │   ({
 20 │     *method(x = yield) {}
    ·                 ──┬──
    ·                   ╰── yield expression not allowed in formal parameter
 21 │   });
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/generator-param-redecl-const.js:21:10]
 20 │ var obj = {
 21 │     *foo(a) {
    ·          ┬
    ·          ╰── `a` has already been declared here
 22 │         const a = 3;
    ·               ┬
    ·               ╰── It can not be redeclared here
 23 │     }
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/generator-param-redecl-let.js:21:10]
 20 │ var obj = {
 21 │     *foo(a) {
    ·          ┬
    ·          ╰── `a` has already been declared here
 22 │         let a = 3;
    ·             ┬
    ·             ╰── It can not be redeclared here
 23 │     }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/generator-super-call-body.js:22:9]
 21 │     *foo(a) {
 22 │         super();
    ·         ───────
 23 │     }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/generator-super-call-param.js:21:14]
 20 │ var obj = {
 21 │     *foo(a = super()) {
    ·              ───────
 22 │     }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/object/method-definition/generator-use-strict-with-non-simple-param.js:23:5]
 22 │   *m(a = 0) {
 23 │     "use strict";
    ·     ─────────────
 24 │   }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/meth-array-destructuring-param-strict-body.js:135:5]
 134 │   method([element]) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/meth-dflt-params-duplicates.js:63:10]
 62 │ 0, {
 63 │   method(x = 0, x) {
    ·          ┬      ┬
    ·          │      ╰── It can not be redeclared here
    ·          ╰── `x` has already been declared here
 64 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/expressions/object/method-definition/meth-dflt-params-rest.js:67:13]
 66 │ 0, {
 67 │   method(...x = []) {
    ·             ──────
 68 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/meth-object-destructuring-param-strict-body.js:135:5]
 134 │   method({property}) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/expressions/object/method-definition/meth-rest-param-strict-body.js:135:5]
 134 │   method(a,...rest) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/expressions/object/method-definition/meth-rest-params-trailing-comma-early-error.js:59:10]
 58 │ 0, {
 59 │   method(...a,) {
    ·          ────
 60 │     
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/expressions/object/method-definition/name-param-redecl.js:19:10]
 18 │ var obj = {
 19 │   method(param) {
    ·          ──┬──
    ·            ╰── `param` has already been declared here
 20 │     let param;
    ·         ──┬──
    ·           ╰── It can not be redeclared here
 21 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/name-super-call-body.js:18:5]
 17 │   method() {
 18 │     super();
    ·     ───────
 19 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/expressions/object/method-definition/name-super-call-param.js:17:18]
 16 │ ({
 17 │   method(param = super()) {}
    ·                  ───────
 18 │ });
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-async-fn-inside-class.js:25:11]
 24 │   field = {
 25 │     async #m() {}
    ·           ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-async-fn.js:24:9]
 23 │ var o = {
 24 │   async #m() {}
    ·         ──
 25 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-async-gen-inside-class.js:25:13]
 24 │   field = {
 25 │     async * #m() {}
    ·             ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-async-gen.js:24:11]
 23 │ var o = {
 24 │   async * #m() {}
    ·           ──
 25 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-gen-inside-class.js:25:7]
 24 │   field = {
 25 │     * #m() {}
    ·       ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-gen.js:24:5]
 23 │ var o = {
 24 │   * #m() {}
    ·     ──
 25 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-get-method-inside-class.js:25:9]
 24 │   field = {
 25 │     get #m() {}
    ·         ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-get-method.js:24:7]
 23 │ var o = {
 24 │   get #m() {}
    ·       ──
 25 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-method-inside-class.js:25:5]
 24 │   field = {
 25 │     #m() {}
    ·     ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-method.js:24:3]
 23 │ var o = {
 24 │   #m() {}
    ·   ──
 25 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-set-method-inside-class.js:25:9]
 24 │   field = {
 25 │     set #m(x) {}
    ·         ──
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/private-name-early-error-set-method.js:24:7]
 23 │ var o = {
 24 │   set #m(x) {}
    ·       ──
 25 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/object/method-definition/setter-use-strict-with-non-simple-param.js:22:5]
 21 │   set m(a = 0) {
 22 │     "use strict";
    ·     ─────────────
 23 │   }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/expressions/object/method-definition/use-strict-with-non-simple-param.js:22:5]
 21 │   m(a = 0) {
 22 │     "use strict";
    ·     ─────────────
 23 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/yield-as-logical-or-expression.js:19:11]
 18 │   *g() {
 19 │     yield ? yield : yield;
    ·           ─
 20 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/yield-as-parameter.js:19:6]
 18 │ var obj = {
 19 │   *g(yield) {}
    ·      ─────
 20 │ };
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/expressions/object/method-definition/yield-as-parameter.js:19:6]
 18 │ var obj = {
 19 │   *g(yield) {}
    ·      ─────
 20 │ };
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/object/method-definition/yield-star-after-newline.js:20:5]
 19 │     yield
 20 │     * 1
    ·     ─
 21 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/expressions/object/method-definition/yield-weak-binding.js:18:20]
 17 │ var obj = {
 18 │   *g() { yield 3 + yield 4; }
    ·                    ─────
 19 │ };
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/expressions/object/method-definition/yield-weak-binding.js:18:25]
 17 │ var obj = {
 18 │   *g() { yield 3 + yield 4; }
    ·                         ▲
 19 │ };
    ╰────
  help: Try insert a semicolon here

  × Expected `(` but found `}`
    ╭─[test262/test/language/expressions/object/prop-def-invalid-async-prefix.js:36:14]
 35 │ 
 36 │ ({async async});
    ·              ┬
    ·              ╰── `(` expected
    ╰────

  × Expected `(` but found `}`
    ╭─[test262/test/language/expressions/object/prop-def-invalid-star-prefix.js:22:8]
 21 │ 
 22 │ ({* foo});
    ·        ┬
    ·        ╰── `(` expected
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/object/setter-body-strict-inside.js:20:5]
 19 │     "use strict";
 20 │     public = 42;
    ·     ──────
 21 │   }
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/expressions/object/setter-body-strict-outside.js:19:5]
 18 │   set x(value) {
 19 │     public = 42;
    ·     ──────
 20 │   }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/object/setter-param-arguments-strict-inside.js:18:9]
 17 │ void {
 18 │   set x(arguments) {
    ·         ─────────
 19 │     "use strict";
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/object/setter-param-arguments-strict-outside.js:19:9]
 18 │ void {
 19 │   set x(arguments) {}
    ·         ─────────
 20 │ };
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/object/setter-param-eval-strict-inside.js:18:9]
 17 │ void {
 18 │   set x(eval) {
    ·         ────
 19 │     "use strict";
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/object/setter-param-eval-strict-outside.js:19:9]
 18 │ void {
 19 │   set x(eval) {}
    ·         ────
 20 │ };
    ╰────

  × 'super' can only be referenced in a derived class.
    ╭─[test262/test/language/expressions/optional-chaining/call-expression-super-no-base.js:20:1]
 19 │     
 20 │ ╭─▶ class C {
 21 │ │     constructor () {
 22 │ │       super()?.a;
    · │       ─────
 23 │ │     }
 24 │ ├─▶ }
    · ╰──── class does not have `extends`
    ╰────
  help: either remove this super, or extend the class

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-null-op-template-string-esi.js:26:3]
 25 │ null?.
 26 │   `hello`
    ·   ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-null-op-template-string.js:23:7]
 22 │ 
 23 │ null?.`hello`;
    ·       ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-null-optchain-template-string-esi.js:26:3]
 25 │ null?.fn
 26 │   `hello`
    ·   ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-null-optchain-template-string.js:23:9]
 22 │ 
 23 │ null?.fn`hello`;
    ·         ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-op-template-string-esi.js:28:3]
 27 │ a?.
 28 │   `hello`
    ·   ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-op-template-string.js:25:4]
 24 │ 
 25 │ a?.`hello`;
    ·    ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-optchain-template-string-esi.js:28:3]
 27 │ a?.fn
 28 │   `hello`
    ·   ───────
    ╰────

  × Tagged template expressions are not permitted in an optional chain
    ╭─[test262/test/language/expressions/optional-chaining/early-errors-tail-position-optchain-template-string.js:25:6]
 24 │ 
 25 │ a?.fn`hello`;
    ·      ───────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/optional-chaining/static-semantics-simple-assignment.js:24:1]
 23 │ 
 24 │ obj?.a = 33;
    · ──────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/optional-chaining/update-expression-postfix.js:24:1]
 23 │ const a = {};
 24 │ a?.b++;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/optional-chaining/update-expression-prefix.js:24:3]
 23 │ const a = {};
 24 │ --a?.b;
    ·   ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/postfix-decrement/arguments.js:27:1]
 26 │ 
 27 │ arguments--;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/postfix-decrement/eval.js:27:1]
 26 │ 
 27 │ eval--;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-decrement/line-terminator-carriage-return.js:18:3]
 17 │ x
 18 │ --;
    ·   ─
 19 │ // The preceding line contains an unprintable CARRIAGE RETURN character (U+000D)
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-decrement/line-terminator-line-feed.js:18:3]
 17 │ x
 18 │ --;
    ·   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-decrement/line-terminator-line-separator.js:17:7]
 16 │ 
 17 │ x --;
    ·     ─
 18 │ // The preceding line contains an unprintable LINE SEPARATOR character (U+2028)
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-decrement/line-terminator-paragraph-separator.js:17:7]
 16 │ 
 17 │ x --;
    ·     ─
 18 │ // The preceding line contains an unprintable PARAGRAPH SEPARATOR character
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-decrement/target-cover-newtarget.js:31:4]
 30 │ function f() {
 31 │   (new.target)--;
    ·    ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-decrement/target-cover-yieldexpr.js:34:4]
 33 │ function* g() {
 34 │   (yield)--;
    ·    ─────
 35 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-decrement/target-newtarget.js:31:3]
 30 │ function f() {
 31 │   new.target--;
    ·   ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-decrement/this.js:28:1]
 27 │ 
 28 │ this--;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/postfix-increment/11.3.1-2-1gs.js:18:1]
 17 │ 
 18 │ arguments++;
    · ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/postfix-increment/arguments.js:23:1]
 22 │ 
 23 │ arguments++;
    · ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/postfix-increment/eval.js:23:1]
 22 │ 
 23 │ eval++;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-increment/line-terminator-carriage-return.js:18:3]
 17 │ x
 18 │ ++;
    ·   ─
 19 │ // The preceding line contains an unprintable CARRIAGE RETURN character (U+000D)
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-increment/line-terminator-line-feed.js:18:3]
 17 │ x
 18 │ ++;
    ·   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-increment/line-terminator-line-separator.js:17:7]
 16 │ 
 17 │ x ++;
    ·     ─
 18 │ // The preceding line contains an unprintable LINE SEPARATOR character (U+2028)
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/postfix-increment/line-terminator-paragraph-separator.js:17:7]
 16 │ 
 17 │ x ++;
    ·     ─
 18 │ // The preceding line contains an unprintable PARAGRAPH SEPARATOR character
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-increment/target-cover-newtarget.js:31:4]
 30 │ function f() {
 31 │   (new.target)++;
    ·    ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-increment/target-cover-yieldexpr.js:34:4]
 33 │ function* g() {
 34 │   (yield)++;
    ·    ─────
 35 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-increment/target-newtarget.js:31:3]
 30 │ function f() {
 31 │   new.target++;
    ·   ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/postfix-increment/this.js:28:1]
 27 │ 
 28 │ this++;
    · ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/prefix-decrement/11.4.5-2-2gs.js:18:3]
 17 │ 
 18 │ --arguments;
    ·   ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/prefix-decrement/arguments.js:27:3]
 26 │ 
 27 │ --arguments;
    ·   ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/prefix-decrement/eval.js:27:3]
 26 │ 
 27 │ --eval;
    ·   ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-decrement/target-cover-newtarget.js:31:6]
 30 │ function f() {
 31 │   --(new.target);
    ·      ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-decrement/target-cover-yieldexpr.js:34:6]
 33 │ function* g() {
 34 │   --(yield);
    ·      ─────
 35 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-decrement/target-newtarget.js:31:5]
 30 │ function f() {
 31 │   --new.target;
    ·     ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-decrement/this.js:28:3]
 27 │ 
 28 │ --this;
    ·   ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/expressions/prefix-increment/arguments.js:27:3]
 26 │ 
 27 │ ++arguments;
    ·   ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/expressions/prefix-increment/eval.js:28:3]
 27 │ 
 28 │ ++eval;
    ·   ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-increment/target-cover-newtarget.js:31:6]
 30 │ function f() {
 31 │   ++(new.target);
    ·      ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-increment/target-cover-yieldexpr.js:34:6]
 33 │ function* g() {
 34 │   ++(yield);
    ·      ─────
 35 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-increment/target-newtarget.js:31:5]
 30 │ function f() {
 31 │   ++new.target;
    ·     ──────────
 32 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/prefix-increment/this.js:28:3]
 27 │ 
 28 │ ++this;
    ·   ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/property-accessors/non-identifier-name.js:21:23]
 20 │ 
 21 │ unresolvableReference."";
    ·                       ──
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-hexidecimal-character-escape-sequence-truncated-1.js:14:2]
 13 │ 
 14 │ `\x0`;
    ·  ───
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-hexidecimal-character-escape-sequence-truncated-2.js:14:2]
 13 │ 
 14 │ `\x0G`;
    ·  ────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-hexidecimal-character-escape-sequence-truncated-3.js:14:2]
 13 │ 
 14 │ `\xG`;
    ·  ───
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-8.js:28:2]
 27 │ 
 28 │ `\8`;
    ·  ──
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence-9.js:28:2]
 27 │ 
 28 │ `\9`;
    ·  ──
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-legacy-octal-escape-sequence.js:27:2]
 26 │ 
 27 │ `\00`;
    ·  ───
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-1.js:14:2]
 13 │ 
 14 │ `\u0`;
    ·  ───
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-2.js:14:2]
 13 │ 
 14 │ `\u0g`;
    ·  ────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-3.js:14:2]
 13 │ 
 14 │ `\u00g`;
    ·  ─────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-4.js:14:2]
 13 │ 
 14 │ `\u000g`;
    ·  ──────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-5.js:14:2]
 13 │ 
 14 │ `\u{g`;
    ·  ────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-6.js:14:2]
 13 │ 
 14 │ `\u{0`;
    ·  ────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-7.js:14:2]
 13 │ 
 14 │ `\u{10FFFFF}`;
    ·  ───────────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/invalid-unicode-escape-sequence-8.js:14:2]
 13 │ 
 14 │ `\u{10FFFFF}${'inner'}right`;
    ·  ───────────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/unicode-escape-nls-err.js:56:2]
 55 │ 
 56 │ `\u{1F_639}`;
    ·  ──────────
    ╰────

  × Bad escape sequence in untagged template literal
    ╭─[test262/test/language/expressions/template-literal/unicode-escape-no-hex-err.js:51:2]
 50 │ 
 51 │ `\u`
    ·  ──
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/expressions/this/S11.1.1_A1.js:16:1]
 15 │ 
 16 │ this = 1;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/yield/in-iteration-stmt.js:23:8]
 22 │ function* g() {
 23 │   for (yield '' in {}; ; ) ;
    ·        ────────
 24 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/yield/invalid-left-hand-side.js:28:9]
 27 │ function* g() {
 28 │   yield = 1;
    ·         ─
 29 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/expressions/yield/star-in-iteration-stmt.js:23:8]
 22 │ function* g() {
 23 │   for (yield * '' in {}; ; ) ;
    ·        ──────────
 24 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/class.js:21:5]
 20 │ 
 21 │ var class = 1;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/const.js:21:5]
 20 │ 
 21 │ var const = 1;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/debugger.js:21:5]
 20 │ 
 21 │ var debugger = 1;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/enum.js:21:5]
 20 │ 
 21 │ var enum = 1;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/export.js:21:5]
 20 │ 
 21 │ var export = 1;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/extends.js:21:5]
 20 │ 
 21 │ var extends = 1;
    ·     ───────
    ╰────

  × The keyword 'implements' is reserved
    ╭─[test262/test/language/future-reserved-words/implements-strict-escaped.js:25:5]
 24 │ 
 25 │ var \u0069mplements = 123;
    ·     ───────────────
    ╰────

  × The keyword 'implements' is reserved
    ╭─[test262/test/language/future-reserved-words/implements-strict.js:24:5]
 23 │ 
 24 │ var implements = 1;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/import.js:21:5]
 20 │ 
 21 │ var import = 1;
    ·     ──────
    ╰────

  × The keyword 'interface' is reserved
    ╭─[test262/test/language/future-reserved-words/interface-strict-escaped.js:25:5]
 24 │ 
 25 │ var inte\u0072face = 123;
    ·     ──────────────
    ╰────

  × The keyword 'interface' is reserved
    ╭─[test262/test/language/future-reserved-words/interface-strict.js:24:5]
 23 │ 
 24 │ var interface = 1;
    ·     ─────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/future-reserved-words/let-strict-escaped.js:25:5]
 24 │ 
 25 │ var l\u0065t = 123;
    ·     ────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/future-reserved-words/let-strict.js:24:5]
 23 │ 
 24 │ var let = 1;
    ·     ───
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/future-reserved-words/package-strict-escaped.js:25:5]
 24 │ 
 25 │ var packag\u0065 = 123;
    ·     ────────────
    ╰────

  × The keyword 'package' is reserved
    ╭─[test262/test/language/future-reserved-words/package-strict.js:24:5]
 23 │ 
 24 │ var package = 1;
    ·     ───────
    ╰────

  × The keyword 'private' is reserved
    ╭─[test262/test/language/future-reserved-words/private-strict-escaped.js:25:5]
 24 │ 
 25 │ var privat\u0065 = 123;
    ·     ────────────
    ╰────

  × The keyword 'private' is reserved
    ╭─[test262/test/language/future-reserved-words/private-strict.js:24:5]
 23 │ 
 24 │ var private = 1;
    ·     ───────
    ╰────

  × The keyword 'protected' is reserved
    ╭─[test262/test/language/future-reserved-words/protected-strict-escaped.js:26:5]
 25 │ 
 26 │ var \u0070\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064 = 123;
    ·     ──────────────────────────────────────────────────────
    ╰────

  × The keyword 'protected' is reserved
    ╭─[test262/test/language/future-reserved-words/protected-strict.js:24:5]
 23 │ 
 24 │ var protected = 1;
    ·     ─────────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/future-reserved-words/public-strict-escaped.js:25:5]
 24 │ 
 25 │ var \u0070\u0075\u0062\u006c\u0069\u0063 = 123;
    ·     ────────────────────────────────────
    ╰────

  × The keyword 'public' is reserved
    ╭─[test262/test/language/future-reserved-words/public-strict.js:24:5]
 23 │ 
 24 │ var public = 1;
    ·     ──────
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/future-reserved-words/static-strict-escaped.js:25:5]
 24 │ 
 25 │ var \u0073\u0074\u0061\u0074\u0069\u0063 = 123;
    ·     ────────────────────────────────────
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/future-reserved-words/static-strict.js:24:5]
 23 │ 
 24 │ var static = 1;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/future-reserved-words/super.js:21:5]
 20 │ 
 21 │ var super = 1;
    ·     ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/future-reserved-words/yield-strict-escaped.js:25:5]
 24 │ 
 25 │ var \u0079ield = 123;
    ·     ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/future-reserved-words/yield-strict.js:23:5]
 22 │ 
 23 │ var yield = 1;
    ·     ─────
    ╰────

  × Cannot use export statement outside a module
    ╭─[test262/test/language/global-code/export.js:22:1]
 21 │ 
 22 │ export default null;
    · ──────
    ╰────

  × Cannot use import statement outside a module
    ╭─[test262/test/language/global-code/import.js:22:1]
 21 │ 
 22 │ import v from './import.js';
    · ──────
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/global-code/invalid-private-names-call-expression-bad-reference.js:41:14]
 40 │ 
 41 │ (() => {})().#x
    ·              ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/global-code/invalid-private-names-call-expression-this.js:41:16]
 40 │ 
 41 │ (() => this)().#x
    ·                ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/global-code/invalid-private-names-member-expression-bad-reference.js:41:11]
 40 │ 
 41 │ something.#x
    ·           ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/global-code/invalid-private-names-member-expression-this.js:41:6]
 40 │ 
 41 │ this.#x
    ·      ──
    ╰────

  × Unexpected new.target expression
    ╭─[test262/test/language/global-code/new.target-arrow.js:37:3]
 36 │ () => {
 37 │   new.target;
    ·   ──────────
 38 │ };
    ╰────
  help: new.target is only allowed in constructors and functions invoked using thew `new` operator

  × Unexpected new.target expression
    ╭─[test262/test/language/global-code/new.target.js:21:1]
 20 │ 
 21 │ new.target;
    · ──────────
    ╰────
  help: new.target is only allowed in constructors and functions invoked using thew `new` operator

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/global-code/return.js:23:1]
 22 │ 
 23 │ return;
    · ──────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/global-code/super-call-arrow.js:37:3]
 36 │ () => {
 37 │   super();
    ·   ───────
 38 │ };
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/global-code/super-call.js:21:1]
 20 │ 
 21 │ super();
    · ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/global-code/super-prop-arrow.js:37:3]
 36 │ () => {
 37 │   super.property;
    ·   ─────
 38 │ };
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/global-code/super-prop.js:21:1]
 20 │ 
 21 │ super.property;
    · ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/global-code/yield-strict.js:26:1]
 25 │ 
 26 │ yield;
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifier-resolution/static-init-invalid-await.js:24:10]
 23 │   static {
 24 │     await;
    ·          ─
 25 │   }
    ╰────

  × Invalid Character `‍`
    ╭─[test262/test/language/identifiers/start-zwj-escaped.js:16:11]
 15 │ 
 16 │ var \u200D;
    ·           ▲
    ╰────

  × Invalid Character `‌`
    ╭─[test262/test/language/identifiers/start-zwnj-escaped.js:16:11]
 15 │ 
 16 │ var \u200C;
    ·           ▲
    ╰────

  × Invalid Unicode escape sequence
    ╭─[test262/test/language/identifiers/unicode-escape-nls-err.js:49:6]
 48 │ 
 49 │ var \u{00_76} = 1;
    ·      ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/unicode-escape-nls-err.js:49:13]
 48 │ 
 49 │ var \u{00_76} = 1;
    ·             ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-break-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{62}\u{72}\u{65}\u{61}\u{6b} = 123;;
    ·     ──────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-break-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0062\u0072\u0065\u0061\u006b = 123;;
    ·     ──────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-break.js:16:5]
 15 │ 
 16 │ var break = 123;;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-case-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{63}ase = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-case-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0063ase = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-case.js:16:5]
 15 │ 
 16 │ var case = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-catch-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{63}atch = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-catch-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0063atch = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-catch.js:16:5]
 15 │ 
 16 │ var catch = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-class-via-escape-hex.js:17:5]
 16 │ 
 17 │ var cla\u{73}s = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-class-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var cla\u0073s = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-class.js:16:5]
 15 │ 
 16 │ var class = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-const-via-escape-hex.js:17:5]
 16 │ 
 17 │ var co\u{6e}st = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-const-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var co\u006est = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-const.js:16:5]
 15 │ 
 16 │ var const = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-continue-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{63}ontinue = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-continue-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0063ontinue = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-continue.js:16:5]
 15 │ 
 16 │ var continue = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-debugger-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{64}ebugger = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-debugger-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0064ebugger = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-debugger.js:16:5]
 15 │ 
 16 │ var debugger = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-default-via-escape-hex.js:17:5]
 16 │ 
 17 │ var def\u{61}ult = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-default-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var def\u0061ult = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-default.js:16:5]
 15 │ 
 16 │ var default = 123;
    ·     ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-delete-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{64}elete = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-delete-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0064elete = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-delete.js:16:5]
 15 │ 
 16 │ var delete = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-do-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{64}\u{6f} = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-do-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0064\u006f = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-do.js:16:5]
 15 │ 
 16 │ var do = 123;
    ·     ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-else-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{65}lse = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-else-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0065lse = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-else.js:16:5]
 15 │ 
 16 │ var else = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-enum-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{65}\u{6e}\u{75}\u{6d} = 123;
    ·     ────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-enum-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0065\u006e\u0075\u006d = 123;
    ·     ────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-enum.js:16:5]
 15 │ 
 16 │ var enum = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-export-via-escape-hex.js:17:5]
 16 │ 
 17 │ var expor\u{74} = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-export-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var expor\u0074 = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-export.js:16:5]
 15 │ 
 16 │ var export = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-extends-via-escape-hex.js:17:5]
 16 │ 
 17 │ var extend\u{73} = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-extends-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var extend\u0073 = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-extends.js:16:5]
 15 │ 
 16 │ var extends = 123;
    ·     ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-false-via-escape-hex.js:17:5]
 16 │ 
 17 │ var fals\u{65} = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-false-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var fals\u0065 = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-false.js:16:5]
 15 │ 
 16 │ var false = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-finally-via-escape-hex.js:17:5]
 16 │ 
 17 │ var fina\u{6c}ly = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-finally-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var fina\u006cly = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-finally.js:16:5]
 15 │ 
 16 │ var finally = 123;
    ·     ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-for-via-escape-hex.js:17:5]
 16 │ 
 17 │ var f\u{6f}r = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-for-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var f\u006fr = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-for.js:16:5]
 15 │ 
 16 │ var for = 123;
    ·     ───
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-function-via-escape-hex.js:17:5]
 16 │ 
 17 │ var func\u{74}ion = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-function-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var func\u0074ion = 123;
    ·     ─────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-function.js:16:5]
 15 │ 
 16 │ var function = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-if-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{69}\u{66} = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-if-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0069\u0066 = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-if.js:16:5]
 15 │ 
 16 │ var if = 123;
    ·     ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-import-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{69}\u{6d}\u{70}\u{6f}\u{72}\u{74} = 123;
    ·     ────────────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-import-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0069\u006d\u0070\u006f\u0072\u0074 = 123;
    ·     ────────────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-import.js:16:5]
 15 │ 
 16 │ var import = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-in-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{69}\u{6e} = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-in-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0069\u006e = 123;
    ·     ────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-in.js:16:5]
 15 │ 
 16 │ var in = 123;
    ·     ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-instanceof-via-escape-hex.js:17:5]
 16 │ 
 17 │ var insta\u{6e}ceof = 123;
    ·     ───────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-instanceof-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var insta\u006eceof = 123;
    ·     ───────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-instanceof.js:16:5]
 15 │ 
 16 │ var instanceof = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-new-via-escape-hex.js:17:5]
 16 │ 
 17 │ var n\u{65}w = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-new-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var n\u0065w = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-new.js:16:5]
 15 │ 
 16 │ var new = 123;
    ·     ───
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-null-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{6e}ull = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-null-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u006eull = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-null.js:16:5]
 15 │ 
 16 │ var null = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-return-via-escape-hex.js:17:5]
 16 │ 
 17 │ var retur\u{6e} = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-return-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var retur\u006e = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-return.js:16:5]
 15 │ 
 16 │ var return = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-super-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{73}uper = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-super-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0073uper = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-super.js:16:5]
 15 │ 
 16 │ var super = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-switch-via-escape-hex.js:17:5]
 16 │ 
 17 │ var switc\u{68} = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-switch-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var switc\u0068 = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-switch.js:16:5]
 15 │ 
 16 │ var switch = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-this-via-escape-hex.js:17:5]
 16 │ 
 17 │ var thi\u{73} = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-this-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var thi\u0073 = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-this.js:16:5]
 15 │ 
 16 │ var this = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-throw-via-escape-hex.js:17:5]
 16 │ 
 17 │ var thro\u{77} = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-throw-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var thro\u0077 = 123;
    ·     ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-throw.js:16:5]
 15 │ 
 16 │ var throw = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-true-via-escape-hex.js:17:5]
 16 │ 
 17 │ var tr\u{75}e = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-true-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var tr\u0075e = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-true.js:16:5]
 15 │ 
 16 │ var true = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-try-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{74}\u{72}\u{79} = 123;
    ·     ──────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-try-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0074\u0072\u0079 = 123;
    ·     ──────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-try.js:16:5]
 15 │ 
 16 │ var try = 123;
    ·     ───
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-typeof-via-escape-hex.js:17:5]
 16 │ 
 17 │ var typeo\u{66} = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-typeof-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var typeo\u0066 = 123;
    ·     ───────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-typeof.js:16:5]
 15 │ 
 16 │ var typeof = 123;
    ·     ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-var-via-escape-hex.js:17:5]
 16 │ 
 17 │ var va\u{72} = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-var-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var va\u0072 = 123;
    ·     ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-var.js:16:5]
 15 │ 
 16 │ var var = 123;
    ·     ───
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-void-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{76}\u{6f}\u{69}\u{64} = 123;
    ·     ────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-void-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0076\u006f\u0069\u0064 = 123;
    ·     ────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-void.js:16:5]
 15 │ 
 16 │ var void = 123;
    ·     ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-while-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{77}\u{68}\u{69}\u{6c}\u{65} = 123;
    ·     ──────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-while-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0077\u0068\u0069\u006c\u0065 = 123;
    ·     ──────────────────────────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-while.js:16:5]
 15 │ 
 16 │ var while = 123;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-with-via-escape-hex.js:17:5]
 16 │ 
 17 │ var \u{77}ith = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-with-via-escape-hex4.js:17:5]
 16 │ 
 17 │ var \u0077ith = 123;
    ·     ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/identifiers/val-with.js:16:5]
 15 │ 
 16 │ var with = 123;
    ·     ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/identifiers/val-yield-strict.js:18:5]
 17 │ 
 18 │ var yield = 13;
    ·     ─────
    ╰────

  × Invalid Character `ⸯ`
    ╭─[test262/test/language/identifiers/vertical-tilde-continue-escaped.js:17:12]
 16 │ 
 17 │ var a\u2E2F;
    ·            ▲
    ╰────

  × Invalid Character `ⸯ`
    ╭─[test262/test/language/identifiers/vertical-tilde-continue.js:17:6]
 16 │ 
 17 │ var aⸯ; // U+2E2F
    ·      ─
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/identifiers/vertical-tilde-continue.js:17:6]
 16 │ 
 17 │ var aⸯ; // U+2E2F
    ·      ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `ⸯ`
    ╭─[test262/test/language/identifiers/vertical-tilde-start-escaped.js:17:11]
 16 │ 
 17 │ var \u2E2F;
    ·           ▲
    ╰────

  × Invalid Character `ⸯ`
    ╭─[test262/test/language/identifiers/vertical-tilde-start.js:17:5]
 16 │ 
 17 │ var ⸯ; // U+2E2F
    ·     ─
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/import/dup-bound-names.js:16:10]
 15 │ 
 16 │ import { x, y as x } from 'z';
    ·          ┬       ┬
    ·          │       ╰── It can not be redeclared here
    ·          ╰── `x` has already been declared here
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/import/escaped-as-import-specifier.js:26:11]
 25 │ 
 26 │ import {a \u0061s b} from "./escaped-as-import-specifier.js";
    ·           ───────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/import/escaped-as-namespace-import.js:24:9]
 23 │ 
 24 │ import* \u0061s self from "./escaped-as-namespace-import.js";
    ·         ───────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/import/escaped-from.js:24:11]
 23 │ 
 24 │ import {} \u0066rom "./escaped-from.js";
    ·           ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-break.js:21:7]
 20 │ 
 21 │ break = 1;
    ·       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-case.js:21:1]
 20 │ 
 21 │ case = 1;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-catch.js:21:1]
 20 │ 
 21 │ catch = 1;
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-continue.js:21:10]
 20 │ 
 21 │ continue = 1;
    ·          ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-default.js:21:1]
 20 │ 
 21 │ default = 1;
    · ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-delete.js:21:8]
 20 │ 
 21 │ delete = 1;
    ·        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-do.js:21:4]
 20 │ 
 21 │ do = 1;
    ·    ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-else.js:21:1]
 20 │ 
 21 │ else = 1;
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-finally.js:21:1]
 20 │ 
 21 │ finally = 1;
    · ───────
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-for.js:21:5]
 20 │ 
 21 │ for = 1;
    ·     ┬
    ·     ╰── `(` expected
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-function.js:21:10]
 20 │ 
 21 │ function = 1;
    ·          ┬
    ·          ╰── `(` expected
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-if.js:21:4]
 20 │ 
 21 │ if = 1;
    ·    ┬
    ·    ╰── `(` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-in.js:21:1]
 20 │ 
 21 │ in = 1;
    · ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-instanceof.js:21:1]
 20 │ 
 21 │ instanceof = 1;
    · ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-new.js:21:5]
 20 │ 
 21 │ new = 1;
    ·     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-return.js:21:8]
 20 │ 
 21 │ return = 1;
    ·        ─
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-switch.js:21:8]
 20 │ 
 21 │ switch = 1;
    ·        ┬
    ·        ╰── `(` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-this.js:24:7]
 23 │ // Also see: sec-semantics-static-semantics-isvalidsimpleassignmenttarget
 24 │ ({this});
    ·       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-throw.js:21:7]
 20 │ 
 21 │ throw = 1;
    ·       ─
    ╰────

  × Expected `{` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-try.js:21:5]
 20 │ 
 21 │ try = 1;
    ·     ┬
    ·     ╰── `{` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-typeof.js:21:8]
 20 │ 
 21 │ typeof = 1;
    ·        ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-var.js:21:5]
 20 │ 
 21 │ var = 1;
    ·     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/keywords/ident-ref-void.js:21:6]
 20 │ 
 21 │ void = 1;
    ·      ─
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-while.js:21:7]
 20 │ 
 21 │ while = 1;
    ·       ┬
    ·       ╰── `(` expected
    ╰────

  × Expected `(` but found `=`
    ╭─[test262/test/language/keywords/ident-ref-with.js:21:6]
 20 │ 
 21 │ with = 1;
    ·      ┬
    ·      ╰── `(` expected
    ╰────

  × Unterminated string
    ╭─[test262/test/language/line-terminators/S7.3_A2.1_T2.js:17:1]
 16 │ //CHECK#1
 17 │ "
    · ──
 18 │ str
 19 │ ing
    ╰────

  × Unterminated string
    ╭─[test262/test/language/line-terminators/S7.3_A2.2_T2.js:17:1]
 16 │ //CHECK#1
 17 │ "
    · ──
 18 │ str
 19 │ ing
    ╰────

  × Unexpected token
    ╭─[test262/test/language/line-terminators/S7.3_A3.2_T1.js:17:2]
 16 │ // single line comment
 17 │  ??? (invalid)
    ·  ──
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/line-terminators/S7.3_A6_T1.js:18:10]
 17 │ 
 18 │ var\u000Ax;
    ·          ▲
    ╰────

  × Invalid Character ``
    ╭─[test262/test/language/line-terminators/S7.3_A6_T2.js:18:10]
 17 │ 
 18 │ var\u000Dx;
    ·          ▲
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/line-terminators/S7.3_A6_T3.js:18:10]
 17 │ 
 18 │ var\u2028x;
    ·          ▲
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/line-terminators/S7.3_A6_T4.js:18:10]
 17 │ 
 18 │ var\u2029x;
    ·          ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/line-terminators/invalid-comment-single-cr.js:18:6]
 17 │ // this text is not included in the single-line comment that precedes it
    ·        ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/line-terminators/invalid-comment-single-lf.js:18:5]
 17 │ //single
 18 │ line comment
    ·     ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/line-terminators/invalid-comment-single-ls.js:18:22]
 17 │ 
 18 │ // single line LS> ??? (invalid)
    ·                    ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/line-terminators/invalid-comment-single-ps.js:16:22]
 15 │ 
 16 │ // single line PS> ??? (invalid)
    ·                    ──
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/line-terminators/invalid-regexp-cr.js:18:1]
 17 │ 
 18 │ //
    · ─
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/line-terminators/invalid-regexp-lf.js:18:1]
 17 │ 
 18 │ /
    · ──
 19 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/line-terminators/invalid-regexp-ls.js:18:1]
 17 │ 
 18 │ / /
    · ──
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/line-terminators/invalid-regexp-ps.js:18:1]
 17 │ 
 18 │ / /
    · ──
    ╰────

  × Unterminated string
    ╭─[test262/test/language/line-terminators/invalid-string-cr.js:17:1]
 16 │ 
 17 │ ''
    · ─
    ╰────

  × Unterminated string
    ╭─[test262/test/language/line-terminators/invalid-string-lf.js:17:1]
 16 │ 
 17 │ '
    · ──
 18 │ '
    ╰────

  × Invalid Character `2`
    ╭─[test262/test/language/literals/bigint/binary-invalid-digit.js:27:3]
 26 │ 
 27 │ 0b2n;
    ·   ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/bigint/exponent-part.js:17:4]
 16 │ 
 17 │ 0e0n;
    ·    ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `g`
    ╭─[test262/test/language/literals/bigint/hexadecimal-invalid-digit.js:27:3]
 26 │ 
 27 │ 0xgn;
    ·   ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/legacy-octal-like-invalid-00n.js:29:3]
 28 │ 
 29 │ 00n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/legacy-octal-like-invalid-01n.js:29:3]
 28 │ 
 29 │ 01n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/legacy-octal-like-invalid-07n.js:29:3]
 28 │ 
 29 │ 07n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/mv-is-not-integer-dil-dot-dds.js:28:7]
 27 │ 
 28 │ 2017.8n;
    ·       ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/mv-is-not-integer-dot-dds.js:28:12]
 27 │ 
 28 │ .0000000001n;
    ·            ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/non-octal-like-invalid-0008n.js:29:5]
 28 │ 
 29 │ 0008n;
    ·     ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/non-octal-like-invalid-012348n.js:29:7]
 28 │ 
 29 │ 012348n;
    ·       ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/non-octal-like-invalid-08n.js:29:3]
 28 │ 
 29 │ 08n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/non-octal-like-invalid-09n.js:29:3]
 28 │ 
 29 │ 09n;
    ·   ─
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-bil-bd-nsl-bd-err.js:45:3]
 44 │ 
 45 │ 0b_1n;
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-bil-nsl-bd-dunder-err.js:45:5]
 44 │ 
 45 │ 0b0__0n;
    ·     ▲
    ╰────

  × Invalid Character `n`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-bil-nsl-bd-err.js:44:5]
 43 │ 
 44 │ 0b0_n;
    ·     ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dd-nsl-dds-dunder-err.js:37:3]
 36 │ 
 37 │ 1__0123456789n;
    ·   ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dd-nsl-dds-dunder-err.js:37:3]
 36 │ 
 37 │ 1__0123456789n;
    ·   ─
    ╰────

  × Invalid Character `n`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dd-nsl-err.js:39:3]
 38 │ 
 39 │ 1_n;
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dds-nsl-dds-dunder-err.js:37:4]
 36 │ 
 37 │ 10__0123456789n;
    ·    ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dds-nsl-dds-dunder-err.js:37:4]
 36 │ 
 37 │ 10__0123456789n;
    ·    ─
    ╰────

  × Invalid Character `n`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-dds-nsl-err.js:40:4]
 39 │ 
 40 │ 10_n;
    ·    ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-hil-hd-nsl-hd-err.js:45:3]
 44 │ 
 45 │ 0x_1n;
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-hil-nsl-hd-dunder-err.js:45:5]
 44 │ 
 45 │ 0x0__0n;
    ·     ▲
    ╰────

  × Invalid Character `n`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-hil-nsl-hd-err.js:45:5]
 44 │ 
 45 │ 0x0_n;
    ·     ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-00-err.js:53:3]
 52 │ 
 53 │ 00_0n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-01-err.js:53:3]
 52 │ 
 53 │ 01_0n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-07-err.js:55:3]
 54 │ 
 55 │ 07_0n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-0_0-err.js:53:2]
 52 │ 
 53 │ 0_0n;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-0_1-err.js:53:2]
 52 │ 
 53 │ 0_1n;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-lol-0_7-err.js:54:2]
 53 │ 
 54 │ 0_7n;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nonoctal-08-err.js:50:3]
 49 │ 
 50 │ 08_0n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nonoctal-09-err.js:50:3]
 49 │ 
 50 │ 09_0n;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nonoctal-0_8-err.js:50:2]
 49 │ 
 50 │ 0_8n;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nonoctal-0_9-err.js:50:2]
 49 │ 
 50 │ 0_9n;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nzd-nsl-dds-dunder-err.js:40:2]
 39 │ 
 40 │ 0__0123456789n;
    ·  ──
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-nzd-nsl-dds-leading-zero-err.js:38:2]
 37 │ 
 38 │ 0_0123456789n;
    ·  ─
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-oil-nsl-od-dunder-err.js:45:5]
 44 │ 
 45 │ 0o0__0n;
    ·     ▲
    ╰────

  × Invalid Character `n`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-oil-nsl-od-err.js:45:5]
 44 │ 
 45 │ 0o0_n;
    ·     ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-oil-od-nsl-od-err.js:45:3]
 44 │ 
 45 │ 0o_1n;
    ·   ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/bigint/numeric-separators/numeric-separator-literal-unicode-err.js:37:2]
 36 │ 
 37 │ 1\u005F0123456789n;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `9`
    ╭─[test262/test/language/literals/bigint/octal-invalid-digit.js:27:3]
 26 │ 
 27 │ 0o9n;
    ·   ▲
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/literals/boolean/false-with-unicode.js:21:1]
 20 │ 
 21 │ f\u{61}lse;
    · ──────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/literals/boolean/true-with-unicode.js:21:1]
 20 │ 
 21 │ tru\u{65};
    · ─────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/literals/null/null-with-unicode.js:21:1]
 20 │ 
 21 │ n\u{75}ll;
    · ─────────
    ╰────

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/7.8.3-1gs.js:16:9]
 15 │ 
 16 │ var y = 010;
    ·         ───
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/7.8.3-2gs.js:20:5]
 19 │ a = 0x1;
 20 │ a = 01;
    ·     ──
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/S7.8.3_A6.1_T1.js:17:3]
 16 │ //CHECK#1
 17 │ 0x
    ·   ▲
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/S7.8.3_A6.1_T2.js:17:3]
 16 │ //CHECK#1
 17 │ 0X
    ·   ▲
    ╰────

  × Invalid Character `G`
    ╭─[test262/test/language/literals/numeric/S7.8.3_A6.2_T1.js:17:3]
 16 │ //CHECK#1
 17 │ 0xG
    ·   ▲
    ╰────

  × Invalid Character `g`
    ╭─[test262/test/language/literals/numeric/S7.8.3_A6.2_T2.js:17:3]
 16 │ //CHECK#1
 17 │ 0xg
    ·   ▲
    ╰────

  × Invalid Character `2`
    ╭─[test262/test/language/literals/numeric/binary-invalid-digit.js:24:3]
 23 │ 
 24 │ 0b2;
    ·   ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/binary-invalid-leading.js:24:3]
 23 │ 
 24 │ 00b0;
    ·   ─
    ╰────

  × Invalid Character `;`
    ╭─[test262/test/language/literals/numeric/binary-invalid-truncated.js:24:3]
 23 │ 
 24 │ 0b;
    ·   ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/numeric/binary-invalid-unicode.js:24:2]
 23 │ 
 24 │ 0\u00620;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integer-strict.js:34:1]
 33 │ 
 34 │ 00;
    · ──
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-000-strict.js:16:1]
 15 │ 
 16 │ 000;
    · ───
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-005-strict.js:16:1]
 15 │ 
 16 │ 005;
    · ───
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-01-strict.js:16:1]
 15 │ 
 16 │ 01;
    · ──
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-010-strict.js:16:1]
 15 │ 
 16 │ 010;
    · ───
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-06-strict.js:16:1]
 15 │ 
 16 │ 06;
    · ──
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/numeric/legacy-octal-integery-07-strict.js:16:1]
 15 │ 
 16 │ 07;
    · ──
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Decimals with leading zeros are not allowed in strict mode
    ╭─[test262/test/language/literals/numeric/non-octal-decimal-integer-strict.js:40:1]
 39 │ 
 40 │ 08;
    · ──
    ╰────
  help: remove the leading zero

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-followed-by-ident.js:19:2]
 18 │ 
 19 │ 3in []
    ·  ──
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-bd-nsl-bd-err.js:35:3]
 34 │ 
 35 │ 0b_1
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-nsl-bd-dunder-err.js:35:5]
 34 │ 
 35 │ 0b0__0
    ·     ▲
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-bil-nsl-bd-err.js:35:5]
 34 │ 
 35 │ 0b0_
    ·     ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-dds-dunder-err.js:27:3]
 26 │ 
 27 │ 1__0123456789
    ·   ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-dds-dunder-err.js:27:3]
 26 │ 
 27 │ 1__0123456789
    ·   ─
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dd-nsl-err.js:29:3]
 28 │ 
 29 │ 1_
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-dds-dunder-err.js:27:4]
 26 │ 
 27 │ 10__0123456789
    ·    ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-dds-dunder-err.js:27:4]
 26 │ 
 27 │ 10__0123456789
    ·    ─
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dds-nsl-err.js:30:4]
 29 │ 
 30 │ 10_
    ·    ▲
    ╰────

  × Invalid Character `e`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dil-dot-dds-nsl-ep-dd-err.js:29:6]
 28 │ 
 29 │ 10.0_e1
    ·      ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dil-dot-nsl-dd-err.js:29:4]
 28 │ 
 29 │ 10._1
    ·    ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dil-dot-nsl-ep-err.js:32:4]
 31 │ 
 32 │ 10._e1
    ·    ──
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dil-dot-nsl-err.js:30:4]
 29 │ 
 30 │ 10._
    ·    ─
    ╰────

  × Invalid Character `e`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-dds-nsl-ep-err.js:31:4]
 30 │ 
 31 │ .0_e1
    ·    ▲
    ╰────

  × Unexpected token
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-nsl-ep-err.js:32:1]
 31 │ 
 32 │ ._e1
    · ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-dot-nsl-err.js:30:1]
 29 │ 
 30 │ ._
    · ─
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-hd-nsl-hd-err.js:35:3]
 34 │ 
 35 │ 0x_1
    ·   ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-nsl-hd-dunder-err.js:35:5]
 34 │ 
 35 │ 0x0__0
    ·     ▲
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-hil-nsl-hd-err.js:35:5]
 34 │ 
 35 │ 0x0_
    ·     ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-00-err.js:42:3]
 41 │ 
 42 │ 00_0;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-01-err.js:42:3]
 41 │ 
 42 │ 01_0;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-07-err.js:44:3]
 43 │ 
 44 │ 07_0;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-0_0-err.js:42:2]
 41 │ 
 42 │ 0_0;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-0_1-err.js:42:2]
 41 │ 
 42 │ 0_1;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-lol-0_7-err.js:43:2]
 42 │ 
 43 │ 0_7;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nonoctal-08-err.js:39:3]
 38 │ 
 39 │ 08_0;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nonoctal-09-err.js:39:3]
 38 │ 
 39 │ 09_0;
    ·   ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nonoctal-0_8-err.js:39:2]
 38 │ 
 39 │ 0_8;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nonoctal-0_9-err.js:39:2]
 38 │ 
 39 │ 0_9;
    ·  ─
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dds-dunder-err.js:30:2]
 29 │ 
 30 │ 0__0123456789
    ·  ──
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-nzd-nsl-dds-leading-zero-err.js:28:2]
 27 │ 
 28 │ 0_0123456789
    ·  ─
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-nsl-od-dunder-err.js:35:5]
 34 │ 
 35 │ 0o0__0
    ·     ▲
    ╰────

  × Invalid Character `
  │ `
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-nsl-od-err.js:35:5]
 34 │ 
 35 │ 0o0_
    ·     ▲
    ╰────

  × Invalid Character `_`
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-oil-od-nsl-od-err.js:35:3]
 34 │ 
 35 │ 0o_1
    ·   ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/numeric/numeric-separators/numeric-separator-literal-unicode-err.js:27:2]
 26 │ 
 27 │ 1\u005F0123456789
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `8`
    ╭─[test262/test/language/literals/numeric/octal-invalid-digit.js:24:3]
 23 │ 
 24 │ 0o8;
    ·   ▲
    ╰────

  × Invalid characters after number
    ╭─[test262/test/language/literals/numeric/octal-invalid-leading.js:24:3]
 23 │ 
 24 │ 00o0;
    ·   ─
    ╰────

  × Invalid Character `;`
    ╭─[test262/test/language/literals/numeric/octal-invalid-truncated.js:24:3]
 23 │ 
 24 │ 0o;
    ·   ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/numeric/octal-invalid-unicode.js:24:2]
 23 │ 
 24 │ 0\u006f0;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Unterminated multiline comment
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.2_T1.js:24:1]
 23 │ 
 24 │ /*/
    · ────
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.2_T2.js:27:1]
 26 │ 
 27 │ /\/
    · ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.2_T3.js:28:1]
 27 │ ///
 28 │ .source;
    · ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.2_T4.js:28:1]
 27 │ //
 28 │ .source;
    · ─
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.3_T1.js:30:1]
 29 │ 
 30 │ /
    · ──
 31 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.3_T3.js:30:1]
 29 │ 
 30 │ /
    · ──
 31 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.5_T1.js:24:1]
 23 │ 
 24 │ /\
    · ───
 25 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A1.5_T3.js:23:1]
 22 │ 
 23 │ /\
    · ───
 24 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.2_T1.js:24:1]
 23 │ 
 24 │ /a\/
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.2_T2.js:24:5]
 23 │ 
 24 │ /a//.source;
    ·     ─
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.3_T1.js:33:1]
 32 │ 
 33 │ /a
    · ───
 34 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.3_T3.js:34:1]
 33 │ 
 34 │ /a
    · ───
 35 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.5_T1.js:29:1]
 28 │ 
 29 │ /a\
    · ────
 30 │ /
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/S7.8.5_A2.5_T3.js:29:1]
 28 │ 
 29 │ /a\
    · ────
 30 │ /
    ╰────

  × Unexpected flag G in regular expression literal
    ╭─[test262/test/language/literals/regexp/early-err-bad-flag.js:19:4]
 18 │ 
 19 │ /./G;
    ·    ─
    ╰────

  × Flag g is mentioned twice in regular expression literal
    ╭─[test262/test/language/literals/regexp/early-err-dup-flag.js:19:6]
 18 │ 
 19 │ /./gig;
    ·      ─
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/regexp/early-err-flags-unicode-escape.js:19:4]
 18 │ 
 19 │ /./\u0067;
    ·    ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/early-err-pattern.js:18:2]
 17 │ 
 18 │ /?/;
    ·  ─
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-braced-quantifier-exact.js:26:2]
 25 │ 
 26 │ /{2}/;
    ·  ───
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-braced-quantifier-lower.js:26:2]
 25 │ 
 26 │ /{2,}/;
    ·  ────
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-braced-quantifier-range.js:26:2]
 25 │ 
 26 │ /{2,3}/;
    ·  ─────
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-optional-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<=.)?/;
    ·         ─
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-optional-negative-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<!.)?/;
    ·         ─
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-range-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<=.){2,3}/;
    ·         ─────
    ╰────

  × Invalid regular expression: Invalid braced quantifier
    ╭─[test262/test/language/literals/regexp/invalid-range-negative-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<!.){2,3}/;
    ·         ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-2-u.js:21:9]
 20 │ 
 21 │ /(?<a>a)\k<ab>/u;
    ·         ──────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-2.js:21:9]
 20 │ 
 21 │ /(?<a>a)\k<ab>/;
    ·         ──────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-3-u.js:21:10]
 20 │ 
 21 │ /(?<ab>a)\k<a>/u;
    ·          ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-3.js:21:10]
 20 │ 
 21 │ /(?<ab>a)\k<a>/;
    ·          ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-4-u.js:21:2]
 20 │ 
 21 │ /\k<a>(?<ab>a)/u;
    ·  ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-4.js:21:2]
 20 │ 
 21 │ /\k<a>(?<ab>a)/;
    ·  ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-5.js:21:2]
 20 │ 
 21 │ /\k<a>(?<b>x)/;
    ·  ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-u.js:21:9]
 20 │ 
 21 │ /(?<a>.)\k<b>/u;
    ·         ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname-without-group-u.js:21:2]
 20 │ 
 21 │ /\k<a>/u;
    ·  ─────
    ╰────

  × Invalid regular expression: Group specifier is empty
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-dangling-groupname.js:21:9]
 20 │ 
 21 │ /(?<a>.)\k<b>/;
    ·         ─────
    ╰────

  × Invalid regular expression: Duplicated capturing group names
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2-u.js:20:19]
 19 │ 
 20 │ /(?<a>a)(?<b>b)(?<a>a)/u;
    ·                   ─
    ╰────

  × Invalid regular expression: Duplicated capturing group names
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-2.js:20:19]
 19 │ 
 20 │ /(?<a>a)(?<b>b)(?<a>a)/;
    ·                   ─
    ╰────

  × Invalid regular expression: Duplicated capturing group names
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier-u.js:20:12]
 19 │ 
 20 │ /(?<a>a)(?<a>a)/u;
    ·            ─
    ╰────

  × Invalid regular expression: Duplicated capturing group names
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-duplicate-groupspecifier.js:20:12]
 19 │ 
 20 │ /(?<a>a)(?<a>a)/;
    ·            ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-empty-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<>a)/u;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-empty-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<>a)/;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-identity-escape-in-capture-u.js:16:2]
 15 │ 
 16 │ /(?<a>\a)/u;
    ·  ──────
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-2-u.js:16:11]
 15 │ 
 16 │ /(?<a>.)\k<a/u;
    ·           ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-2.js:16:11]
 15 │ 
 16 │ /(?<a>.)\k<a/;
    ·           ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-3-u.js:16:11]
 15 │ 
 16 │ /(?<a>.)\k<>/u;
    ·           ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-3.js:16:11]
 15 │ 
 16 │ /(?<a>.)\k<>/;
    ·           ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-4.js:16:4]
 15 │ 
 16 │ /\k<a(?<a>a)/;
    ·    ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-5.js:16:4]
 15 │ 
 16 │ /\k<a(?<a>.)/;
    ·    ──
    ╰────

  × Invalid regular expression: Invalid named reference
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-6.js:16:2]
 15 │ 
 16 │ /\k(?<a>.)/;
    ·  ──
    ╰────

  × Invalid regular expression: Invalid named reference
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-u.js:16:9]
 15 │ 
 16 │ /(?<a>.)\k/u;
    ·         ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-2-u.js:16:4]
 15 │ 
 16 │ /\k<>/u;
    ·    ─
    ╰────

  × Invalid regular expression: Invalid named reference
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-3-u.js:16:2]
 15 │ 
 16 │ /\k/u;
    ·  ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname-without-group-u.js:16:4]
 15 │ 
 16 │ /\k<a/u;
    ·    ──
    ╰────

  × Invalid regular expression: Invalid named reference
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-incomplete-groupname.js:16:9]
 15 │ 
 16 │ /(?<a>.)\k/;
    ·         ──
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-continue-groupspecifier-4-u.js:16:6]
 15 │ 
 16 │ /(?<a\>.)/u;
    ·      ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-continue-groupspecifier-4.js:16:6]
 15 │ 
 16 │ /(?<a\>.)/;
    ·      ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-continue-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<$❞>a)/;
    ·    ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-2-u.js:16:4]
 15 │ 
 16 │ /(?<𐒤>a)/u;
    ·    ─
    ╰────

  × Invalid regular expression: Invalid surrogate pair
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-2.js:16:5]
 15 │ 
 16 │ /(?<𐒤>a)/;
    ·     ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-3.js:16:6]
 15 │ 
 16 │ /(?<a\uD83D\uDF12>.)/;
    ·      ────────────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-4-u.js:16:6]
 15 │ 
 16 │ /(?<a\uD801>.)/u;
    ·      ──────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-4.js:16:6]
 15 │ 
 16 │ /(?<a\uD801>.)/;
    ·      ──────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-5-u.js:16:6]
 15 │ 
 16 │ /(?<a\uDCA4>.)/u;
    ·      ──────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-5.js:16:6]
 15 │ 
 16 │ /(?<a\uDCA4>.)/;
    ·      ──────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-6.js:16:6]
 15 │ 
 16 │ /(?<a\u{1F08B}>.)/;
    ·      ─────────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-7.js:16:6]
 15 │ 
 16 │ /(?<a\u{10FFFF}>.)/;
    ·      ──────────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-8-u.js:16:5]
 15 │ 
 16 │ /(?<\>.)/u;
    ·     ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-8.js:16:5]
 15 │ 
 16 │ /(?<\>.)/;
    ·     ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-9-u.js:16:7]
 15 │ 
 16 │ /(?<a\u{110000}>.)/u;
    ·       ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<❤>a)/u;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-non-id-start-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<❤>a)/;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-numeric-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<42a>a)/u;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-numeric-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<42a>a)/;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-punctuator-starting-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<:a>a)/u;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-punctuator-starting-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<:a>a)/;
    ·    ─
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-punctuator-within-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<a:>a)/u;
    ·    ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-punctuator-within-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<a:>a)/;
    ·    ──
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-unterminated-groupspecifier-u.js:16:4]
 15 │ 
 16 │ /(?<aa)/u;
    ·    ───
    ╰────

  × Invalid regular expression: Unterminated capturing group name
    ╭─[test262/test/language/literals/regexp/named-groups/invalid-unterminated-groupspecifier.js:16:4]
 15 │ 
 16 │ /(?<aa)/;
    ·    ───
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/regexp-first-char-no-line-separator.js:30:1]
 29 │ 
 30 │ / /
    · ──
 31 │ 
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/regexp-first-char-no-paragraph-separator.js:30:1]
 29 │ 
 30 │ / /
    · ──
 31 │ 
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/regexp-source-char-no-line-separator.js:29:1]
 28 │ 
 29 │ /a\\ /
    · ─────
 30 │ 
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/literals/regexp/regexp-source-char-no-paragraph-separator.js:30:1]
 29 │ 
 30 │ /a\\  /
    · ─────
 31 │ 
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/language/literals/regexp/u-invalid-class-escape.js:24:3]
 23 │ 
 24 │ /\c0/u;
    ·   ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/language/literals/regexp/u-invalid-extended-pattern-char.js:21:2]
 20 │ 
 21 │ /{/u;
    ·  ▲
    ╰────

  × Invalid regular expression: Could not parse the entire pattern
    ╭─[test262/test/language/literals/regexp/u-invalid-identity-escape.js:23:3]
 22 │ 
 23 │ /\M/u;
    ·   ▲
    ╰────

  × Invalid regular expression: Invalid indexed reference
    ╭─[test262/test/language/literals/regexp/u-invalid-legacy-octal-escape.js:26:2]
 25 │ 
 26 │ /\1/u;
    ·  ──
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-a.js:33:3]
 32 │ 
 33 │ /[\d-a]/u;
    ·   ────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-ab.js:33:3]
 32 │ 
 33 │ /[\s-\d]/u;
    ·   ─────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/language/literals/regexp/u-invalid-non-empty-class-ranges-no-dash-b.js:33:3]
 32 │ 
 33 │ /[%-\d]/u;
    ·   ────
    ╰────

  × Invalid regular expression: Character class range with invalid atom
    ╭─[test262/test/language/literals/regexp/u-invalid-non-empty-class-ranges.js:32:3]
 31 │ 
 32 │ /[--\d]/u;
    ·   ────
    ╰────

  × Invalid regular expression: Invalid indexed reference
    ╭─[test262/test/language/literals/regexp/u-invalid-oob-decimal-escape.js:21:2]
 20 │ 
 21 │ /\8/u;
    ·  ──
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-optional-lookahead.js:21:8]
 20 │ 
 21 │ /.(?=.)?/u;
    ·        ─
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-optional-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<=.)?/u;
    ·         ─
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-optional-negative-lookahead.js:21:8]
 20 │ 
 21 │ /.(?!.)?/u;
    ·        ─
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-optional-negative-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<!.)?/u;
    ·         ─
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-range-lookahead.js:21:8]
 20 │ 
 21 │ /.(?=.){2,3}/u;
    ·        ─────
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-range-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<=.){2,3}/u;
    ·         ─────
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-range-negative-lookahead.js:21:8]
 20 │ 
 21 │ /.(?!.){2,3}/u;
    ·        ─────
    ╰────

  × Invalid regular expression: Lone quantifier found, expected with `Atom`
    ╭─[test262/test/language/literals/regexp/u-invalid-range-negative-lookbehind.js:21:9]
 20 │ 
 21 │ /.(?<!.){2,3}/u;
    ·         ─────
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/u-unicode-esc-bounds.js:21:3]
 20 │ 
 21 │ /\u{110000}/u;
    ·   ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/u-unicode-esc-non-hex.js:16:3]
 15 │ 
 16 │ /\u{1,}/u;
    ·   ─
    ╰────

  × Invalid regular expression: Invalid unicode escape sequence
    ╭─[test262/test/language/literals/regexp/unicode-escape-nls-err.js:74:3]
 73 │ 
 74 │ /\u{1F_639}/u;
    ·   ─
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A1.1_T1.js:19:3]
 18 │ //CHECK#1
 19 │ """
    ·   ──
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/string/S7.8.4_A1.1_T1.js:19:3]
 18 │ //CHECK#1
 19 │ """
    ·   ▲
    ╰────
  help: Try insert a semicolon here

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A1.1_T2.js:19:1]
 18 │ //CHECK#1
 19 │ "
    · ──
 20 │ "
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A1.2_T1.js:19:3]
 18 │ //CHECK#1
 19 │ '''
    ·   ──
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/literals/string/S7.8.4_A1.2_T1.js:19:3]
 18 │ //CHECK#1
 19 │ '''
    ·   ▲
    ╰────
  help: Try insert a semicolon here

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A1.2_T2.js:19:1]
 18 │ //CHECK#1
 19 │ '
    · ──
 20 │ '
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A3.1_T1.js:17:1]
 16 │ //CHECK#1
 17 │ "\"
    · ────
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A3.1_T2.js:17:1]
 16 │ //CHECK#1
 17 │ '\'
    · ────
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A3.2_T1.js:17:1]
 16 │ //CHECK#1
 17 │ "\\\"
    · ──────
    ╰────

  × Unterminated string
    ╭─[test262/test/language/literals/string/S7.8.4_A3.2_T2.js:17:1]
 16 │ //CHECK#1
 17 │ '\\\'
    · ──────
    ╰────

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/S7.8.4_A4.3_T1.js:17:1]
 16 │ 
 17 │ "\1"
    · ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/S7.8.4_A4.3_T2.js:17:1]
 16 │ 
 17 │ "\7"
    · ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.1_T4.js:19:2]
 18 │ //CHECK#
 19 │ "\u000G"
    ·  ─────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T1.js:17:2]
 16 │ //CHECK#1
 17 │ "\u1"
    ·  ───
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T2.js:17:2]
 16 │ //CHECK#1
 17 │ "\uA"
    ·  ───
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T3.js:17:2]
 16 │ //CHECK#1
 17 │ "\u11"
    ·  ────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T4.js:17:2]
 16 │ //CHECK#1
 17 │ "\uAA"
    ·  ────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T5.js:17:2]
 16 │ //CHECK#1
 17 │ "\u111"
    ·  ─────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/S7.8.4_A7.2_T6.js:17:2]
 16 │ //CHECK#1
 17 │ "\uAAA"
    ·  ─────
    ╰────

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-1-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\1"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-2-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\2"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-3-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\3"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-4-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\4"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-5-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\5"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-6-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\6"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-7-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\7"; "use strict"; }
    ·                      ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-8-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\8"; "use strict"; }
    ·                      ────
    ╰────
  help: \8 and \9 are not allowed in strict mode

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-8-strict.js:32:1]
 31 │ 
 32 │ '\8';
    · ────
    ╰────
  help: \8 and \9 are not allowed in strict mode

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-9-strict-explicit-pragma.js:26:22]
 25 │ 
 26 │ function invalid() { "\9"; "use strict"; }
    ·                      ────
    ╰────
  help: \8 and \9 are not allowed in strict mode

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-9-strict.js:32:1]
 31 │ 
 32 │ '\9';
    · ────
    ╰────
  help: \8 and \9 are not allowed in strict mode

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-non-octal-escape-sequence-strict.js:28:1]
 27 │ 
 28 │ '\08';
    · ─────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-octal-escape-sequence-prologue-strict.js:18:3]
 17 │ (function() {
 18 │   "asterisk: \052";
    ·   ────────────────
 19 │   "use strict";
    ╰────
  help: for octal literals use the '0o' prefix instead

  × '0'-prefixed octal literals and octal escape sequences are deprecated
    ╭─[test262/test/language/literals/string/legacy-octal-escape-sequence-strict.js:28:1]
 27 │ 
 28 │ '\1';
    · ────
    ╰────
  help: for octal literals use the '0o' prefix instead

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/unicode-escape-nls-err-double.js:50:2]
 49 │ 
 50 │ "\u{1F_639}"
    ·  ─────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/unicode-escape-nls-err-single.js:50:2]
 49 │ 
 50 │ '\u{1F_639}';
    ·  ─────
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/unicode-escape-no-hex-err-double.js:47:2]
 46 │ 
 47 │ "\u"
    ·  ──
    ╰────

  × Invalid escape sequence
    ╭─[test262/test/language/literals/string/unicode-escape-no-hex-err-single.js:47:2]
 46 │ 
 47 │ '\u'
    ·  ──
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/comment-multi-line-html-close.js:17:5]
 16 │ /*
 17 │ */-->
    ·     ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/comment-single-line-html-close.js:16:3]
 15 │ 
 16 │ -->
    ·   ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/comment-single-line-html-open.js:16:1]
 15 │ 
 16 │ <!--
    · ─
    ╰────

  × Duplicated export 'z'
    ╭─[test262/test/language/module-code/early-dup-export-as-star-as.js:18:15]
 17 │ var x;
 18 │ export { x as z };
    ·               ┬
    ·               ╰── Export has already been declared here
 19 │ export * as z from './early-dup-export-as-star-as.js';
    ·             ┬
    ·             ╰── It cannot be redeclared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/module-code/early-dup-export-decl.js:17:17]
 16 │ 
 17 │ export function f() {}
    ·                 ┬
    ·                 ╰── `f` has already been declared here
 18 │ export function *f() {}
    ·                  ┬
    ·                  ╰── It can not be redeclared here
    ╰────

  × Duplicated export 'f'
    ╭─[test262/test/language/module-code/early-dup-export-decl.js:17:17]
 16 │ 
 17 │ export function f() {}
    ·                 ┬
    ·                 ╰── Export has already been declared here
 18 │ export function *f() {}
    ·                  ┬
    ·                  ╰── It cannot be redeclared here
    ╰────

  × Duplicated export 'default'
    ╭─[test262/test/language/module-code/early-dup-export-dflt-id.js:18:8]
 17 │ var x, y;
 18 │ export default x;
    ·        ───┬───
    ·           ╰── Export has already been declared here
 19 │ export { y as default };
    ·               ───┬───
    ·                  ╰── It cannot be redeclared here
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/early-dup-export-dflt.js:16:16]
 15 │ 
 16 │ export default var x = null;
    ·                ───
 17 │ export default var x = null;
    ╰────

  × Duplicated export 'z'
    ╭─[test262/test/language/module-code/early-dup-export-id-as.js:18:15]
 17 │ var x, y;
 18 │ export { x as z };
    ·               ┬
    ·               ╰── Export has already been declared here
 19 │ export { y as z };
    ·               ┬
    ·               ╰── It cannot be redeclared here
    ╰────

  × Duplicated export 'x'
    ╭─[test262/test/language/module-code/early-dup-export-id.js:17:10]
 16 │ var x;
 17 │ export { x };
    ·          ┬
    ·          ╰── Export has already been declared here
 18 │ export { x };
    ·          ┬
    ·          ╰── It cannot be redeclared here
    ╰────

  × Duplicated export 'default'
    ╭─[test262/test/language/module-code/early-dup-export-star-as-dflt.js:18:8]
 17 │ var x;
 18 │ export default x;
    ·        ───┬───
    ·           ╰── Export has already been declared here
 19 │ export * as default from './early-dup-export-start-as-dflt.js';
    ·             ───┬───
    ·                ╰── It cannot be redeclared here
    ╰────

  × Label `label` has already been declared
    ╭─[test262/test/language/module-code/early-dup-lables.js:16:1]
 15 │ 
 16 │ label: {
    · ──┬──
    ·   ╰── `label` has already been declared here
 17 │   label: 0;
    ·   ──┬──
    ·     ╰── It can not be redeclared here
 18 │ }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-dup-lex.js:17:5]
 16 │ 
 17 │ let x;
    ·     ┬
    ·     ╰── `x` has already been declared here
 18 │ const x = 0;
    ·       ┬
    ·       ╰── It can not be redeclared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-dup-top-function-async-generator.js:19:10]
 18 │ 
 19 │ function x() {}
    ·          ┬
    ·          ╰── `x` has already been declared here
 20 │ async function* x() {}
    ·                 ┬
    ·                 ╰── It can not be redeclared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-dup-top-function-async.js:19:10]
 18 │ 
 19 │ function x() {}
    ·          ┬
    ·          ╰── `x` has already been declared here
 20 │ async function x() {}
    ·                ┬
    ·                ╰── It can not be redeclared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-dup-top-function-generator.js:19:10]
 18 │ 
 19 │ function x() {}
    ·          ┬
    ·          ╰── `x` has already been declared here
 20 │ function* x() {}
    ·           ┬
    ·           ╰── It can not be redeclared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-dup-top-function.js:19:10]
 18 │ 
 19 │ function x() {}
    ·          ┬
    ·          ╰── `x` has already been declared here
 20 │ function x() {}
    ·          ┬
    ·          ╰── It can not be redeclared here
    ╰────

  × Export 'Number' is not defined
    ╭─[test262/test/language/module-code/early-export-global.js:19:10]
 18 │ 
 19 │ export { Number };
    ·          ──────
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/early-export-ill-formed-string.js:21:17]
 20 │ // 🌙 is '\uD83C\uDF19'
 21 │ export {Moon as "\uD83C",} from "./early-export-ill-formed-string.js";
    ·                 ────────
 22 │ export {"\uD83C"} from "./early-export-ill-formed-string.js";
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/early-export-ill-formed-string.js:22:9]
 21 │ export {Moon as "\uD83C",} from "./early-export-ill-formed-string.js";
 22 │ export {"\uD83C"} from "./early-export-ill-formed-string.js";
    ·         ────────
 23 │ import {'\uD83C' as Usagi} from "./early-export-ill-formed-string.js";
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/early-export-ill-formed-string.js:23:9]
 22 │ export {"\uD83C"} from "./early-export-ill-formed-string.js";
 23 │ import {'\uD83C' as Usagi} from "./early-export-ill-formed-string.js";
    ·         ────────
 24 │ 
    ╰────

  × Duplicated export '\ud83c'
    ╭─[test262/test/language/module-code/early-export-ill-formed-string.js:21:17]
 20 │ // 🌙 is '\uD83C\uDF19'
 21 │ export {Moon as "\uD83C",} from "./early-export-ill-formed-string.js";
    ·                 ────┬───
    ·                     ╰── Export has already been declared here
 22 │ export {"\uD83C"} from "./early-export-ill-formed-string.js";
    ·         ────┬───
    ·             ╰── It cannot be redeclared here
 23 │ import {'\uD83C' as Usagi} from "./early-export-ill-formed-string.js";
    ╰────

  × Export 'unresolvable' is not defined
    ╭─[test262/test/language/module-code/early-export-unresolvable.js:17:10]
 16 │ 
 17 │ export { unresolvable };
    ·          ────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/module-code/early-import-arguments.js:35:10]
 34 │ 
 35 │ import { arguments } from './early-import-arguments.js';
    ·          ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/module-code/early-import-as-arguments.js:35:15]
 34 │ 
 35 │ import { x as arguments } from './early-import-as-arguments.js';
    ·               ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/module-code/early-import-as-eval.js:35:15]
 34 │ 
 35 │ import { x as eval } from './early-import-as-eval.js';
    ·               ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/module-code/early-import-eval.js:35:10]
 34 │ 
 35 │ import { eval } from './early-import-eval.js';
    ·          ────
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/module-code/early-lex-and-var.js:17:5]
 16 │ 
 17 │ let x;
    ·     ┬
    ·     ╰── `x` has already been declared here
 18 │ var x;
    ·     ┬
    ·     ╰── It can not be redeclared here
    ╰────

  × Unexpected new.target expression
    ╭─[test262/test/language/module-code/early-new-target.js:16:1]
 15 │ 
 16 │ new.target;
    · ──────────
    ╰────
  help: new.target is only allowed in constructors and functions invoked using thew `new` operator

  × The keyword 'public' is reserved
    ╭─[test262/test/language/module-code/early-strict-mode.js:15:5]
 14 │ 
 15 │ var public;
    ·     ──────
    ╰────

  × 'super' can only be used with function calls or in property accesses
    ╭─[test262/test/language/module-code/early-super.js:15:1]
 14 │ 
 15 │ super;
    · ─────
    ╰────
  help: replace with `super()` or `super.prop` or `super[prop]`

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/module-code/early-super.js:15:1]
 14 │ 
 15 │ super;
    · ─────
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/module-code/early-undef-break.js:17:9]
 16 │ while (false) {
 17 │   break undef;
    ·         ─────
 18 │ }
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/module-code/early-undef-continue.js:17:12]
 16 │ while (false) {
 17 │   continue undef;
    ·            ─────
 18 │ }
    ╰────

  × Identifier `A` has already been declared
    ╭─[test262/test/language/module-code/export-default-asyncfunction-declaration-binding-exists.js:22:7]
 21 │ 
 22 │ class A {};
    ·       ┬
    ·       ╰── `A` has already been declared here
 23 │ export default async function A() {}
    ·                               ┬
    ·                               ╰── It can not be redeclared here
    ╰────

  × Identifier `AG` has already been declared
    ╭─[test262/test/language/module-code/export-default-asyncgenerator-declaration-binding-exists.js:22:7]
 21 │ 
 22 │ class AG {}
    ·       ─┬
    ·        ╰── `AG` has already been declared here
 23 │ export default async function * AG() {}
    ·                                 ─┬
    ·                                  ╰── It can not be redeclared here
    ╰────

  × Identifier `F` has already been declared
    ╭─[test262/test/language/module-code/export-default-function-declaration-binding-exists.js:22:7]
 21 │ 
 22 │ class F {}
    ·       ┬
    ·       ╰── `F` has already been declared here
 23 │ export default function F() {}
    ·                         ┬
    ·                         ╰── It can not be redeclared here
 24 │ 
    ╰────

  × Identifier `G` has already been declared
    ╭─[test262/test/language/module-code/export-default-generator-declaration-binding-exists.js:22:7]
 21 │ 
 22 │ class G {}
    ·       ┬
    ·       ╰── `G` has already been declared here
 23 │ export default function * G() {}
    ·                           ┬
    ·                           ╰── It can not be redeclared here
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/export-expname-from-as-unpaired-surrogate.js:21:19]
 20 │ 
 21 │ export { "☿" as "\uD83D" } from "./export-expname_FIXTURE.js";
    ·                 ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/export-expname-from-star-unpaired-surrogate.js:21:8]
 20 │ 
 21 │ export "*" as "\uD83D" from "./export-expname_FIXTURE.js";
    ·        ───
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/export-expname-from-unpaired-surrogate.js:21:10]
 20 │ 
 21 │ export { "\uD83D" } from "./export-expname_FIXTURE.js";
    ·          ────────
    ╰────

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/export-expname-import-unpaired-surrogate.js:21:10]
 20 │ 
 21 │ import { "\uD83D" as foo } from "./export-expname_FIXTURE.js";
    ·          ────────
    ╰────

  × A string literal cannot be used as an exported binding without `from`
    ╭─[test262/test/language/module-code/export-expname-string-binding.js:21:10]
 20 │ 
 21 │ export { "foo" as "bar" }
    ·          ─────
 22 │ 
    ╰────
  help: Did you mean `export { "foo" as "bar" } from 'some-module'`?

  × An export name cannot include a unicode lone surrogate
    ╭─[test262/test/language/module-code/export-expname-unpaired-surrogate.js:21:17]
 20 │ 
 21 │ export { Foo as "\uD83D" }
    ·                 ────────
 22 │ 
    ╰────

  × Identifier `type` has already been declared
    ╭─[test262/test/language/module-code/import-attributes/early-dup-attribute-key-export.js:21:3]
 20 │ export * from './import-attribute-3_FIXTURE.js' with {
 21 │   type: 'json',
    ·   ──┬─
    ·     ╰── `type` has already been declared here
 22 │   'typ\u0065': ''
    ·   ─────┬─────
    ·        ╰── It can not be redeclared here
 23 │ };
    ╰────

  × Identifier `type` has already been declared
    ╭─[test262/test/language/module-code/import-attributes/early-dup-attribute-key-import-nobinding.js:22:3]
 21 │ import './import-attribute-2_FIXTURE.js' with {
 22 │   type: 'json',
    ·   ──┬─
    ·     ╰── `type` has already been declared here
 23 │   'typ\u0065': ''
    ·   ─────┬─────
    ·        ╰── It can not be redeclared here
 24 │ };
    ╰────

  × Identifier `type` has already been declared
    ╭─[test262/test/language/module-code/import-attributes/early-dup-attribute-key-import-withbinding.js:22:3]
 21 │ import x from './import-attribute-1_FIXTURE.js' with {
 22 │   type: 'json',
    ·   ──┬─
    ·     ╰── `type` has already been declared here
 23 │   'typ\u0065': ''
    ·   ─────┬─────
    ·        ╰── It can not be redeclared here
 24 │ };
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/invalid-private-names-call-expression-bad-reference.js:40:14]
 39 │ 
 40 │ (() => {})().#x
    ·              ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/invalid-private-names-call-expression-this.js:40:16]
 39 │ 
 40 │ (() => this)().#x
    ·                ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/invalid-private-names-member-expression-bad-reference.js:40:11]
 39 │ 
 40 │ something.#x
    ·           ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/invalid-private-names-member-expression-this.js:40:6]
 39 │ 
 40 │ this.#x
    ·      ──
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-arrow-function.js:14:9]
 13 │ 
 14 │ () => { export default null; };
    ·         ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-block-stmt-list.js:14:11]
 13 │ 
 14 │ { void 0; export default null; }
    ·           ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-block-stmt.js:14:3]
 13 │ 
 14 │ { export default null; }
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-decl-meth-static.js:14:29]
 13 │ 
 14 │ class C { static method() { export default null; } }
    ·                             ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-decl-meth.js:14:22]
 13 │ 
 14 │ class C { method() { export default null; } }
    ·                      ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-decl-method-gen-static.js:15:30]
 14 │ 
 15 │ class C { static *method() { export default null; } }
    ·                              ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-decl-method-gen.js:15:23]
 14 │ 
 15 │ class C { *method() { export default null; } }
    ·                       ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-expr-meth-gen-static.js:15:29]
 14 │ 
 15 │ (class { static *method() { export default null; } });
    ·                             ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-expr-meth-gen.js:15:22]
 14 │ 
 15 │ (class { *method() { export default null; } });
    ·                      ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-expr-meth-static.js:14:28]
 13 │ 
 14 │ (class { static method() { export default null; } });
    ·                            ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-class-expr-meth.js:14:21]
 13 │ 
 14 │ (class { method() { export default null; } });
    ·                     ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-do-while.js:14:4]
 13 │ 
 14 │ do export default null; while (false)
    ·    ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-const.js:15:3]
 14 │ for (const x = 0; false;)
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-in-const.js:15:3]
 14 │ for (const y in [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-in-let.js:15:3]
 14 │ for (let y in [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-in-lhs.js:15:3]
 14 │ for (y in [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-in-var.js:15:3]
 14 │ for (var y in [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-let.js:15:3]
 14 │ for (let x = 0; false;)
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-lhs.js:15:3]
 14 │ for (x = 0; false;)
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-of-const.js:15:3]
 14 │ for (const y of [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-of-let.js:15:3]
 14 │ for (let y of [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-of-lhs.js:15:3]
 14 │ for (y of [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-of-var.js:15:3]
 14 │ for (var y of [])
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-for-var.js:15:3]
 14 │ for (var x = 0; false;)
 15 │   export default null;
    ·   ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-function-decl.js:14:16]
 13 │ 
 14 │ function f() { export default null; }
    ·                ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-function-expr.js:14:15]
 13 │ 
 14 │ (function() { export default null; });
    ·               ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-generator-decl.js:15:17]
 14 │ 
 15 │ function* g() { export default null; }
    ·                 ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-generator-expr.js:14:16]
 13 │ 
 14 │ (function*() { export default null; });
    ·                ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-if-else.js:14:20]
 13 │ 
 14 │ if (true) { } else export default null;
    ·                    ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-if-if.js:14:12]
 13 │ 
 14 │ if (false) export default null;
    ·            ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-labeled.js:14:10]
 13 │ 
 14 │ test262: export default null;
    ·          ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-object-gen-method.js:15:11]
 14 │ 
 15 │ ({ *m() { export default null; } });
    ·           ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-object-getter.js:14:14]
 13 │ 
 14 │ ({ get m() { export default null; } });
    ·              ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-object-method.js:14:10]
 13 │ 
 14 │ ({ m() { export default null; } });
    ·          ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-object-setter.js:14:15]
 13 │ 
 14 │ ({ set m(x) { export default null; } });
    ·               ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-switch-case-dflt.js:14:21]
 13 │ 
 14 │ switch(0) { case 1: export default null; default: }
    ·                     ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-switch-case.js:14:21]
 13 │ 
 14 │ switch(0) { case 1: export default null; }
    ·                     ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-switch-dftl.js:14:22]
 13 │ 
 14 │ switch(0) { default: export default null; }
    ·                      ──────
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-try-catch-finally.js:15:3]
 14 │ try { } catch (err) { } finally {
 15 │   export default null;
    ·   ──────
 16 │ }
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-try-catch.js:15:3]
 14 │ try { } catch (err) {
 15 │   export default null;
    ·   ──────
 16 │ }
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-try-finally.js:15:3]
 14 │ try { } finally {
 15 │   export default null;
    ·   ──────
 16 │ }
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-try-try.js:15:3]
 14 │ try {
 15 │   export default null;
    ·   ──────
 16 │ } catch (err) { }
    ╰────

  × 'export statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-export-while.js:14:15]
 13 │ 
 14 │ while (false) export default null;
    ·               ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-arrow-function.js:14:9]
 13 │ 
 14 │ () => { import v from './decl-pos-import-arrow-function.js'; };
    ·         ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-block-stmt-list.js:14:11]
 13 │ 
 14 │ { void 0; import v from './decl-pos-import-block-stmt-list.js'; }
    ·           ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-block-stmt.js:14:3]
 13 │ 
 14 │ { import v from './decl-pos-import-block-stmt.js'; }
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-decl-meth-static.js:14:29]
 13 │ 
 14 │ class C { static method() { import v from './decl-pos-import-class-decl-meth-static.js'; } }
    ·                             ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-decl-meth.js:14:22]
 13 │ 
 14 │ class C { method() { import v from './decl-pos-import-class-decl-meth.js'; } }
    ·                      ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-decl-method-gen-static.js:15:30]
 14 │ 
 15 │ class C { static *method() { import v from './decl-pos-import-class-decl-method-gen-static.js'; } }
    ·                              ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-decl-method-gen.js:15:23]
 14 │ 
 15 │ class C { *method() { import v from './decl-pos-import-class-decl-method-gen.js'; } }
    ·                       ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-expr-meth-gen-static.js:15:29]
 14 │ 
 15 │ (class { static *method() { import v from './decl-pos-import-class-expr-meth-gen-static.js'; } });
    ·                             ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-expr-meth-gen.js:15:22]
 14 │ 
 15 │ (class { *method() { import v from './decl-pos-import-class-expr-meth-gen.js'; } });
    ·                      ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-expr-meth-static.js:14:28]
 13 │ 
 14 │ (class { static method() { import v from './decl-pos-import-class-expr-meth-static.js'; } });
    ·                            ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-class-expr-meth.js:14:21]
 13 │ 
 14 │ (class { method() { import v from './decl-pos-import-class-expr-meth.js'; } });
    ·                     ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-do-while.js:14:4]
 13 │ 
 14 │ do import v from './decl-pos-import-do-while.js'; while (false)
    ·    ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-const.js:15:3]
 14 │ for (const x = 0; false;)
 15 │   import v from './decl-pos-import-for-const.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-in-const.js:15:3]
 14 │ for (const y in [])
 15 │   import v from './decl-pos-import-for-in-const.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-in-let.js:15:3]
 14 │ for (let y in [])
 15 │   import v from './decl-pos-import-for-in-let.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-in-lhs.js:15:3]
 14 │ for (y in [])
 15 │   import v from './decl-pos-import-for-in-lhs.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-in-var.js:15:3]
 14 │ for (var y in [])
 15 │   import v from './decl-pos-import-for-in-var.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-let.js:15:3]
 14 │ for (let x = 0; false;)
 15 │   import v from './decl-pos-import-for-let.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-lhs.js:15:3]
 14 │ for (x = 0; false;)
 15 │   import v from './decl-pos-import-for-lhs.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-of-const.js:15:3]
 14 │ for (const y of [])
 15 │   import v from './decl-pos-import-for-of-const.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-of-let.js:15:3]
 14 │ for (let y of [])
 15 │   import v from './decl-pos-import-for-of-let.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-of-lhs.js:15:3]
 14 │ for (y of [])
 15 │   import v from './decl-pos-import-for-of-lhs.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-of-var.js:15:3]
 14 │ for (var y of [])
 15 │   import v from './decl-pos-import-for-of-var.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-for-var.js:15:3]
 14 │ for (var x = 0; false;)
 15 │   import v from './decl-pos-import-for-var.js';
    ·   ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-function-decl.js:14:16]
 13 │ 
 14 │ function f() { import v from './decl-pos-import-function-decl.js'; }
    ·                ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-function-expr.js:14:15]
 13 │ 
 14 │ (function() { import v from './decl-pos-import-function-expr.js'; });
    ·               ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-generator-decl.js:15:17]
 14 │ 
 15 │ function* g() { import v from './decl-pos-import-generator-decl.js'; }
    ·                 ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-generator-expr.js:14:16]
 13 │ 
 14 │ (function*() { import v from './decl-pos-import-generator-expr.js'; });
    ·                ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-if-else.js:14:20]
 13 │ 
 14 │ if (true) { } else import v from './decl-pos-import-if-else.js';
    ·                    ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-if-if.js:14:12]
 13 │ 
 14 │ if (false) import v from './decl-pos-import-if-if.js';
    ·            ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-labeled.js:14:10]
 13 │ 
 14 │ test262: import v from './decl-pos-import-labeled.js';
    ·          ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-object-gen-method.js:15:11]
 14 │ 
 15 │ ({ *m() { import v from './decl-pos-import-object-gen-method.js'; } });
    ·           ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-object-getter.js:14:14]
 13 │ 
 14 │ ({ get m() { import v from './decl-pos-import-object-getter.js'; } });
    ·              ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-object-method.js:14:10]
 13 │ 
 14 │ ({ m() { import v from './decl-pos-import-object-method.js'; } });
    ·          ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-object-setter.js:14:15]
 13 │ 
 14 │ ({ set m(x) { import v from './decl-pos-import-object-setter.js'; } });
    ·               ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-switch-case-dflt.js:14:21]
 13 │ 
 14 │ switch(0) { case 1: import v from './decl-pos-import-switch-case-dflt.js'; default: }
    ·                     ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-switch-case.js:14:21]
 13 │ 
 14 │ switch(0) { case 1: import v from './decl-pos-import-switch-case.js'; }
    ·                     ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-switch-dftl.js:14:22]
 13 │ 
 14 │ switch(0) { default: import v from './decl-pos-import-switch-dftl.js'; }
    ·                      ──────
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-try-catch-finally.js:15:3]
 14 │ try { } catch (err) { } finally {
 15 │   import v from './decl-pos-import-try-catch-finally.js';
    ·   ──────
 16 │ }
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-try-catch.js:15:3]
 14 │ try { } catch (err) {
 15 │   import v from './decl-pos-import-try-catch.js';
    ·   ──────
 16 │ }
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-try-finally.js:15:3]
 14 │ try { } finally {
 15 │   import v from './decl-pos-import-try-finally.js';
    ·   ──────
 16 │ }
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-try-try.js:15:3]
 14 │ try {
 15 │   import v from './decl-pos-import-try-try.js';
    ·   ──────
 16 │ } catch (err) { }
    ╰────

  × 'import statement' declaration can only be used at the top level of a module
    ╭─[test262/test/language/module-code/parse-err-decl-pos-import-while.js:14:15]
 13 │ 
 14 │ while (false) import v from './decl-pos-import-while.js';
    ·               ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/parse-err-export-dflt-const.js:15:16]
 14 │ 
 15 │ export default const x = null;
    ·                ─────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-export-dflt-expr.js:26:20]
 25 │ 
 26 │ export default null, null;
    ·                    ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-export-dflt-let.js:15:19]
 14 │ 
 15 │ export default let x;
    ·                   ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/module-code/parse-err-export-dflt-var.js:15:16]
 14 │ 
 15 │ export default var x;
    ·                ───
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/module-code/parse-err-hoist-lex-fun.js:24:5]
 23 │ 
 24 │ var f;
    ·     ┬
    ·     ╰── `f` has already been declared here
 25 │ function f() {}
    ·          ┬
    ·          ╰── It can not be redeclared here
    ╰────

  × Identifier `g` has already been declared
    ╭─[test262/test/language/module-code/parse-err-hoist-lex-gen.js:26:5]
 25 │ 
 26 │ var g;
    ·     ┬
    ·     ╰── `g` has already been declared here
 27 │ function* g() {}
    ·           ┬
    ·           ╰── It can not be redeclared here
    ╰────

  × Empty parenthesized expression
    ╭─[test262/test/language/module-code/parse-err-invoke-anon-fun-decl.js:26:29]
 25 │ 
 26 │ export default function() {}();
    ·                             ──
    ╰────

  × Empty parenthesized expression
    ╭─[test262/test/language/module-code/parse-err-invoke-anon-gen-decl.js:28:31]
 27 │ 
 28 │ export default function* () {}();
    ·                               ──
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/module-code/parse-err-return.js:32:1]
 31 │ 
 32 │ return;
    · ──────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-semi-dflt-expr.js:27:20]
 26 │ 
 27 │ export default null null;
    ·                    ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-semi-export-star.js:27:48]
 26 │ 
 27 │ export * from './parse-err-semi-export-star.js' null;
    ·                                                ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-semi-name-space-export.js:28:67]
 27 │ 
 28 │ export * as namespace from './parse-err-semi-name-space-export.js' null;
    ·                                                                   ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-semi-named-export-from.js:27:56]
 26 │ 
 27 │ export {} from './parse-err-semi-export-clause-from.js' null;
    ·                                                        ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/module-code/parse-err-semi-named-export.js:27:10]
 26 │ 
 27 │ export {} null;
    ·          ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/module-code/parse-err-syntax-1.js:21:1]
 20 │ 
 21 │ ?
    · ─
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/module-code/parse-err-syntax-2.js:21:1]
 20 │ 
 21 │ 1++;
    · ─
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/module-code/parse-err-yield.js:32:1]
 31 │ 
 32 │ yield;
    · ─────
    ╰────

  × Private identifier '#f' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/private-identifiers-not-empty.js:18:3]
 17 │ var x = {};
 18 │ x.#f = 'Test262';
    ·   ──
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-1.js:21:10]
 20 │   constructor() {
 21 │     this.#x;
    ·          ──
 22 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-2.js:21:10]
 20 │   f() {
 21 │     this.#x;
    ·          ──
 22 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-3.js:20:12]
 19 │ class C {
 20 │   y = this.#x;
    ·            ──
 21 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-4.js:22:10]
 21 │   f() {
 22 │     this.#x;
    ·          ──
 23 │     class D extends C {
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-5.js:23:9]
 22 │ 
 23 │ new C().#x;
    ·         ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-6.js:21:9]
 20 │ 
 21 │ new C().#x;
    ·         ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-7.js:21:5]
 20 │ 
 21 │ obj.#x;
    ·     ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/module-code/privatename-not-valid-earlyerr-module-8.js:20:8]
 19 │ function f() {
 20 │   this.#x;
    ·        ──
 21 │ }
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/module-code/top-level-await/early-errors-await-not-simple-assignment-target.js:17:2]
 16 │ 
 17 │ (await 1) = 1;
    ·  ───────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/module-code/top-level-await/new-await.js:17:5]
 16 │ 
 17 │ new await;
    ·     ─────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/module-code/top-level-await/new-await.js:17:5]
 16 │ 
 17 │ new await;
    ·     ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/module-code/top-level-await/no-operand.js:17:6]
 16 │ 
 17 │ await;
    ·      ─
    ╰────

  × `await` is only allowed within async functions and at the top levels of modules
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-declaration-body.js:38:17]
 37 │ 
 38 │ function fn() { await 0; }
    ·                 ─────
    ╰────

  × `await` is only allowed within async functions and at the top levels of modules
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-declaration-params.js:38:17]
 37 │ 
 38 │ function fn(x = await 1) {
    ·                 ─────
 39 │   return x;
    ╰────

  × await expression not allowed in formal parameter
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-declaration-params.js:38:17]
 37 │ 
 38 │ function fn(x = await 1) {
    ·                 ───┬───
    ·                    ╰── await expression not allowed in formal parameter
 39 │   return x;
    ╰────

  × `await` is only allowed within async functions and at the top levels of modules
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-expr-body.js:29:3]
 28 │ 0, function () {
 29 │   await 1;
    ·   ─────
 30 │ };
    ╰────

  × `await` is only allowed within async functions and at the top levels of modules
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-expr-params.js:28:18]
 27 │ 
 28 │ 0, function (x = await 1) {
    ·                  ─────
 29 │   return x;
    ╰────

  × await expression not allowed in formal parameter
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-does-not-propagate-to-fn-expr-params.js:28:18]
 27 │ 
 28 │ 0, function (x = await 1) {
    ·                  ───┬───
    ·                     ╰── await expression not allowed in formal parameter
 29 │   return x;
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/module-code/top-level-await/syntax/early-no-escaped-await.js:25:1]
 24 │ 
 25 │ \u0061wait 0;
    · ──────────
    ╰────

  × Invalid Character `{`
    ╭─[test262/test/language/punctuators/S7.7_A2_T1.js:18:7]
 17 │ 
 18 │ \u007B\u007D;
    ·       ▲
    ╰────

  × Invalid Character `}`
    ╭─[test262/test/language/punctuators/S7.7_A2_T1.js:18:13]
 17 │ 
 18 │ \u007B\u007D;
    ·             ▲
    ╰────

  × Invalid Character `/`
    ╭─[test262/test/language/punctuators/S7.7_A2_T10.js:18:8]
 17 │ 
 18 │ 1\u002F2;
    ·        ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/punctuators/S7.7_A2_T10.js:18:2]
 17 │ 
 18 │ 1\u002F2;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `(`
    ╭─[test262/test/language/punctuators/S7.7_A2_T2.js:18:7]
 17 │ 
 18 │ \u00281\u0029;
    ·       ▲
    ╰────

  × Invalid Character `)`
    ╭─[test262/test/language/punctuators/S7.7_A2_T2.js:18:14]
 17 │ 
 18 │ \u00281\u0029;
    ·              ▲
    ╰────

  × Invalid Character `[`
    ╭─[test262/test/language/punctuators/S7.7_A2_T3.js:18:7]
 17 │ 
 18 │ \u005B\u005D;
    ·       ▲
    ╰────

  × Invalid Character `]`
    ╭─[test262/test/language/punctuators/S7.7_A2_T3.js:18:13]
 17 │ 
 18 │ \u005B\u005D;
    ·             ▲
    ╰────

  × Invalid Character `;`
    ╭─[test262/test/language/punctuators/S7.7_A2_T4.js:18:7]
 17 │ 
 18 │ \u003B;
    ·       ▲
    ╰────

  × Invalid Character `.`
    ╭─[test262/test/language/punctuators/S7.7_A2_T5.js:19:11]
 18 │ x = 1;
 19 │ this\u002Ex;
    ·           ▲
    ╰────

  × Invalid Character `,`
    ╭─[test262/test/language/punctuators/S7.7_A2_T6.js:18:8]
 17 │ 
 18 │ 1\u002C2;
    ·        ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/punctuators/S7.7_A2_T6.js:18:2]
 17 │ 
 18 │ 1\u002C2;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `+`
    ╭─[test262/test/language/punctuators/S7.7_A2_T7.js:18:8]
 17 │ 
 18 │ 1\u002B2;
    ·        ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/punctuators/S7.7_A2_T7.js:18:2]
 17 │ 
 18 │ 1\u002B2;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `-`
    ╭─[test262/test/language/punctuators/S7.7_A2_T8.js:18:8]
 17 │ 
 18 │ 1\u002D2;
    ·        ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/punctuators/S7.7_A2_T8.js:18:2]
 17 │ 
 18 │ 1\u002D2;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `*`
    ╭─[test262/test/language/punctuators/S7.7_A2_T9.js:18:8]
 17 │ 
 18 │ 1\u002A2;
    ·        ▲
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/punctuators/S7.7_A2_T9.js:18:2]
 17 │ 
 18 │ 1\u002A2;
    ·  ▲
    ╰────
  help: Try insert a semicolon here

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/reserved-words/await-module.js:15:5]
 14 │ 
 15 │ var await;
    ·     ─────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/reserved-words/await-module.js:15:5]
 14 │ 
 15 │ var await;
    ·     ─────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/ident-reference-false-escaped.js:21:1]
 20 │ 
 21 │ f\u0061lse = 0;
    · ──────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/reserved-words/ident-reference-false-escaped.js:21:1]
 20 │ 
 21 │ f\u0061lse = 0;
    · ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/reserved-words/ident-reference-false.js:24:8]
 23 │ // Also see: sec-semantics-static-semantics-isvalidsimpleassignmenttarget
 24 │ ({false});
    ·        ─
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/ident-reference-null-escaped.js:21:1]
 20 │ 
 21 │ nul\u006c = 0;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/reserved-words/ident-reference-null-escaped.js:21:1]
 20 │ 
 21 │ nul\u006c = 0;
    · ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/reserved-words/ident-reference-null.js:24:7]
 23 │ // Also see: sec-semantics-static-semantics-isvalidsimpleassignmenttarget
 24 │ ({null});
    ·       ─
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/ident-reference-true-escaped.js:21:1]
 20 │ 
 21 │ tru\u0065 = 0;
    · ─────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/reserved-words/ident-reference-true-escaped.js:21:1]
 20 │ 
 21 │ tru\u0065 = 0;
    · ─────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/reserved-words/ident-reference-true.js:24:7]
 23 │ // Also see: sec-semantics-static-semantics-isvalidsimpleassignmenttarget
 24 │ ({true});
    ·       ─
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/label-ident-false-escaped.js:21:1]
 20 │ 
 21 │ f\u0061lse: ;
    · ──────────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-false-escaped.js:21:11]
 20 │ 
 21 │ f\u0061lse: ;
    ·           ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-false.js:21:6]
 20 │ 
 21 │ false: ;
    ·      ▲
    ╰────
  help: Try insert a semicolon here

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/label-ident-null-escaped.js:21:1]
 20 │ 
 21 │ nul\u006c: ;
    · ─────────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-null-escaped.js:21:10]
 20 │ 
 21 │ nul\u006c: ;
    ·          ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-null.js:21:5]
 20 │ 
 21 │ null: ;
    ·     ▲
    ╰────
  help: Try insert a semicolon here

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/reserved-words/label-ident-true-escaped.js:21:1]
 20 │ 
 21 │ tru\u0065: ;
    · ─────────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-true-escaped.js:21:10]
 20 │ 
 21 │ tru\u0065: ;
    ·          ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/reserved-words/label-ident-true.js:21:5]
 20 │ 
 21 │ true: ;
    ·     ▲
    ╰────
  help: Try insert a semicolon here

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/rest-parameters/position-invalid.js:14:15]
 13 │ $DONOTEVALUATE();
 14 │ function f(a, ...b, c) {}
    ·               ────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-function/array-destructuring-param-strict-body.js:109:3]
 108 │ async function f([element]) {
 109 │   "use strict";
     ·   ─────────────
 110 │ }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-function/await-as-binding-identifier-escaped.js:30:7]
 29 │ async function asyncFn() {
 30 │   var \u0061wait;
    ·       ──────────
 31 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-function/await-as-binding-identifier.js:30:7]
 29 │ async function asyncFn() {
 30 │   var await;
    ·       ─────
 31 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-function/await-as-identifier-reference-escaped.js:30:8]
 29 │ async function asyncFn() {
 30 │   void \u0061wait;
    ·        ──────────
 31 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-function/await-as-identifier-reference-escaped.js:30:18]
 29 │ async function asyncFn() {
 30 │   void \u0061wait;
    ·                  ─
 31 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-function/await-as-identifier-reference.js:30:13]
 29 │ async function asyncFn() {
 30 │   void await;
    ·             ─
 31 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-function/await-as-label-identifier-escaped.js:30:3]
 29 │ async function asyncFn() {
 30 │   \u0061wait: ;
    ·   ──────────
 31 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-function/await-as-label-identifier-escaped.js:30:13]
 29 │ async function asyncFn() {
 30 │   \u0061wait: ;
    ·             ─
 31 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-function/await-as-label-identifier.js:30:8]
 29 │ async function asyncFn() {
 30 │   await: ;
    ·        ─
 31 │ }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/async-function/dflt-params-duplicates.js:37:18]
 36 │ 
 37 │ async function f(x = 0, x) {
    ·                  ┬      ┬
    ·                  │      ╰── It can not be redeclared here
    ·                  ╰── `x` has already been declared here
 38 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-function/dflt-params-rest.js:41:21]
 40 │ 
 41 │ async function f(...x = []) {
    ·                     ──────
 42 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-NSPL-with-USD.js:17:27]
 16 │ 
 17 │ async function foo(x = 1){"use strict"}
    ·                           ────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-arguments-in-formal-parameters.js:17:21]
 16 │ 
 17 │ async function foo (arguments) {  }
    ·                     ─────────
 18 │ 
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-await-in-formals-default.js:15:30]
 14 │ $DONOTEVALUATE();
 15 │ async function foo (x = await) {  }
    ·                              ─
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-await-in-formals.js:15:21]
 14 │ $DONOTEVALUATE();
 15 │ async function foo (await) {  }
    ·                     ─────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-binding-identifier-arguments.js:17:16]
 16 │ $DONOTEVALUATE();
 17 │ async function arguments () {  }
    ·                ─────────
 18 │ 
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-binding-identifier-eval.js:17:16]
 16 │ $DONOTEVALUATE();
 17 │ async function eval () {  }
    ·                ────
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-body-contains-super-call.js:16:28]
 15 │ 
 16 │ async function foo (foo) { super() };
    ·                            ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-body-contains-super-property.js:16:28]
 15 │ 
 16 │ async function foo (foo) { super.prop };
    ·                            ─────
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-duplicate-parameters.js:18:20]
 17 │ 
 18 │ async function foo(a, a) { }
    ·                    ┬  ┬
    ·                    │  ╰── It can not be redeclared here
    ·                    ╰── `a` has already been declared here
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-eval-in-formal-parameters.js:17:21]
 16 │ 
 17 │ async function foo (eval) {  }
    ·                     ────
    ╰────

  × Identifier `bar` has already been declared
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-formals-body-duplicate.js:16:21]
 15 │ 
 16 │ async function foo (bar) { let bar; }
    ·                     ─┬─        ─┬─
    ·                      │          ╰── It can not be redeclared here
    ·                      ╰── `bar` has already been declared here
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-formals-contains-super-call.js:16:27]
 15 │ 
 16 │ async function foo (foo = super()) { let bar; }
    ·                           ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/statements/async-function/early-errors-declaration-formals-contains-super-property.js:16:27]
 15 │ 
 16 │ async function foo (foo = super.foo) { let bar; }
    ·                           ─────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-function/escaped-async.js:25:1]
 24 │ 
 25 │ \u0061sync function f(){}
    · ──────────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-function/let-newline-await-in-async-function.js:24:5]
 23 │     let
 24 │     await 0;
    ·     ─────
 25 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/async-function/let-newline-await-in-async-function.js:24:10]
 23 │     let
 24 │     await 0;
    ·          ▲
 25 │ }
    ╰────
  help: Try insert a semicolon here

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-function/object-destructuring-param-strict-body.js:109:3]
 108 │ async function f({property}) {
 109 │   "use strict";
     ·   ─────────────
 110 │ }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-function/rest-param-strict-body.js:109:3]
 108 │ async function f(a,...rest) {
 109 │   "use strict";
     ·   ─────────────
 110 │ }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/async-function/rest-params-trailing-comma-early-error.js:34:18]
 33 │ 
 34 │ async function f(...a,) {
    ·                  ────
 35 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-generator/array-destructuring-param-strict-body.js:112:3]
 111 │ async function* f([element]) {
 112 │   "use strict";
     ·   ─────────────
 113 │ }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-generator/await-as-binding-identifier-escaped.js:31:7]
 30 │ async function *gen() {
 31 │   var \u0061wait;
    ·       ──────────
 32 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/async-generator/await-as-binding-identifier.js:31:7]
 30 │ async function *gen() {
 31 │   var await;
    ·       ─────
 32 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-generator/await-as-identifier-reference-escaped.js:31:8]
 30 │ async function *gen() {
 31 │   void \u0061wait;
    ·        ──────────
 32 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-generator/await-as-identifier-reference-escaped.js:31:18]
 30 │ async function *gen() {
 31 │   void \u0061wait;
    ·                  ─
 32 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-generator/await-as-identifier-reference.js:31:13]
 30 │ async function *gen() {
 31 │   void await;
    ·             ─
 32 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-generator/await-as-label-identifier-escaped.js:31:3]
 30 │ async function *gen() {
 31 │   \u0061wait: ;
    ·   ──────────
 32 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-generator/await-as-label-identifier-escaped.js:31:13]
 30 │ async function *gen() {
 31 │   \u0061wait: ;
    ·             ─
 32 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/async-generator/await-as-label-identifier.js:31:8]
 30 │ async function *gen() {
 31 │   await: ;
    ·        ─
 32 │ }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/async-generator/dflt-params-duplicates.js:40:19]
 39 │ 
 40 │ async function* f(x = 0, x) {
    ·                   ┬      ┬
    ·                   │      ╰── It can not be redeclared here
    ·                   ╰── `x` has already been declared here
 41 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dflt-params-rest.js:44:22]
 43 │ 
 44 │ async function* f(...x = []) {
    ·                      ──────
 45 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-init-ary.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...[ x ] = []]) {
    ·                       ──────────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-init-id.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...x = []]) {
    ·                       ──────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-init-obj.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...{ x } = []]) {
    ·                       ──────────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-not-final-ary.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...[x], y]) {
    ·                    ──────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-not-final-id.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...x, y]) {
    ·                    ────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/ary-ptrn-rest-not-final-obj.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...{ x }, y]) {
    ·                    ────────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-init-ary.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...[ x ] = []] = []) {
    ·                       ──────────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-init-id.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...x = []] = []) {
    ·                       ──────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-init-obj.js:33:23]
 32 │ var callCount = 0;
 33 │ async function* f([...{ x } = []] = []) {
    ·                       ──────────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-not-final-ary.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...[x], y] = [1, 2, 3]) {
    ·                    ──────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-not-final-id.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...x, y] = [1, 2, 3]) {
    ·                    ────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/async-generator/dstr/dflt-ary-ptrn-rest-not-final-obj.js:33:20]
 32 │ var callCount = 0;
 33 │ async function* f([...{ x }, y] = [1, 2, 3]) {
    ·                    ────────
 34 │   
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-generator/escaped-async.js:25:1]
 24 │ 
 25 │ \u0061sync function* f(){}
    · ──────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-generator/object-destructuring-param-strict-body.js:112:3]
 111 │ async function* f({property}) {
 112 │   "use strict";
     ·   ─────────────
 113 │ }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/async-generator/rest-param-strict-body.js:112:3]
 111 │ async function* f(a,...rest) {
 112 │   "use strict";
     ·   ─────────────
 113 │ }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/async-generator/rest-params-trailing-comma-early-error.js:37:19]
 36 │ 
 37 │ async function* f(...a,) {
    ·                   ────
 38 │   
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/async-generator/yield-as-binding-identifier-escaped.js:31:7]
 30 │ async function *gen() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-as-binding-identifier-escaped.js:31:7]
 30 │ async function *gen() {
 31 │   var yi\u0065ld;
    ·       ──────────
 32 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/async-generator/yield-as-binding-identifier.js:31:7]
 30 │ async function *gen() {
 31 │   var yield;
    ·       ─────
 32 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-as-binding-identifier.js:31:7]
 30 │ async function *gen() {
 31 │   var yield;
    ·       ─────
 32 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/async-generator/yield-as-identifier-reference-escaped.js:31:8]
 30 │ async function *gen() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-as-identifier-reference-escaped.js:31:8]
 30 │ async function *gen() {
 31 │   void yi\u0065ld;
    ·        ──────────
 32 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/async-generator/yield-as-identifier-reference.js:31:8]
 30 │ async function *gen() {
 31 │   void yield;
    ·        ─────
 32 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-as-identifier-reference.js:31:8]
 30 │ async function *gen() {
 31 │   void yield;
    ·        ─────
 32 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/async-generator/yield-as-label-identifier-escaped.js:31:3]
 30 │ async function *gen() {
 31 │   yi\u0065ld: ;
    ·   ──────────
 32 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/async-generator/yield-as-label-identifier-escaped.js:31:13]
 30 │ async function *gen() {
 31 │   yi\u0065ld: ;
    ·             ▲
 32 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/async-generator/yield-as-label-identifier.js:31:8]
 30 │ async function *gen() {
 31 │   yield: ;
    ·        ▲
 32 │ }
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-identifier-spread-strict.js:37:15]
 36 │        ...(function() {
 37 │           var yield;
    ·               ─────
 38 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/async-generator/yield-identifier-strict.js:29:11]
 28 │   (function() {
 29 │       var yield;
    ·           ─────
 30 │       throw new Test262Error();
    ╰────

  × Missing catch or finally clause
    ╭─[test262/test/language/statements/block/12.1-1.js:15:6]
 14 │ 
 15 │ try{};catch(){}
    ·      ▲
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/block/12.1-1.js:15:7]
 14 │ 
 15 │ try{};catch(){}
    ·       ─────
    ╰────

  × Missing catch or finally clause
    ╭─[test262/test/language/statements/block/12.1-2.js:17:6]
 16 │ 
 17 │ try{};catch{};finally{}
    ·      ▲
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/block/12.1-2.js:17:7]
 16 │ 
 17 │ try{};catch{};finally{}
    ·       ─────
    ╰────

  × Missing catch or finally clause
    ╭─[test262/test/language/statements/block/12.1-3.js:15:6]
 14 │ 
 15 │ try{};finally{}
    ·      ▲
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/block/12.1-3.js:15:7]
 14 │ 
 15 │ try{};finally{}
    ·       ───────
    ╰────

  × Expected `(` but found `{`
    ╭─[test262/test/language/statements/block/12.1-4.js:15:3]
 14 │ 
 15 │ if{};else{}
    ·   ┬
    ·   ╰── `(` expected
    ╰────

  × Expected `(` but found `{`
    ╭─[test262/test/language/statements/block/12.1-5.js:15:3]
 14 │ 
 15 │ if{};else if{}
    ·   ┬
    ·   ╰── `(` expected
    ╰────

  × Expected `(` but found `{`
    ╭─[test262/test/language/statements/block/12.1-6.js:17:3]
 16 │ 
 17 │ if{};else if{};else{}
    ·   ┬
    ·   ╰── `(` expected
    ╰────

  × Expected `while` but found `;`
    ╭─[test262/test/language/statements/block/12.1-7.js:15:5]
 14 │ 
 15 │ do{};while()
    ·     ┬
    ·     ╰── `while` expected
    ╰────

  × Expected `,` but found `;`
    ╭─[test262/test/language/statements/block/S12.1_A4_T1.js:20:10]
 19 │ //CHECK#1
 20 │ y={__func;}();
    ·          ┬
    ·          ╰── `,` expected
 21 │ //
    ╰────

  × Expected `,` but found `;`
    ╭─[test262/test/language/statements/block/S12.1_A4_T2.js:20:5]
 19 │ //CHECK#1
 20 │ y={x;};
    ·     ┬
    ·     ╰── `,` expected
 21 │ //
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/block/early-errors/invalid-names-call-expression-bad-reference.js:41:16]
 40 │ 
 41 │ { (() => {})().#x }
    ·                ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/block/early-errors/invalid-names-call-expression-this.js:41:18]
 40 │ 
 41 │ { (() => this)().#x }
    ·                  ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/block/early-errors/invalid-names-member-expression-bad-reference.js:41:13]
 40 │ 
 41 │ { something.#x }
    ·             ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/block/early-errors/invalid-names-member-expression-this.js:41:8]
 40 │ 
 41 │ { this.#x }
    ·        ──
    ╰────

  × A `continue` statement can only jump to a label of an enclosing `for`, `while` or `do while` statement.
    ╭─[test262/test/language/statements/block/labeled-continue.js:21:1]
 20 │ 
 21 │ label: {
    · ──┬──
    ·   ╰── This is an non-iteration statement
 22 │   for ( ;; ) {
 23 │     continue label;
    ·              ──┬──
    ·                ╰── for this label
 24 │   }
    ╰────

  × Illegal break statement
    ╭─[test262/test/language/statements/break/S12.8_A1_T1.js:19:1]
 18 │ var x=1;
 19 │ break;
    · ──────
 20 │ var y=2;
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
    ╭─[test262/test/language/statements/break/S12.8_A1_T2.js:21:7]
 20 │ var x=1;
 21 │ break LABEL;
    ·       ─────
 22 │ var y=2;
    ╰────

  × Illegal break statement
    ╭─[test262/test/language/statements/break/S12.8_A1_T3.js:22:5]
 21 │     var x=1;
 22 │     break;
    ·     ──────
 23 │     var y=2;
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Use of undefined label
    ╭─[test262/test/language/statements/break/S12.8_A1_T4.js:24:11]
 23 │     var x=1;
 24 │     break LABEL;
    ·           ─────
 25 │     var y=2;
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/break/S12.8_A5_T1.js:24:15]
 23 │             return;
 24 │         break LABEL_ANOTHER_LOOP;
    ·               ──────────────────
 25 │         LABEL_IN_2 : y++;
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/break/S12.8_A5_T2.js:26:15]
 25 │             return;
 26 │         break IN_DO_FUNC;
    ·               ──────────
 27 │         LABEL_IN_2 : y++;
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/break/S12.8_A5_T3.js:26:15]
 25 │             return;
 26 │         break LABEL_IN;
    ·               ────────
 27 │         LABEL_IN_2 : y++;
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/break/S12.8_A6.js:24:23]
 23 │     x++;
 24 │     (function(){break LABEL1;})();
    ·                       ──────
 25 │     y++;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/break/S12.8_A8_T1.js:20:8]
 19 │ } catch(e){
 20 │     break LABEL2;
    ·           ──────
 21 │     LABEL2 : do {
    ╰────

  × Illegal break statement
    ╭─[test262/test/language/statements/break/S12.8_A8_T2.js:20:2]
 19 │ } catch(e){
 20 │     break;
    ·     ──────
 21 │     LABEL2 : do {
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Illegal break statement
    ╭─[test262/test/language/statements/break/static-init-without-label.js:25:7]
 24 │     static {
 25 │       break;
    ·       ──────
 26 │     }
    ╰────
  help: A `break` statement can only be used within an enclosing iteration or switch statement.

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-meth-escaped-async.js:26:5]
 25 │ class C {
 26 │     \u0061sync* m(){}
    ·     ──────────
 27 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method/array-destructuring-param-strict-body.js:135:5]
 134 │   async *method([element]) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-binding-identifier.js:36:9]
 35 │ class C { async *gen() {
 36 │     var await;
    ·         ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-identifier-reference-escaped.js:36:20]
 35 │ class C { async *gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-identifier-reference.js:36:15]
 35 │ class C { async *gen() {
 36 │     void await;
    ·               ─
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-label-identifier-escaped.js:36:5]
 35 │ class C { async *gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-label-identifier-escaped.js:36:15]
 35 │ class C { async *gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method/await-as-label-identifier.js:36:10]
 35 │ class C { async *gen() {
 36 │     await: ;
    ·          ─
 37 │ }}
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/async-gen-method/dflt-params-duplicates.js:63:17]
 62 │ class C {
 63 │   async *method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 64 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/async-gen-method/dflt-params-rest.js:67:20]
 66 │ class C {
 67 │   async *method(...x = []) {
    ·                    ──────
 68 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method/object-destructuring-param-strict-body.js:135:5]
 134 │   async *method({property}) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method/rest-param-strict-body.js:135:5]
 134 │   async *method(a,...rest) {
 135 │     "use strict";
     ·     ─────────────
 136 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/async-gen-method/rest-params-trailing-comma-early-error.js:60:17]
 59 │ class C {
 60 │   async *method(...a,) {
    ·                 ────
 61 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-binding-identifier.js:36:9]
 35 │ class C { async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-binding-identifier.js:36:9]
 35 │ class C { async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-identifier-reference.js:36:10]
 35 │ class C { async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-identifier-reference.js:36:10]
 35 │ class C { async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-label-identifier-escaped.js:36:5]
 35 │ class C { async *gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-label-identifier-escaped.js:36:15]
 35 │ class C { async *gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/async-gen-method/yield-as-label-identifier.js:36:10]
 35 │ class C { async *gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-identifier-spread-strict.js:42:17]
 41 │          ...(function() {
 42 │             var yield;
    ·                 ─────
 43 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method/yield-identifier-strict.js:34:13]
 33 │     (function() {
 34 │         var yield;
    ·             ─────
 35 │         throw new Test262Error();
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method-static/array-destructuring-param-strict-body.js:136:5]
 135 │   static async *method([element]) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-binding-identifier.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var await;
    ·         ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-identifier-reference-escaped.js:36:20]
 35 │ class C { static async *gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-identifier-reference.js:36:15]
 35 │ class C { static async *gen() {
 36 │     void await;
    ·               ─
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-label-identifier-escaped.js:36:5]
 35 │ class C { static async *gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-label-identifier-escaped.js:36:15]
 35 │ class C { static async *gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-gen-method-static/await-as-label-identifier.js:36:10]
 35 │ class C { static async *gen() {
 36 │     await: ;
    ·          ─
 37 │ }}
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/async-gen-method-static/dflt-params-duplicates.js:64:24]
 63 │ class C {
 64 │   static async *method(x = 0, x) {
    ·                        ┬      ┬
    ·                        │      ╰── It can not be redeclared here
    ·                        ╰── `x` has already been declared here
 65 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/async-gen-method-static/dflt-params-rest.js:68:27]
 67 │ class C {
 68 │   static async *method(...x = []) {
    ·                           ──────
 69 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method-static/object-destructuring-param-strict-body.js:136:5]
 135 │   static async *method({property}) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-gen-method-static/rest-param-strict-body.js:136:5]
 135 │   static async *method(a,...rest) {
 136 │     "use strict";
     ·     ─────────────
 137 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/async-gen-method-static/rest-params-trailing-comma-early-error.js:61:24]
 60 │ class C {
 61 │   static async *method(...a,) {
    ·                        ────
 62 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-binding-identifier.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-binding-identifier.js:36:9]
 35 │ class C { static async *gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-identifier-reference.js:36:10]
 35 │ class C { static async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-identifier-reference.js:36:10]
 35 │ class C { static async *gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-label-identifier-escaped.js:36:5]
 35 │ class C { static async *gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-label-identifier-escaped.js:36:15]
 35 │ class C { static async *gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-as-label-identifier.js:36:10]
 35 │ class C { static async *gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-identifier-spread-strict.js:42:17]
 41 │          ...(function() {
 42 │             var yield;
    ·                 ─────
 43 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/async-gen-method-static/yield-identifier-strict.js:34:13]
 33 │     (function() {
 34 │         var yield;
    ·             ─────
 35 │         throw new Test262Error();
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-meth-escaped-async.js:26:5]
 25 │ class C {
 26 │     \u0061sync m(){}
    ·     ──────────
 27 │ };
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method/array-destructuring-param-strict-body.js:134:5]
 133 │   async method([element]) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-method/await-as-binding-identifier-escaped.js:37:9]
 36 │   async method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-method/await-as-binding-identifier.js:37:9]
 36 │   async method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-method/await-as-identifier-reference-escaped.js:37:10]
 36 │   async method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method/await-as-identifier-reference-escaped.js:37:20]
 36 │   async method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method/await-as-identifier-reference.js:37:15]
 36 │   async method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-method/await-as-label-identifier-escaped.js:37:5]
 36 │   async method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method/await-as-label-identifier-escaped.js:37:15]
 36 │   async method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method/await-as-label-identifier.js:37:10]
 36 │   async method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/async-method/dflt-params-duplicates.js:62:16]
 61 │ class C {
 62 │   async method(x = 0, x) {
    ·                ┬      ┬
    ·                │      ╰── It can not be redeclared here
    ·                ╰── `x` has already been declared here
 63 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/async-method/dflt-params-rest.js:66:19]
 65 │ class C {
 66 │   async method(...x = []) {
    ·                   ──────
 67 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method/object-destructuring-param-strict-body.js:134:5]
 133 │   async method({property}) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method/rest-param-strict-body.js:134:5]
 133 │   async method(a,...rest) {
 134 │     "use strict";
     ·     ─────────────
 135 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/async-method/rest-params-trailing-comma-early-error.js:58:16]
 57 │ class C {
 58 │   async method(...a,) {
    ·                ────
 59 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method-static/array-destructuring-param-strict-body.js:133:5]
 132 │   static async method([element]) {
 133 │     "use strict";
     ·     ─────────────
 134 │   }
     ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-method-static/await-as-binding-identifier-escaped.js:37:9]
 36 │   static async method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/async-method-static/await-as-binding-identifier.js:37:9]
 36 │   static async method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-method-static/await-as-identifier-reference-escaped.js:37:10]
 36 │   static async method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method-static/await-as-identifier-reference-escaped.js:37:20]
 36 │   static async method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method-static/await-as-identifier-reference.js:37:15]
 36 │   static async method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/async-method-static/await-as-label-identifier-escaped.js:37:5]
 36 │   static async method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method-static/await-as-label-identifier-escaped.js:37:15]
 36 │   static async method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/async-method-static/await-as-label-identifier.js:37:10]
 36 │   static async method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/async-method-static/dflt-params-duplicates.js:61:23]
 60 │ class C {
 61 │   static async method(x = 0, x) {
    ·                       ┬      ┬
    ·                       │      ╰── It can not be redeclared here
    ·                       ╰── `x` has already been declared here
 62 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/async-method-static/dflt-params-rest.js:65:26]
 64 │ class C {
 65 │   static async method(...x = []) {
    ·                          ──────
 66 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method-static/object-destructuring-param-strict-body.js:133:5]
 132 │   static async method({property}) {
 133 │     "use strict";
     ·     ─────────────
 134 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/async-method-static/rest-param-strict-body.js:133:5]
 132 │   static async method(a,...rest) {
 133 │     "use strict";
     ·     ─────────────
 134 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/async-method-static/rest-params-trailing-comma-early-error.js:57:23]
 56 │ class C {
 57 │   static async method(...a,) {
    ·                       ────
 58 │     
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/class-name-ident-await-escaped-module.js:23:7]
 22 │ 
 23 │ class aw\u0061it {}
    ·       ──────────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-await-escaped-module.js:23:7]
 22 │ 
 23 │ class aw\u0061it {}
    ·       ──────────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/class-name-ident-await-module.js:22:7]
 21 │ 
 22 │ class await {}
    ·       ─────
    ╰────

  × The keyword 'await' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-await-module.js:22:7]
 21 │ 
 22 │ class await {}
    ·       ─────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-let-escaped.js:28:7]
 27 │ 
 28 │ class l\u0065t {}
    ·       ────────
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-let.js:28:7]
 27 │ 
 28 │ class let {}
    ·       ───
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-static-escaped.js:28:7]
 27 │ 
 28 │ class st\u0061tic {}
    ·       ───────────
    ╰────

  × The keyword 'static' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-static.js:28:7]
 27 │ 
 28 │ class static {}
    ·       ──────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-yield-escaped.js:28:7]
 27 │ 
 28 │ class yi\u0065ld {}
    ·       ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/class-name-ident-yield.js:26:7]
 25 │ 
 26 │ class yield {}
    ·       ─────
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/statements/class/definition/early-errors-class-async-method-duplicate-parameters.js:29:13]
 28 │ class Foo {
 29 │   async foo(a, a) { }
    ·             ┬  ┬
    ·             │  ╰── It can not be redeclared here
    ·             ╰── `a` has already been declared here
 30 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-NSPL-with-USD.js:17:21]
 16 │ class Foo {
 17 │   async bar(x = 1) {"use strict"}
    ·                     ────────────
 18 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-arguments-in-formal-parameters.js:16:14]
 15 │ class Foo {
 16 │   async foo (arguments) { }
    ·              ─────────
 17 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-await-in-formals-default.js:16:23]
 15 │ class Foo {
 16 │   async foo (x = await) {  }
    ·                       ─
 17 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-await-in-formals.js:16:14]
 15 │ class Foo {
 16 │   async foo (await) {  }
    ·              ─────
 17 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-body-contains-super-call.js:16:18]
 15 │ class Foo {
 16 │   async foo () { super() }
    ·                  ───────
 17 │ }
    ╰────

  × Identifier `a` has already been declared
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-duplicate-parameters.js:28:7]
 27 │ class Foo {
 28 │   foo(a, a) { }
    ·       ┬  ┬
    ·       │  ╰── It can not be redeclared here
    ·       ╰── `a` has already been declared here
 29 │ }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-eval-in-formal-parameters.js:16:13]
 15 │ class Foo {
 16 │   async foo(eval) { }
    ·             ────
 17 │ }
    ╰────

  × Expected `(` but found `Identifier`
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-formals-body-duplicate.js:18:18]
 17 │ class Foo {
 18 │   async function foo(bar) { let bar; }
    ·                  ─┬─
    ·                   ╰── `(` expected
 19 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/definition/early-errors-class-method-formals-contains-super-call.js:16:19]
 15 │ class Foo {
 16 │   async foo(foo = super()) { }
    ·                   ───────
 17 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-as-function-expression-binding-identifier.js:20:15]
 19 │   *g() {
 20 │     (function yield() {});
    ·               ─────
 21 │   }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-as-identifier-in-nested-function.js:21:7]
 20 │     function h() {
 21 │       yield = 1;
    ·       ─────
 22 │     }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-as-logical-or-expression.js:19:11]
 18 │   *g() {
 19 │     yield ? yield : yield;
    ·           ─
 20 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-as-parameter.js:19:6]
 18 │ class A {
 19 │   *g(yield) {}
    ·      ─────
 20 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-as-parameter.js:19:6]
 18 │ class A {
 19 │   *g(yield) {}
    ·      ─────
 20 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-star-after-newline.js:20:5]
 19 │     yield
 20 │     * 1
    ·     ─
 21 │   }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-weak-binding.js:18:20]
 17 │ class A {
 18 │   *g() { yield 3 + yield 4; }
    ·                    ─────
 19 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/definition/methods-gen-yield-weak-binding.js:18:25]
 17 │ class A {
 18 │   *g() { yield 3 + yield 4; }
    ·                         ▲
 19 │ }
    ╰────
  help: Try insert a semicolon here

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-init-ary.js:57:21]
 56 │ class C {
 57 │   async *method([...[ x ] = []]) {
    ·                     ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-init-id.js:57:21]
 56 │ class C {
 57 │   async *method([...x = []]) {
    ·                     ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-init-obj.js:57:21]
 56 │ class C {
 57 │   async *method([...{ x } = []]) {
    ·                     ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-ary.js:57:18]
 56 │ class C {
 57 │   async *method([...[x], y]) {
    ·                  ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-id.js:57:18]
 56 │ class C {
 57 │   async *method([...x, y]) {
    ·                  ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-ary-ptrn-rest-not-final-obj.js:57:18]
 56 │ class C {
 57 │   async *method([...{ x }, y]) {
    ·                  ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-ary.js:57:21]
 56 │ class C {
 57 │   async *method([...[ x ] = []] = []) {
    ·                     ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-id.js:57:21]
 56 │ class C {
 57 │   async *method([...x = []] = []) {
    ·                     ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-init-obj.js:57:21]
 56 │ class C {
 57 │   async *method([...{ x } = []] = []) {
    ·                     ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:57:18]
 56 │ class C {
 57 │   async *method([...[x], y] = [1, 2, 3]) {
    ·                  ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:57:18]
 56 │ class C {
 57 │   async *method([...x, y] = [1, 2, 3]) {
    ·                  ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:57:18]
 56 │ class C {
 57 │   async *method([...{ x }, y] = [1, 2, 3]) {
    ·                  ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-ary.js:57:28]
 56 │ class C {
 57 │   static async *method([...[ x ] = []]) {
    ·                            ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-id.js:57:28]
 56 │ class C {
 57 │   static async *method([...x = []]) {
    ·                            ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-init-obj.js:57:28]
 56 │ class C {
 57 │   static async *method([...{ x } = []]) {
    ·                            ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-ary.js:57:25]
 56 │ class C {
 57 │   static async *method([...[x], y]) {
    ·                         ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-id.js:57:25]
 56 │ class C {
 57 │   static async *method([...x, y]) {
    ·                         ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-ary-ptrn-rest-not-final-obj.js:57:25]
 56 │ class C {
 57 │   static async *method([...{ x }, y]) {
    ·                         ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:57:28]
 56 │ class C {
 57 │   static async *method([...[ x ] = []] = []) {
    ·                            ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:57:28]
 56 │ class C {
 57 │   static async *method([...x = []] = []) {
    ·                            ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:57:28]
 56 │ class C {
 57 │   static async *method([...{ x } = []] = []) {
    ·                            ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:57:25]
 56 │ class C {
 57 │   static async *method([...[x], y] = [1, 2, 3]) {
    ·                         ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:57:25]
 56 │ class C {
 57 │   static async *method([...x, y] = [1, 2, 3]) {
    ·                         ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:57:25]
 56 │ class C {
 57 │   static async *method([...{ x }, y] = [1, 2, 3]) {
    ·                         ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-ary.js:57:23]
 56 │ class C {
 57 │   async * #method([...[ x ] = []]) {
    ·                       ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-id.js:57:23]
 56 │ class C {
 57 │   async * #method([...x = []]) {
    ·                       ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-init-obj.js:57:23]
 56 │ class C {
 57 │   async * #method([...{ x } = []]) {
    ·                       ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-ary.js:57:20]
 56 │ class C {
 57 │   async * #method([...[x], y]) {
    ·                    ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-id.js:57:20]
 56 │ class C {
 57 │   async * #method([...x, y]) {
    ·                    ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-ary-ptrn-rest-not-final-obj.js:57:20]
 56 │ class C {
 57 │   async * #method([...{ x }, y]) {
    ·                    ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-ary.js:57:23]
 56 │ class C {
 57 │   async * #method([...[ x ] = []] = []) {
    ·                       ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-id.js:57:23]
 56 │ class C {
 57 │   async * #method([...x = []] = []) {
    ·                       ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-init-obj.js:57:23]
 56 │ class C {
 57 │   async * #method([...{ x } = []] = []) {
    ·                       ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:57:20]
 56 │ class C {
 57 │   async * #method([...[x], y] = [1, 2, 3]) {
    ·                    ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:57:20]
 56 │ class C {
 57 │   async * #method([...x, y] = [1, 2, 3]) {
    ·                    ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:57:20]
 56 │ class C {
 57 │   async * #method([...{ x }, y] = [1, 2, 3]) {
    ·                    ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-ary.js:57:30]
 56 │ class C {
 57 │   static async * #method([...[ x ] = []]) {
    ·                              ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-id.js:57:30]
 56 │ class C {
 57 │   static async * #method([...x = []]) {
    ·                              ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-init-obj.js:57:30]
 56 │ class C {
 57 │   static async * #method([...{ x } = []]) {
    ·                              ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-ary.js:57:27]
 56 │ class C {
 57 │   static async * #method([...[x], y]) {
    ·                           ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-id.js:57:27]
 56 │ class C {
 57 │   static async * #method([...x, y]) {
    ·                           ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-ary-ptrn-rest-not-final-obj.js:57:27]
 56 │ class C {
 57 │   static async * #method([...{ x }, y]) {
    ·                           ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:57:30]
 56 │ class C {
 57 │   static async * #method([...[ x ] = []] = []) {
    ·                              ──────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:57:30]
 56 │ class C {
 57 │   static async * #method([...x = []] = []) {
    ·                              ──────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:57:30]
 56 │ class C {
 57 │   static async * #method([...{ x } = []] = []) {
    ·                              ──────────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:57:27]
 56 │ class C {
 57 │   static async * #method([...[x], y] = [1, 2, 3]) {
    ·                           ──────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:57:27]
 56 │ class C {
 57 │   static async * #method([...x, y] = [1, 2, 3]) {
    ·                           ────
 58 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/async-private-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:57:27]
 56 │ class C {
 57 │   static async * #method([...{ x }, y] = [1, 2, 3]) {
    ·                           ────────
 58 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-init-ary.js:75:15]
 74 │ class C {
 75 │   *method([...[ x ] = []]) {
    ·               ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-init-id.js:75:15]
 74 │ class C {
 75 │   *method([...x = []]) {
    ·               ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-init-obj.js:75:15]
 74 │ class C {
 75 │   *method([...{ x } = []]) {
    ·               ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-not-final-ary.js:75:12]
 74 │ class C {
 75 │   *method([...[x], y]) {
    ·            ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-not-final-id.js:75:12]
 74 │ class C {
 75 │   *method([...x, y]) {
    ·            ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-ary-ptrn-rest-not-final-obj.js:75:12]
 74 │ class C {
 75 │   *method([...{ x }, y]) {
    ·            ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-ary.js:75:15]
 74 │ class C {
 75 │   *method([...[ x ] = []] = []) {
    ·               ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-id.js:75:15]
 74 │ class C {
 75 │   *method([...x = []] = []) {
    ·               ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-init-obj.js:75:15]
 74 │ class C {
 75 │   *method([...{ x } = []] = []) {
    ·               ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:75:12]
 74 │ class C {
 75 │   *method([...[x], y] = [1, 2, 3]) {
    ·            ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-id.js:75:12]
 74 │ class C {
 75 │   *method([...x, y] = [1, 2, 3]) {
    ·            ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:75:12]
 74 │ class C {
 75 │   *method([...{ x }, y] = [1, 2, 3]) {
    ·            ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-init-ary.js:75:22]
 74 │ class C {
 75 │   static *method([...[ x ] = []]) {
    ·                      ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-init-id.js:75:22]
 74 │ class C {
 75 │   static *method([...x = []]) {
    ·                      ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-init-obj.js:75:22]
 74 │ class C {
 75 │   static *method([...{ x } = []]) {
    ·                      ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-ary.js:75:19]
 74 │ class C {
 75 │   static *method([...[x], y]) {
    ·                   ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-id.js:75:19]
 74 │ class C {
 75 │   static *method([...x, y]) {
    ·                   ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-ary-ptrn-rest-not-final-obj.js:75:19]
 74 │ class C {
 75 │   static *method([...{ x }, y]) {
    ·                   ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:75:22]
 74 │ class C {
 75 │   static *method([...[ x ] = []] = []) {
    ·                      ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-id.js:75:22]
 74 │ class C {
 75 │   static *method([...x = []] = []) {
    ·                      ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:75:22]
 74 │ class C {
 75 │   static *method([...{ x } = []] = []) {
    ·                      ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:75:19]
 74 │ class C {
 75 │   static *method([...[x], y] = [1, 2, 3]) {
    ·                   ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:75:19]
 74 │ class C {
 75 │   static *method([...x, y] = [1, 2, 3]) {
    ·                   ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:75:19]
 74 │ class C {
 75 │   static *method([...{ x }, y] = [1, 2, 3]) {
    ·                   ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-init-ary.js:73:14]
 72 │ class C {
 73 │   method([...[ x ] = []]) {
    ·              ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-init-id.js:73:14]
 72 │ class C {
 73 │   method([...x = []]) {
    ·              ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-init-obj.js:73:14]
 72 │ class C {
 73 │   method([...{ x } = []]) {
    ·              ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-not-final-ary.js:73:11]
 72 │ class C {
 73 │   method([...[x], y]) {
    ·           ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-not-final-id.js:73:11]
 72 │ class C {
 73 │   method([...x, y]) {
    ·           ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-ary-ptrn-rest-not-final-obj.js:73:11]
 72 │ class C {
 73 │   method([...{ x }, y]) {
    ·           ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-init-ary.js:73:14]
 72 │ class C {
 73 │   method([...[ x ] = []] = []) {
    ·              ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-init-id.js:73:14]
 72 │ class C {
 73 │   method([...x = []] = []) {
    ·              ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-init-obj.js:73:14]
 72 │ class C {
 73 │   method([...{ x } = []] = []) {
    ·              ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-not-final-ary.js:73:11]
 72 │ class C {
 73 │   method([...[x], y] = [1, 2, 3]) {
    ·           ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-not-final-id.js:73:11]
 72 │ class C {
 73 │   method([...x, y] = [1, 2, 3]) {
    ·           ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-dflt-ary-ptrn-rest-not-final-obj.js:73:11]
 72 │ class C {
 73 │   method([...{ x }, y] = [1, 2, 3]) {
    ·           ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-init-ary.js:73:21]
 72 │ class C {
 73 │   static method([...[ x ] = []]) {
    ·                     ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-init-id.js:73:21]
 72 │ class C {
 73 │   static method([...x = []]) {
    ·                     ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-init-obj.js:73:21]
 72 │ class C {
 73 │   static method([...{ x } = []]) {
    ·                     ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-not-final-ary.js:73:18]
 72 │ class C {
 73 │   static method([...[x], y]) {
    ·                  ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-not-final-id.js:73:18]
 72 │ class C {
 73 │   static method([...x, y]) {
    ·                  ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-ary-ptrn-rest-not-final-obj.js:73:18]
 72 │ class C {
 73 │   static method([...{ x }, y]) {
    ·                  ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-init-ary.js:73:21]
 72 │ class C {
 73 │   static method([...[ x ] = []] = []) {
    ·                     ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-init-id.js:73:21]
 72 │ class C {
 73 │   static method([...x = []] = []) {
    ·                     ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-init-obj.js:73:21]
 72 │ class C {
 73 │   static method([...{ x } = []] = []) {
    ·                     ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-ary.js:73:18]
 72 │ class C {
 73 │   static method([...[x], y] = [1, 2, 3]) {
    ·                  ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-id.js:73:18]
 72 │ class C {
 73 │   static method([...x, y] = [1, 2, 3]) {
    ·                  ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/meth-static-dflt-ary-ptrn-rest-not-final-obj.js:73:18]
 72 │ class C {
 73 │   static method([...{ x }, y] = [1, 2, 3]) {
    ·                  ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-init-ary.js:75:17]
 74 │ class C {
 75 │   * #method([...[ x ] = []]) {
    ·                 ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-init-id.js:75:17]
 74 │ class C {
 75 │   * #method([...x = []]) {
    ·                 ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-init-obj.js:75:17]
 74 │ class C {
 75 │   * #method([...{ x } = []]) {
    ·                 ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-ary.js:75:14]
 74 │ class C {
 75 │   * #method([...[x], y]) {
    ·              ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-id.js:75:14]
 74 │ class C {
 75 │   * #method([...x, y]) {
    ·              ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-ary-ptrn-rest-not-final-obj.js:75:14]
 74 │ class C {
 75 │   * #method([...{ x }, y]) {
    ·              ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-ary.js:75:17]
 74 │ class C {
 75 │   * #method([...[ x ] = []] = []) {
    ·                 ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-id.js:75:17]
 74 │ class C {
 75 │   * #method([...x = []] = []) {
    ·                 ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-init-obj.js:75:17]
 74 │ class C {
 75 │   * #method([...{ x } = []] = []) {
    ·                 ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-ary.js:75:14]
 74 │ class C {
 75 │   * #method([...[x], y] = [1, 2, 3]) {
    ·              ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-id.js:75:14]
 74 │ class C {
 75 │   * #method([...x, y] = [1, 2, 3]) {
    ·              ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-dflt-ary-ptrn-rest-not-final-obj.js:75:14]
 74 │ class C {
 75 │   * #method([...{ x }, y] = [1, 2, 3]) {
    ·              ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-ary.js:75:24]
 74 │ class C {
 75 │   static * #method([...[ x ] = []]) {
    ·                        ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-id.js:75:24]
 74 │ class C {
 75 │   static * #method([...x = []]) {
    ·                        ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-init-obj.js:75:24]
 74 │ class C {
 75 │   static * #method([...{ x } = []]) {
    ·                        ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-ary.js:75:21]
 74 │ class C {
 75 │   static * #method([...[x], y]) {
    ·                     ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-id.js:75:21]
 74 │ class C {
 75 │   static * #method([...x, y]) {
    ·                     ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-ary-ptrn-rest-not-final-obj.js:75:21]
 74 │ class C {
 75 │   static * #method([...{ x }, y]) {
    ·                     ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-ary.js:75:24]
 74 │ class C {
 75 │   static * #method([...[ x ] = []] = []) {
    ·                        ──────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-id.js:75:24]
 74 │ class C {
 75 │   static * #method([...x = []] = []) {
    ·                        ──────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-init-obj.js:75:24]
 74 │ class C {
 75 │   static * #method([...{ x } = []] = []) {
    ·                        ──────────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:75:21]
 74 │ class C {
 75 │   static * #method([...[x], y] = [1, 2, 3]) {
    ·                     ──────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-id.js:75:21]
 74 │ class C {
 75 │   static * #method([...x, y] = [1, 2, 3]) {
    ·                     ────
 76 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-gen-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:75:21]
 74 │ class C {
 75 │   static * #method([...{ x }, y] = [1, 2, 3]) {
    ·                     ────────
 76 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-init-ary.js:73:15]
 72 │ class C {
 73 │   #method([...[ x ] = []]) {
    ·               ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-init-id.js:73:15]
 72 │ class C {
 73 │   #method([...x = []]) {
    ·               ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-init-obj.js:73:15]
 72 │ class C {
 73 │   #method([...{ x } = []]) {
    ·               ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-not-final-ary.js:73:12]
 72 │ class C {
 73 │   #method([...[x], y]) {
    ·            ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-not-final-id.js:73:12]
 72 │ class C {
 73 │   #method([...x, y]) {
    ·            ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-ary-ptrn-rest-not-final-obj.js:73:12]
 72 │ class C {
 73 │   #method([...{ x }, y]) {
    ·            ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-init-ary.js:73:15]
 72 │ class C {
 73 │   #method([...[ x ] = []] = []) {
    ·               ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-init-id.js:73:15]
 72 │ class C {
 73 │   #method([...x = []] = []) {
    ·               ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-init-obj.js:73:15]
 72 │ class C {
 73 │   #method([...{ x } = []] = []) {
    ·               ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-ary.js:73:12]
 72 │ class C {
 73 │   #method([...[x], y] = [1, 2, 3]) {
    ·            ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-id.js:73:12]
 72 │ class C {
 73 │   #method([...x, y] = [1, 2, 3]) {
    ·            ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-dflt-ary-ptrn-rest-not-final-obj.js:73:12]
 72 │ class C {
 73 │   #method([...{ x }, y] = [1, 2, 3]) {
    ·            ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-init-ary.js:73:22]
 72 │ class C {
 73 │   static #method([...[ x ] = []]) {
    ·                      ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-init-id.js:73:22]
 72 │ class C {
 73 │   static #method([...x = []]) {
    ·                      ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-init-obj.js:73:22]
 72 │ class C {
 73 │   static #method([...{ x } = []]) {
    ·                      ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-not-final-ary.js:73:19]
 72 │ class C {
 73 │   static #method([...[x], y]) {
    ·                   ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-not-final-id.js:73:19]
 72 │ class C {
 73 │   static #method([...x, y]) {
    ·                   ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-ary-ptrn-rest-not-final-obj.js:73:19]
 72 │ class C {
 73 │   static #method([...{ x }, y]) {
    ·                   ────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-ary.js:73:22]
 72 │ class C {
 73 │   static #method([...[ x ] = []] = []) {
    ·                      ──────────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-id.js:73:22]
 72 │ class C {
 73 │   static #method([...x = []] = []) {
    ·                      ──────
 74 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-init-obj.js:73:22]
 72 │ class C {
 73 │   static #method([...{ x } = []] = []) {
    ·                      ──────────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-ary.js:73:19]
 72 │ class C {
 73 │   static #method([...[x], y] = [1, 2, 3]) {
    ·                   ──────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-id.js:73:19]
 72 │ class C {
 73 │   static #method([...x, y] = [1, 2, 3]) {
    ·                   ────
 74 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/class/dstr/private-meth-static-dflt-ary-ptrn-rest-not-final-obj.js:73:19]
 72 │ class C {
 73 │   static #method([...{ x }, y] = [1, 2, 3]) {
    ·                   ────────
 74 │     
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/arrow-fnc-init-err-contains-arguments.js:34:13]
 33 │ class C {
 34 │   x = () => arguments;
    ·             ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/arrow-fnc-init-err-contains-super.js:27:13]
 26 │ class C {
 27 │   x = () => super();
    ·             ───────
 28 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-binding-identifier.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var await;
    ·         ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *#gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-identifier-reference-escaped.js:36:20]
 35 │ class C { async *#gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-identifier-reference.js:36:15]
 35 │ class C { async *#gen() {
 36 │     void await;
    ·               ─
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-label-identifier-escaped.js:36:5]
 35 │ class C { async *#gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-label-identifier-escaped.js:36:15]
 35 │ class C { async *#gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/await-as-label-identifier.js:36:10]
 35 │ class C { async *#gen() {
 36 │     await: ;
    ·          ─
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-binding-identifier.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-binding-identifier.js:36:9]
 35 │ class C { async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-identifier-reference.js:36:10]
 35 │ class C { async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-identifier-reference.js:36:10]
 35 │ class C { async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-label-identifier-escaped.js:36:5]
 35 │ class C { async *#gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-label-identifier-escaped.js:36:15]
 35 │ class C { async *#gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-as-label-identifier.js:36:10]
 35 │ class C { async *#gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-identifier-spread-strict.js:43:21]
 42 │              ...(function() {
 43 │                 var yield;
    ·                     ─────
 44 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method/yield-identifier-strict.js:35:17]
 34 │         (function() {
 35 │             var yield;
    ·                 ─────
 36 │             throw new Test262Error();
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var \u0061wait;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-binding-identifier.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var await;
    ·         ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     void \u0061wait;
    ·          ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-identifier-reference-escaped.js:36:20]
 35 │ class C { static async *#gen() {
 36 │     void \u0061wait;
    ·                    ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-identifier-reference.js:36:15]
 35 │ class C { static async *#gen() {
 36 │     void await;
    ·               ─
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-label-identifier-escaped.js:36:5]
 35 │ class C { static async *#gen() {
 36 │     \u0061wait: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-label-identifier-escaped.js:36:15]
 35 │ class C { static async *#gen() {
 36 │     \u0061wait: ;
    ·               ─
 37 │ }}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/await-as-label-identifier.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     await: ;
    ·          ─
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-binding-identifier-escaped.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var yi\u0065ld;
    ·         ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-binding-identifier.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-binding-identifier.js:36:9]
 35 │ class C { static async *#gen() {
 36 │     var yield;
    ·         ─────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-identifier-reference-escaped.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     void yi\u0065ld;
    ·          ──────────
 37 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-identifier-reference.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-identifier-reference.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     void yield;
    ·          ─────
 37 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-label-identifier-escaped.js:36:5]
 35 │ class C { static async *#gen() {
 36 │     yi\u0065ld: ;
    ·     ──────────
 37 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-label-identifier-escaped.js:36:15]
 35 │ class C { static async *#gen() {
 36 │     yi\u0065ld: ;
    ·               ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-as-label-identifier.js:36:10]
 35 │ class C { static async *#gen() {
 36 │     yield: ;
    ·          ▲
 37 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-identifier-spread-strict.js:43:21]
 42 │              ...(function() {
 43 │                 var yield;
    ·                     ─────
 44 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/async-gen-private-method-static/yield-identifier-strict.js:35:17]
 34 │         (function() {
 35 │             var yield;
    ·                 ─────
 36 │             throw new Test262Error();
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-binding-identifier-escaped.js:37:9]
 36 │   async #method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-binding-identifier.js:37:9]
 36 │   async #method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-identifier-reference-escaped.js:37:10]
 36 │   async #method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-identifier-reference-escaped.js:37:20]
 36 │   async #method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-identifier-reference.js:37:15]
 36 │   async #method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-label-identifier-escaped.js:37:5]
 36 │   async #method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-label-identifier-escaped.js:37:15]
 36 │   async #method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method/await-as-label-identifier.js:37:10]
 36 │   async #method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-binding-identifier-escaped.js:37:9]
 36 │   static async #method() {
 37 │     var \u0061wait;
    ·         ──────────
 38 │   }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-binding-identifier.js:37:9]
 36 │   static async #method() {
 37 │     var await;
    ·         ─────
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-identifier-reference-escaped.js:37:10]
 36 │   static async #method() {
 37 │     void \u0061wait;
    ·          ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-identifier-reference-escaped.js:37:20]
 36 │   static async #method() {
 37 │     void \u0061wait;
    ·                    ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-identifier-reference.js:37:15]
 36 │   static async #method() {
 37 │     void await;
    ·               ─
 38 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-label-identifier-escaped.js:37:5]
 36 │   static async #method() {
 37 │     \u0061wait: ;
    ·     ──────────
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-label-identifier-escaped.js:37:15]
 36 │   static async #method() {
 37 │     \u0061wait: ;
    ·               ─
 38 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/async-private-method-static/await-as-label-identifier.js:37:10]
 36 │   static async #method() {
 37 │     await: ;
    ·          ─
 38 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/comp-name-init-err-contains-arguments.js:35:9]
 34 │ class C {
 35 │   [x] = arguments;
    ·         ─────────
 36 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/comp-name-init-err-contains-super.js:28:9]
 27 │ class C {
 28 │   [x] = super();
    ·         ───────
 29 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/equality-init-err-contains-arguments.js:34:13]
 33 │ class C {
 34 │   x = {} == arguments;
    ·             ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/equality-init-err-contains-super.js:27:13]
 26 │ class C {
 27 │   x = {} == super();
    ·             ───────
 28 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/fields-asi-3.js:18:8]
 17 │   x = "string"
 18 │   [0]() {}
    ·        ▲
 19 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/fields-asi-4.js:18:9]
 17 │   x = 42
 18 │   *gen() {}
    ·         ▲
 19 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/fields-asi-same-line-1.js:17:8]
 16 │ class C {
 17 │   field /* no ASI here */ method(){}
    ·        ▲
 18 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/fields-asi-same-line-2.js:17:12]
 16 │ class C {
 17 │   field = 1 /* no ASI here */ method(){}
    ·            ▲
 18 │ }
    ╰────
  help: Try insert a semicolon here

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/elements/fields-duplicate-privatenames.js:23:3]
 22 │ class C {
 23 │   #x;
    ·   ─┬
    ·    ╰── `x` has already been declared here
 24 │   #x;
    ·   ─┬
    ·    ╰── It can not be redeclared here
 25 │ }
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/statements/class/elements/fields-literal-name-propname-constructor.js:29:3]
 28 │ class C {
 29 │   constructor;
    ·   ───────────
 30 │ }
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/statements/class/elements/fields-literal-name-static-propname-constructor.js:29:10]
 28 │ class C {
 29 │   static constructor;
    ·          ───────────
 30 │ }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/fields-literal-name-static-propname-prototype.js:29:10]
 28 │ class C {
 29 │   static prototype;
    ·          ─────────
 30 │ }
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/statements/class/elements/fields-string-name-propname-constructor.js:30:3]
 29 │ class C {
 30 │   'constructor';
    ·   ─────────────
 31 │ }
    ╰────

  × Classes can't have a field named 'constructor'
    ╭─[test262/test/language/statements/class/elements/fields-string-name-static-propname-constructor.js:30:10]
 29 │ class C {
 30 │   static 'constructor';
    ·          ─────────────
 31 │ }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/fields-string-name-static-propname-prototype.js:30:10]
 29 │ class C {
 30 │   static 'prototype';
    ·          ───────────
 31 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C { *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C { *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-binding-identifier.js:35:9]
 34 │ class C { *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-binding-identifier.js:35:9]
 34 │ class C { *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C { *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C { *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-identifier-reference.js:35:10]
 34 │ class C { *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-identifier-reference.js:35:10]
 34 │ class C { *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-label-identifier-escaped.js:35:5]
 34 │ class C { *#gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-label-identifier-escaped.js:35:15]
 34 │ class C { *#gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-as-label-identifier.js:35:10]
 34 │ class C { *#gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-identifier-spread-strict.js:42:21]
 41 │              ...(function() {
 42 │                 var yield;
    ·                     ─────
 43 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method/yield-identifier-strict.js:34:17]
 33 │         (function() {
 34 │             var yield;
    ·                 ─────
 35 │             throw new Test262Error();
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C {static *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C {static *#gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-binding-identifier.js:35:9]
 34 │ class C {static *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-binding-identifier.js:35:9]
 34 │ class C {static *#gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C {static *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C {static *#gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-identifier-reference.js:35:10]
 34 │ class C {static *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-identifier-reference.js:35:10]
 34 │ class C {static *#gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-label-identifier-escaped.js:35:5]
 34 │ class C {static *#gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-label-identifier-escaped.js:35:15]
 34 │ class C {static *#gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-as-label-identifier.js:35:10]
 34 │ class C {static *#gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-identifier-spread-strict.js:42:21]
 41 │              ...(function() {
 42 │                 var yield;
    ·                     ─────
 43 │                 throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/elements/gen-private-method-static/yield-identifier-strict.js:34:17]
 33 │         (function() {
 34 │             var yield;
    ·                 ─────
 35 │             throw new Test262Error();
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/literal-name-init-err-contains-arguments.js:34:7]
 33 │ class C {
 34 │   x = arguments;
    ·       ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/literal-name-init-err-contains-super.js:27:7]
 26 │ class C {
 27 │   x = super();
    ·       ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-arrow-fnc-init-err-contains-arguments.js:35:19]
 34 │   x = () => {
 35 │     var t = () => arguments;
    ·                   ─────────
 36 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-arrow-fnc-init-err-contains-super.js:28:19]
 27 │   x = () => {
 28 │     var t = () => super();
    ·                   ───────
 29 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-comp-name-init-err-contains-arguments.js:34:15]
 33 │ class C {
 34 │   [x] = () => arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-comp-name-init-err-contains-super.js:27:15]
 26 │ class C {
 27 │   [x] = () => super();
    ·               ───────
 28 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/nested-equality-init-err-contains-arguments.js:33:15]
 32 │ class C {
 33 │   x = () => {} == arguments;
    ·               ▲
 34 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/nested-equality-init-err-contains-super.js:26:15]
 25 │ class C {
 26 │   x = () => {} == super();
    ·               ▲
 27 │ }
    ╰────
  help: Try insert a semicolon here

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-literal-name-init-err-contains-arguments.js:33:13]
 32 │ class C {
 33 │   x = () => arguments;
    ·             ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-literal-name-init-err-contains-super.js:26:13]
 25 │ class C {
 26 │   x = () => super();
    ·             ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-private-arrow-fnc-init-err-contains-arguments.js:35:19]
 34 │   #x = () => {
 35 │     var t = () => arguments;
    ·                   ─────────
 36 │     t();
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-private-arrow-fnc-init-err-contains-super.js:28:19]
 27 │   #x = () => {
 28 │     var t = () => super();
    ·                   ───────
 29 │     t();
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-private-literal-name-init-err-contains-arguments.js:33:14]
 32 │ class C {
 33 │   #x = () => arguments;
    ·              ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-private-literal-name-init-err-contains-super.js:26:14]
 25 │ class C {
 26 │   #x = () => super();
    ·              ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-private-ternary-init-err-contains-arguments.js:33:27]
 32 │ class C {
 33 │   #x = () => false ? {} : arguments;
    ·                           ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-private-ternary-init-err-contains-super.js:26:27]
 25 │ class C {
 26 │   #x = () => false ? {} : super();
    ·                           ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-private-typeof-init-err-contains-arguments.js:33:21]
 32 │ class C {
 33 │   #x = () => typeof arguments;
    ·                     ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-private-typeof-init-err-contains-super.js:26:21]
 25 │ class C {
 26 │   #x = () => typeof super();
    ·                     ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-static-comp-name-init-err-contains-arguments.js:34:22]
 33 │ class C {
 34 │   static [x] = () => arguments;
    ·                      ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-static-comp-name-init-err-contains-super.js:27:22]
 26 │ class C {
 27 │   static [x] = () => super();
    ·                      ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-static-literal-init-err-contains-arguments.js:33:20]
 32 │ class C {
 33 │   static x = () => arguments;
    ·                    ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-static-literal-init-err-contains-super.js:26:20]
 25 │ class C {
 26 │   static x = () => super();
    ·                    ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-static-private-init-err-contains-arguments.js:33:21]
 32 │ class C {
 33 │   static #x = () => arguments;
    ·                     ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-static-private-init-err-contains-super.js:26:21]
 25 │ class C {
 26 │   static #x = () => super();
    ·                     ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-static-string-literal-name-init-err-contains-arguments.js:33:22]
 32 │ class C {
 33 │   static 'x' = () => arguments;
    ·                      ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-static-string-literal-name-init-err-contains-super.js:26:22]
 25 │ class C {
 26 │   static 'x' = () => super();
    ·                      ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-string-literal-name-init-err-contains-arguments.js:33:15]
 32 │ class C {
 33 │   'x' = () => arguments;
    ·               ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-string-literal-name-init-err-contains-super.js:26:15]
 25 │ class C {
 26 │   'x' = () => super();
    ·               ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-ternary-init-err-contains-arguments.js:33:26]
 32 │ class C {
 33 │   x = () => false ? {} : arguments;
    ·                          ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-ternary-init-err-contains-super.js:26:26]
 25 │ class C {
 26 │   x = () => false ? {} : super();
    ·                          ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/nested-typeof-init-err-contains-arguments.js:33:20]
 32 │ class C {
 33 │   x = () => typeof arguments;
    ·                    ─────────
 34 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/nested-typeof-init-err-contains-super.js:26:20]
 25 │ class C {
 26 │   x = () => typeof super();
    ·                    ───────
 27 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/private-arrow-fnc-init-err-contains-arguments.js:34:14]
 33 │ class C {
 34 │   #x = () => arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/private-arrow-fnc-init-err-contains-super.js:27:14]
 26 │ class C {
 27 │   #x = () => super();
    ·              ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/private-literal-name-init-err-contains-arguments.js:34:8]
 33 │ class C {
 34 │   #x = arguments;
    ·        ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/private-literal-name-init-err-contains-super.js:27:8]
 26 │ class C {
 27 │   #x = super();
    ·        ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/private-ternary-init-err-contains-arguments.js:34:21]
 33 │ class C {
 34 │   #x = false ? {} : arguments;
    ·                     ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/private-ternary-init-err-contains-super.js:27:21]
 26 │ class C {
 27 │   #x = false ? {} : super();
    ·                     ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/private-typeof-init-err-contains-arguments.js:34:15]
 33 │ class C {
 34 │   #x = typeof arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/private-typeof-init-err-contains-super.js:27:15]
 26 │ class C {
 27 │   #x = typeof super();
    ·               ───────
 28 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-1.js:23:10]
 22 │   constructor() {
 23 │     this.#x;
    ·          ──
 24 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-2.js:23:10]
 22 │   f() {
 23 │     this.#x;
    ·          ──
 24 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-3.js:22:12]
 21 │ class C {
 22 │   y = this.#x;
    ·            ──
 23 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-4.js:23:10]
 22 │   f() {
 23 │     this.#x;
    ·          ──
 24 │     class D extends C {
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-5.js:25:9]
 24 │ 
 25 │ new C().#x;
    ·         ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-6.js:23:9]
 22 │ 
 23 │ new C().#x;
    ·         ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-7.js:23:5]
 22 │ 
 23 │ obj.#x;
    ·     ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/class/elements/privatename-not-valid-earlyerr-script-8.js:22:8]
 21 │ function f() {
 22 │   this.#x;
    ·        ──
 23 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/static-comp-name-init-err-contains-arguments.js:35:16]
 34 │ class C {
 35 │   static [x] = arguments;
    ·                ─────────
 36 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/static-comp-name-init-err-contains-super.js:28:16]
 27 │ class C {
 28 │   static [x] = super();
    ·                ───────
 29 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/static-literal-init-err-contains-arguments.js:34:14]
 33 │ class C {
 34 │   static x = arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/static-literal-init-err-contains-super.js:27:14]
 26 │ class C {
 27 │   static x = super();
    ·              ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/static-private-init-err-contains-arguments.js:34:15]
 33 │ class C {
 34 │   static #x = arguments;
    ·               ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/static-private-init-err-contains-super.js:27:15]
 26 │ class C {
 27 │   static #x = super();
    ·               ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/static-string-literal-name-init-err-contains-arguments.js:34:16]
 33 │ class C {
 34 │   static 'x' = arguments;
    ·                ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/static-string-literal-name-init-err-contains-super.js:27:16]
 26 │ class C {
 27 │   static 'x' = super();
    ·                ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/string-literal-name-init-err-contains-arguments.js:34:9]
 33 │ class C {
 34 │   'x' = arguments;
    ·         ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/string-literal-name-init-err-contains-super.js:27:9]
 26 │ class C {
 27 │   'x' = super();
    ·         ───────
 28 │ }
    ╰────

  × Empty parenthesized expression
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/class-heritage-array-literal-arrow-heritage.js:24:17]
 23 │ 
 24 │ class C extends () => {} {
    ·                 ──
 25 │   
    ╰────

  × Expected `{` but found `=>`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/class-heritage-array-literal-async-arrow-heritage.js:24:26]
 23 │ 
 24 │ class C extends async () => {} {
    ·                          ─┬
    ·                           ╰── `{` expected
 25 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-get.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-get.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-set.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-accessor-set.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async-gen.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async-gen.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-async.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-gen.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method-gen.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-method.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-no-reference.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·               ──────
 39 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-private-no-reference.js:38:19]
 37 │   g = this.f;
 38 │   x = delete (g().#m);
    ·                   ──
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-call-expression-privatename.js:38:15]
 37 │   g = this.f;
 38 │   x = delete (g().#x);
    ·               ──────
 39 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-get.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-get.js:38:20]
 37 │   
 38 │   x = delete (this.#m
    ·                    ──
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-set.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-accessor-set.js:38:20]
 37 │   
 38 │   x = delete (this.#m
    ·                    ──
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-async-gen.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-async.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method-gen.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method.js:38:15]
 37 │   
 38 │   x = delete (this.#m
    ·               ───────
 39 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-method.js:38:20]
 37 │   
 38 │   x = delete (this.#m
    ·                    ──
 39 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-no-reference.js:38:15]
 37 │   
 38 │   x = delete (this.#m);
    ·               ───────
 39 │   
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-private-no-reference.js:38:20]
 37 │   
 38 │   x = delete (this.#m);
    ·                    ──
 39 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-covered-err-delete-member-expression-privatename.js:38:15]
 37 │   
 38 │   x = delete (this.#x);
    ·               ───────
 39 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-get.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-get.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-set.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-accessor-set.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async-gen.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async-gen.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-async.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-gen.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method-gen.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-method.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-no-reference.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·              ──────
 36 │   f() {
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-private-no-reference.js:35:18]
 34 │   g = this.f;
 35 │   x = delete g().#m;
    ·                  ──
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-call-expression-privatename.js:35:14]
 34 │   g = this.f;
 35 │   x = delete g().#x;
    ·              ──────
 36 │   f() {
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-get.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-get.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-set.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-accessor-set.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-async-gen.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-async.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method-gen.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method.js:35:14]
 34 │   
 35 │   x = delete this.#m
    ·              ───────
 36 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-method.js:35:19]
 34 │   
 35 │   x = delete this.#m
    ·                   ──
 36 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-no-reference.js:35:14]
 34 │   
 35 │   x = delete this.#m;
    ·              ───────
 36 │   
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-private-no-reference.js:35:19]
 34 │   
 35 │   x = delete this.#m;
    ·                   ──
 36 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-err-delete-member-expression-privatename.js:35:14]
 34 │   
 35 │   x = delete this.#x;
    ·              ───────
 36 │   
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-async.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-gen.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method-gen.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-method.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-no-reference.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                ──────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-private-no-reference.js:38:20]
 37 │   g = this.f;
 38 │   x = delete ((g().#m));
    ·                    ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-call-expression-privatename.js:38:16]
 37 │   g = this.f;
 38 │   x = delete ((g().#x));
    ·                ──────
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:38:21]
 37 │   
 38 │   x = delete ((this.#m
    ·                     ──
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:38:21]
 37 │   
 38 │   x = delete ((this.#m
    ·                     ──
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-async-gen.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-async.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method-gen.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method.js:38:16]
 37 │   
 38 │   x = delete ((this.#m
    ·                ───────
 39 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-method.js:38:21]
 37 │   
 38 │   x = delete ((this.#m
    ·                     ──
 39 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-no-reference.js:38:16]
 37 │   
 38 │   x = delete ((this.#m));
    ·                ───────
 39 │ 
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-private-no-reference.js:38:21]
 37 │   
 38 │   x = delete ((this.#m));
    ·                     ──
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/field-delete-twice-covered-err-delete-member-expression-privatename.js:38:16]
 37 │   
 38 │   x = delete ((this.#x));
    ·                ───────
 39 │ 
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-get.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-get.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-set.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-accessor-set.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async-gen.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async-gen.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-async.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-gen.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method-gen.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-method.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-no-reference.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·             ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-private-no-reference.js:43:17]
 42 │     var g = this.f;
 43 │     delete (g().#m);
    ·                 ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-call-expression-privatename.js:43:13]
 42 │     var g = this.f;
 43 │     delete (g().#x);
    ·             ──────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-get.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-get.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-set.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-accessor-set.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-async-gen.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-async.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method-gen.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method.js:43:13]
 42 │     
 43 │     delete (this.#m
    ·             ───────
 44 │ );
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-method.js:43:18]
 42 │     
 43 │     delete (this.#m
    ·                  ──
 44 │ );
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-no-reference.js:43:13]
 42 │     
 43 │     delete (this.#m);
    ·             ───────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-private-no-reference.js:43:18]
 42 │     
 43 │     delete (this.#m);
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-covered-err-delete-member-expression-privatename.js:43:13]
 42 │     
 43 │     delete (this.#x);
    ·             ───────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-get.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-get.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-set.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-accessor-set.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async-gen.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async-gen.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-async.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-gen.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method-gen.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-method.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-no-reference.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·            ──────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-private-no-reference.js:37:16]
 36 │     var g = this.f;
 37 │     delete g().#m;
    ·                ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-call-expression-privatename.js:37:12]
 36 │     var g = this.f;
 37 │     delete g().#x;
    ·            ──────
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-get.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-get.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-set.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-accessor-set.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-async-gen.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-async.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method-gen.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method.js:37:12]
 36 │     
 37 │     delete this.#m
    ·            ───────
 38 │ ;
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-method.js:37:17]
 36 │     
 37 │     delete this.#m
    ·                 ──
 38 │ ;
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-no-reference.js:37:12]
 36 │     
 37 │     delete this.#m;
    ·            ───────
 38 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-private-no-reference.js:37:17]
 36 │     
 37 │     delete this.#m;
    ·                 ──
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-err-delete-member-expression-privatename.js:37:12]
 36 │     
 37 │     delete this.#x;
    ·            ───────
 38 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-get.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-accessor-set.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async-gen.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-async.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-gen.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method-gen.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-method.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-no-reference.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·              ──────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-private-no-reference.js:43:18]
 42 │     var g = this.f;
 43 │     delete ((g().#m));
    ·                  ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-call-expression-privatename.js:43:14]
 42 │     var g = this.f;
 43 │     delete ((g().#x));
    ·              ──────
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-get.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-accessor-set.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-async-gen.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-async.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method-gen.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method.js:43:14]
 42 │     
 43 │     delete ((this.#m
    ·              ───────
 44 │ ));
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-method.js:43:19]
 42 │     
 43 │     delete ((this.#m
    ·                   ──
 44 │ ));
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-no-reference.js:43:14]
 42 │     
 43 │     delete ((this.#m));
    ·              ───────
 44 │   }
    ╰────

  × Private field 'm' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-private-no-reference.js:43:19]
 42 │     
 43 │     delete ((this.#m));
    ·                   ──
 44 │   }
    ╰────

  × Private fields can not be deleted
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/delete/method-delete-twice-covered-err-delete-member-expression-privatename.js:43:14]
 42 │     
 43 │     delete ((this.#x));
    ·              ───────
 44 │   }
    ╰────

  × Multiple constructor implementations are not allowed.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-class-body-ctor-duplicate.js:24:3]
 23 │ class C {
 24 │   constructor() {}
    ·   ─────┬─────
    ·        ╰── constructor has already been declared here
 25 │   constructor() {}
    ·   ─────┬─────
    ·        ╰── it cannot be redeclared here
 26 │ }
    ╰────

  × 'super' can only be referenced in a derived class.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-ctor-super-no-heritage.js:26:1]
 25 │     
 26 │ ╭─▶ class C {
 27 │ │     constructor() {
 28 │ │       super();
    · │       ─────
 29 │ │     }
 30 │ ├─▶ }
    · ╰──── class does not have `extends`
    ╰────
  help: either remove this super, or extend the class

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-field-identifier-invalid-ues-error.js:70:9]
 69 │ class C {
 70 │   \u0000;
    ·         ▲
 71 │ }
    ╰────

  × Invalid Character `‍`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-field-identifier-invalid-zwj-error.js:70:9]
 69 │ class C {
 70 │   \u200D_ZWJ;
    ·         ▲
 71 │ }
    ╰────

  × Invalid Character `‌`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-field-identifier-invalid-zwnj-error.js:70:9]
 69 │ class C {
 70 │   \u200C_ZWNJ;
    ·         ▲
 71 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-fields-same-line-error.js:33:4]
 32 │ class C {
 33 │   x y
    ·    ▲
 34 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected `{` but found `=>`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-array-literal.js:37:21]
 36 │ 
 37 │ class C extends (o) => [o.#foo]
    ·                     ─┬
    ·                      ╰── `{` expected
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:62]
 36 │ 
 37 │ class C extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                              ────
 38 │ {
    ╰────

  × Private field 'bar' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:87]
 36 │ 
 37 │ class C extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                                                       ────
 38 │ {
    ╰────

  × Private field 'fuz' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-chained-usage.js:37:112]
 36 │ 
 37 │ class C extends class extends class extends class { x = this.#foo; } { #foo; x = this.#bar; } { #bar; x = this.#fuz; }
    ·                                                                                                                ────
 38 │ {
    ╰────

  × Private identifier '#foo' is not allowed outside class bodies
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-function-expression.js:37:39]
 36 │ 
 37 │ class C extends function() { x = this.#foo; }
    ·                                       ────
 38 │ {
    ╰────

  × Expected `{` but found `=>`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-obj-literal.js:37:21]
 36 │ 
 37 │ class C extends (o) => {x: o.#foo}
    ·                     ─┬
    ·                      ╰── `{` expected
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage-recursive.js:37:48]
 36 │ 
 37 │ class C extends class extends class { x = this.#foo; } {}
    ·                                                ────
 38 │ {
    ╰────

  × Private field 'foo' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-environment-on-class-heritage.js:37:34]
 36 │ 
 37 │ class C extends class { x = this.#foo; }
    ·                                  ────
 38 │ {
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-field-on-object-destructuring.js:31:13]
 30 │   destructureX() {
 31 │     const { #x: x } = this;
    ·             ──
 32 │   }
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-field-super-access.js:29:14]
 28 │     access() {
 29 │       return super.#m;
    ·              ────────
 30 │     }
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-private-field-super-access.js:33:14]
 32 │     method() {
 33 │       return super.#m();
    ·              ────────
 34 │     }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-async-gen.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   async * #m() {}
    ·           ─┬
    ·            ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-async.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   async #m() {}
    ·         ─┬
    ·          ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-gen.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   * #m() {}
    ·     ─┬
    ·      ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-get-field.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   get #m() {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-get-get.js:25:7]
 24 │ class C {
 25 │   get #m() {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   get #m() {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-field.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-get.js:25:7]
 24 │ class C {
 25 │   get #m() {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-meth.js:25:3]
 24 │ class C {
 25 │   #m() {}
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-set.js:25:7]
 24 │ class C {
 25 │   set #m(_) {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-staticfield.js:25:10]
 24 │ class C {
 25 │   static #m;
    ·          ─┬
    ·           ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-meth-staticmeth.js:25:10]
 24 │ class C {
 25 │   static #m() {}
    ·          ─┬
    ·           ╰── `m` has already been declared here
 26 │   #m() {}
    ·   ─┬
    ·    ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-set-field.js:25:3]
 24 │ class C {
 25 │   #m;
    ·   ─┬
    ·    ╰── `m` has already been declared here
 26 │   set #m(_) {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Identifier `m` has already been declared
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatemeth-duplicate-set-set.js:25:7]
 24 │ class C {
 25 │   set #m(_) {}
    ·       ─┬
    ·        ╰── `m` has already been declared here
 26 │   set #m(_) {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 27 │ }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-constructor.js:25:3]
 24 │ class C {
 25 │   #constructor
    ·   ────────────
 26 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-error.js:36:4]
 35 │ class C {
 36 │   # x
    ·    ─
 37 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-ues.js:64:10]
 63 │ class C {
 64 │   #\u0000;
    ·          ▲
 65 │ }
    ╰────

  × Invalid Character `‍`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-zwj-error.js:64:10]
 63 │ class C {
 64 │   #\u200D_ZWJ;
    ·          ▲
 65 │ 
    ╰────

  × Invalid Character `‌`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-identifier-invalid-zwnj-error.js:64:10]
 63 │ class C {
 64 │   #\u200C_ZWNJ;
    ·          ▲
 65 │ 
    ╰────

  × Private field 'f' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-in-computed-property-missing.js:52:9]
 51 │ class C {
 52 │   [this.#f] = 'Test262'
    ·         ──
 53 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-get-meth.js:29:8]
 28 │ class C {
 29 │   get # m() {}
    ·        ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-get-meth.js:29:6]
 28 │ class C {
 29 │   get # m() {}
    ·      ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-set-meth.js:29:8]
 28 │ class C {
 29 │   set # m(_) {}
    ·        ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-accessor-set-meth.js:29:6]
 28 │ class C {
 29 │   set # m(_) {}
    ·      ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-gen-meth.js:29:12]
 28 │ class C {
 29 │   async * # m() {}
    ·            ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-meth.js:29:10]
 28 │ class C {
 29 │   async # m() {}
    ·          ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-async-meth.js:29:8]
 28 │ class C {
 29 │   async # m() {}
    ·        ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-call-expr.js:38:15]
 37 │   m() {
 38 │     this.f().# x;
    ·               ─
 39 │   }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-field-init.js:29:4]
 28 │ class C {
 29 │   # x = 1;
    ·    ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-field.js:29:4]
 28 │ class C {
 29 │   # x;
    ·    ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-gen-meth.js:29:6]
 28 │ class C {
 29 │   * # m() {}
    ·      ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-member-expr.js:33:11]
 32 │   m() {
 33 │     this.# x;
    ·           ─
 34 │   }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-meth.case.js:29:4]
 28 │ class C {
 29 │   # m() {}
    ·    ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-get-meth.js:29:15]
 28 │ class C {
 29 │   static get # m() {}
    ·               ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-get-meth.js:29:13]
 28 │ class C {
 29 │   static get # m() {}
    ·             ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-set-meth.js:29:15]
 28 │ class C {
 29 │   static set # m(_) {}
    ·               ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-accessor-set-meth.js:29:13]
 28 │ class C {
 29 │   static set # m(_) {}
    ·             ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-gen-meth.js:29:19]
 28 │ class C {
 29 │   static async * # m() {}
    ·                   ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-meth.js:29:17]
 28 │ class C {
 29 │   static async # m() {}
    ·                 ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-async-meth.js:29:15]
 28 │ class C {
 29 │   static async # m() {}
    ·               ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field-init.js:29:11]
 28 │ class C {
 29 │   static # x = 1;
    ·           ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field-init.js:29:9]
 28 │ class C {
 29 │   static # x = 1;
    ·         ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field.js:29:11]
 28 │ class C {
 29 │   static # x;
    ·           ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-field.js:29:9]
 28 │ class C {
 29 │   static # x;
    ·         ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-gen-meth.js:29:13]
 28 │ class C {
 29 │   static * # m() {}
    ·             ─
 30 │ }
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-meth.js:29:11]
 28 │ class C {
 29 │   static # m() {}
    ·           ─
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatename-whitespace-error-static-meth.js:29:9]
 28 │ class C {
 29 │   static # m() {}
    ·         ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-privatenames-same-line-error.js:36:5]
 35 │ class C {
 36 │   #x #y
    ·     ▲
 37 │ }
    ╰────
  help: Try insert a semicolon here

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-async-gen.js:26:7]
 25 │   async * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-async.js:26:7]
 25 │   async method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-gen.js:26:7]
 25 │   * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-get.js:26:7]
 25 │   get method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-method.js:26:7]
 25 │   method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-async-gen.js:26:7]
 25 │   async * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-async.js:26:7]
 25 │   async #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-gen.js:26:7]
 25 │   * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-private-method.js:26:7]
 25 │   #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-contains-super-set.js:26:7]
 25 │   set method(_) {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Constructor can't be an async method
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-gen.js:25:11]
 24 │ class C {
 25 │   async * constructor() {}
    ·           ───────────
 26 │ }
    ╰────

  × Constructor can't be a generator
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-gen.js:25:11]
 24 │ class C {
 25 │   async * constructor() {}
    ·           ───────────
 26 │ }
    ╰────

  × Constructor can't be an async method
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-async-meth.js:25:9]
 24 │ class C {
 25 │   async constructor() {}
    ·         ───────────
 26 │ }
    ╰────

  × Constructor can't be a generator
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-gen.js:25:5]
 24 │ class C {
 25 │   * constructor() {}
    ·     ───────────
 26 │ }
    ╰────

  × Constructor can't have get/set modifier
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-get.js:25:7]
 24 │ class C {
 25 │   get constructor() {}
    ·       ───────────
 26 │ }
    ╰────

  × Constructor can't have get/set modifier
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-special-meth-ctor-set.js:25:7]
 24 │ class C {
 25 │   set constructor(_) {}
    ·       ───────────
 26 │ }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-async-gen-meth-prototype.js:25:18]
 24 │ class C {
 25 │   static async * prototype() {}
    ·                  ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-async-gen-meth-super.js:26:7]
 25 │   static async * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-async-meth-prototype.js:25:16]
 24 │ class C {
 25 │   static async prototype() {}
    ·                ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-async-meth-super.js:26:7]
 25 │   static async method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-gen-meth-prototype.js:25:12]
 24 │ class C {
 25 │   static * prototype() {}
    ·            ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-gen-meth-super.js:26:7]
 25 │   static * method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-prototype.js:25:14]
 24 │ class C {
 25 │   static get prototype() {}
    ·              ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-get-meth-super.js:26:7]
 25 │   static get method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-meth-prototype.js:25:10]
 24 │ class C {
 25 │   static prototype() {}
    ·          ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-meth-super.js:26:7]
 25 │   static method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-async-gen-meth-constructor.js:25:18]
 24 │ class C {
 25 │   static async * #constructor() {}
    ·                  ────────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-async-gen-meth-super.js:26:7]
 25 │   static async * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-async-meth-constructor.js:25:16]
 24 │ class C {
 25 │   static async #constructor() {}
    ·                ────────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-async-meth-super.js:26:7]
 25 │   static async #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-gen-meth-constructor.js:25:12]
 24 │ class C {
 25 │   static * #constructor() {}
    ·            ────────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-gen-meth-super.js:26:7]
 25 │   static * #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-meth-constructor.js:25:10]
 24 │ class C {
 25 │   static #constructor() {}
    ·          ────────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-private-meth-super.js:26:7]
 25 │   static #method() {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Classes can't have an element named '#constructor'
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-privatename-constructor.js:25:10]
 24 │ class C {
 25 │   static #constructor
    ·          ────────────
 26 │ }
    ╰────

  × Classes may not have a static property named prototype
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-prototype.js:25:14]
 24 │ class C {
 25 │   static set prototype(_) {}
    ·              ─────────
 26 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/grammar-static-set-meth-super.js:26:7]
 25 │   static set method(_) {
 26 │       super();
    ·       ───────
 27 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-call-expression-bad-reference.js:42:20]
 41 │ class C {
 42 │   f = (() => {})().#x
    ·                    ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-call-expression-this.js:42:22]
 41 │ class C {
 42 │   f = (() => this)().#x
    ·                      ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-fn-call-expression-bad-reference.js:42:33]
 41 │ class C {
 42 │   f = function() { (() => {})().#x }
    ·                                 ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-fn-call-expression-this.js:42:35]
 41 │ class C {
 42 │   f = function() { (() => this)().#x }
    ·                                   ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-fn-member-expression-bad-reference.js:42:30]
 41 │ class C {
 42 │   f = function() { something.#x }
    ·                              ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-fn-member-expression-this.js:42:25]
 41 │ class C {
 42 │   f = function() { this.#x }
    ·                         ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-member-expression-bad-reference.js:42:17]
 41 │ class C {
 42 │   f = something.#x
    ·                 ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/field-init-member-expression-this.js:42:12]
 41 │ class C {
 42 │   f = this.#x
    ·            ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/fields-init-heritage-call-expression-bad-reference.js:57:20]
 56 │ class C extends Parent {
 57 │   f = (() => {})().#x
    ·                    ──
 58 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/fields-init-heritage-call-expression-this.js:57:22]
 56 │ class C extends Parent {
 57 │   f = (() => this)().#x
    ·                      ──
 58 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/fields-init-heritage-member-expression-bad-reference.js:57:17]
 56 │ class C extends Parent {
 57 │   f = something.#x
    ·                 ──
 58 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/fields-init-heritage-member-expression-this.js:57:12]
 56 │ class C extends Parent {
 57 │   f = this.#x
    ·            ──
 58 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-call-expression-bad-reference.js:42:22]
 41 │ class C {
 42 │   m() { (() => {})().#x }
    ·                      ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-call-expression-this.js:42:24]
 41 │ class C {
 42 │   m() { (() => this)().#x }
    ·                        ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-fn-call-expression-bad-reference.js:43:34]
 42 │   m() {
 43 │     function fn() { (() => {})().#x }
    ·                                  ──
 44 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-fn-call-expression-this.js:43:36]
 42 │   m() {
 43 │     function fn() { (() => this)().#x }
    ·                                    ──
 44 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-fn-member-expression-bad-reference.js:43:31]
 42 │   m() {
 43 │     function fn() { something.#x }
    ·                               ──
 44 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-fn-member-expression-this.js:43:26]
 42 │   m() {
 43 │     function fn() { this.#x }
    ·                          ──
 44 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-heritage-call-expression-bad-reference.js:57:18]
 56 │   m() {
 57 │     (() => {})().#x
    ·                  ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-heritage-call-expression-this.js:57:20]
 56 │   m() {
 57 │     (() => this)().#x
    ·                    ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-heritage-member-expression-bad-reference.js:57:15]
 56 │   m() {
 57 │     something.#x
    ·               ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-heritage-member-expression-this.js:57:10]
 56 │   m() {
 57 │     this.#x
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-member-expression-bad-reference.js:42:19]
 41 │ class C {
 42 │   m() { something.#x }
    ·                   ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-member-expression-this.js:42:14]
 41 │ class C {
 42 │   m() { this.#x }
    ·              ──
 43 │ }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-outter-call-expression-bad-reference.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-outter-call-expression-this.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-outter-member-expression-bad-reference.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Private field 'x' must be declared in an enclosing class
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/invalid-names/method-outter-member-expression-this.js:57:10]
 56 │ 
 57 │     this.#x;
    ·          ──
 58 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-async-generator-cannot-escape-token.js:25:17]
 24 │ class C {
 25 │   async * \u0023m() { return 42; }
    ·                 ▲
 26 │ }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-async-method-cannot-escape-token.js:25:15]
 24 │ class C {
 25 │   async \u0023m() { return 42; }
    ·               ▲
 26 │ }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-call-exp-cannot-escape-token.js:32:17]
 31 │   method() {
 32 │     foo().\u0023field;
    ·                 ▲
 33 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-field-cannot-escape-token.js:25:9]
 24 │ class C {
 25 │   \u0023field;
    ·         ▲
 26 │ }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-generator-cannot-escape-token.js:25:11]
 24 │ class C {
 25 │   * \u0023m() { return 42; }
    ·           ▲
 26 │ }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-member-exp-cannot-escape-token.js:32:16]
 31 │   method() {
 32 │     this.\u0023field;
    ·                ▲
 33 │   }
    ╰────

  × Invalid Character `#`
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/private-method-cannot-escape-token.js:25:9]
 24 │ class C {
 25 │   \u0023m() { return 42; }
    ·         ▲
 26 │ }
    ╰────

  × Private fields cannot be accessed on super
    ╭─[test262/test/language/statements/class/elements/syntax/early-errors/super-private-access-invalid.js:35:5]
 34 │   method() {
 35 │     super.#x();
    ·     ────────
 36 │   }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/ternary-init-err-contains-arguments.js:34:20]
 33 │ class C {
 34 │   x = false ? {} : arguments;
    ·                    ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/ternary-init-err-contains-super.js:27:20]
 26 │ class C {
 27 │   x = false ? {} : super();
    ·                    ───────
 28 │ }
    ╰────

  × 'arguments' is not allowed in class field initializer
    ╭─[test262/test/language/statements/class/elements/typeof-init-err-contains-arguments.js:34:14]
 33 │ class C {
 34 │   x = typeof arguments;
    ·              ─────────
 35 │ }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/elements/typeof-init-err-contains-super.js:27:14]
 26 │ class C {
 27 │   x = typeof super();
    ·              ───────
 28 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method/array-destructuring-param-strict-body.js:155:5]
 154 │   *method([element]) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/gen-method/dflt-params-duplicates.js:83:11]
 82 │ class C {
 83 │   *method(x = 0, x) {
    ·           ┬      ┬
    ·           │      ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
 84 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/gen-method/dflt-params-rest.js:87:14]
 86 │ class C {
 87 │   *method(...x = []) {
    ·              ──────
 88 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method/object-destructuring-param-strict-body.js:155:5]
 154 │   *method({property}) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method/rest-param-strict-body.js:155:5]
 154 │   *method(a,...rest) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/gen-method/rest-params-trailing-comma-early-error.js:80:11]
 79 │ class C {
 80 │   *method(...a,) {
    ·           ────
 81 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C { *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C { *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method/yield-as-binding-identifier.js:35:9]
 34 │ class C { *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-as-binding-identifier.js:35:9]
 34 │ class C { *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C { *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C { *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method/yield-as-identifier-reference.js:35:10]
 34 │ class C { *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-as-identifier-reference.js:35:10]
 34 │ class C { *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/gen-method/yield-as-label-identifier-escaped.js:35:5]
 34 │ class C { *gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/gen-method/yield-as-label-identifier-escaped.js:35:15]
 34 │ class C { *gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/gen-method/yield-as-label-identifier.js:35:10]
 34 │ class C { *gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-identifier-spread-strict.js:41:17]
 40 │          ...(function() {
 41 │             var yield;
    ·                 ─────
 42 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method/yield-identifier-strict.js:33:13]
 32 │     (function() {
 33 │         var yield;
    ·             ─────
 34 │         throw new Test262Error();
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/statements/class/gen-method-param-dflt-yield.js:27:10]
 26 │ class C {
 27 │   *g(x = yield) {}
    ·          ──┬──
    ·            ╰── yield expression not allowed in formal parameter
 28 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method-static/array-destructuring-param-strict-body.js:155:5]
 154 │   static *method([element]) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/gen-method-static/dflt-params-duplicates.js:83:18]
 82 │ class C {
 83 │   static *method(x = 0, x) {
    ·                  ┬      ┬
    ·                  │      ╰── It can not be redeclared here
    ·                  ╰── `x` has already been declared here
 84 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/gen-method-static/dflt-params-rest.js:87:21]
 86 │ class C {
 87 │   static *method(...x = []) {
    ·                     ──────
 88 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method-static/object-destructuring-param-strict-body.js:155:5]
 154 │   static *method({property}) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/gen-method-static/rest-param-strict-body.js:155:5]
 154 │   static *method(a,...rest) {
 155 │     "use strict";
     ·     ─────────────
 156 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/gen-method-static/rest-params-trailing-comma-early-error.js:80:18]
 79 │ class C {
 80 │   static *method(...a,) {
    ·                  ────
 81 │     
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C {static *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-binding-identifier-escaped.js:35:9]
 34 │ class C {static *gen() {
 35 │     var yi\u0065ld;
    ·         ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-binding-identifier.js:35:9]
 34 │ class C {static *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-binding-identifier.js:35:9]
 34 │ class C {static *gen() {
 35 │     var yield;
    ·         ─────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C {static *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-identifier-reference-escaped.js:35:10]
 34 │ class C {static *gen() {
 35 │     void yi\u0065ld;
    ·          ──────────
 36 │ }}
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-identifier-reference.js:35:10]
 34 │ class C {static *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-identifier-reference.js:35:10]
 34 │ class C {static *gen() {
 35 │     void yield;
    ·          ─────
 36 │ }}
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-label-identifier-escaped.js:35:5]
 34 │ class C {static *gen() {
 35 │     yi\u0065ld: ;
    ·     ──────────
 36 │ }}
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-label-identifier-escaped.js:35:15]
 34 │ class C {static *gen() {
 35 │     yi\u0065ld: ;
    ·               ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/class/gen-method-static/yield-as-label-identifier.js:35:10]
 34 │ class C {static *gen() {
 35 │     yield: ;
    ·          ▲
 36 │ }}
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-identifier-spread-strict.js:41:17]
 40 │          ...(function() {
 41 │             var yield;
    ·                 ─────
 42 │             throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/gen-method-static/yield-identifier-strict.js:33:13]
 32 │     (function() {
 33 │         var yield;
    ·             ─────
 34 │         throw new Test262Error();
    ╰────

  × A 'get' accessor must not have any formal parameters.
    ╭─[test262/test/language/statements/class/getter-param-dflt.js:24:16]
 23 │ 
 24 │ class C { get a(param = null) {} }
    ·                ──────────────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method/array-destructuring-param-strict-body.js:152:5]
 151 │   method([element]) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/method/dflt-params-duplicates.js:80:10]
 79 │ class C {
 80 │   method(x = 0, x) {
    ·          ┬      ┬
    ·          │      ╰── It can not be redeclared here
    ·          ╰── `x` has already been declared here
 81 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/method/dflt-params-rest.js:84:13]
 83 │ class C {
 84 │   method(...x = []) {
    ·             ──────
 85 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method/object-destructuring-param-strict-body.js:152:5]
 151 │   method({property}) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method/rest-param-strict-body.js:152:5]
 151 │   method(a,...rest) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/method/rest-params-trailing-comma-early-error.js:76:10]
 75 │ class C {
 76 │   method(...a,) {
    ·          ────
 77 │     
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/method-param-yield.js:22:9]
 21 │ class C {
 22 │   m(x = yield) {}
    ·         ─────
 23 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method-static/array-destructuring-param-strict-body.js:152:5]
 151 │   static method([element]) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/method-static/dflt-params-duplicates.js:80:17]
 79 │ class C {
 80 │   static method(x = 0, x) {
    ·                 ┬      ┬
    ·                 │      ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
 81 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/class/method-static/dflt-params-rest.js:84:20]
 83 │ class C {
 84 │   static method(...x = []) {
    ·                    ──────
 85 │     
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method-static/object-destructuring-param-strict-body.js:152:5]
 151 │   static method({property}) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/class/method-static/rest-param-strict-body.js:152:5]
 151 │   static method(a,...rest) {
 152 │     "use strict";
     ·     ─────────────
 153 │   }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/class/method-static/rest-params-trailing-comma-early-error.js:76:17]
 75 │ class C {
 76 │   static method(...a,) {
    ·                 ────
 77 │     
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/class/private-non-static-getter-static-setter-early-error.js:17:7]
 16 │ class C {
 17 │   get #f() {}
    ·       ─┬
    ·        ╰── `f` has already been declared here
 18 │   static set #f(v) {}
    ·              ─┬
    ·               ╰── It can not be redeclared here
 19 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/class/private-non-static-setter-static-getter-early-error.js:17:7]
 16 │ class C {
 17 │   set #f(v) {}
    ·       ─┬
    ·        ╰── `f` has already been declared here
 18 │   static get #f() {}
    ·              ─┬
    ·               ╰── It can not be redeclared here
 19 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/class/private-static-getter-non-static-setter-early-error.js:17:14]
 16 │ class C {
 17 │   static get #f() {}
    ·              ─┬
    ·               ╰── `f` has already been declared here
 18 │   set #f(v) {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 19 │ }
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/class/private-static-setter-non-static-getter-early-error.js:17:14]
 16 │ class C {
 17 │   static set #f(v) {}
    ·              ─┬
    ·               ╰── `f` has already been declared here
 18 │   get #f() {}
    ·       ─┬
    ·        ╰── It can not be redeclared here
 19 │ }
    ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/statements/class/static-gen-method-param-dflt-yield.js:27:17]
 26 │ class C {
 27 │   static *g(x = yield) {}
    ·                 ──┬──
    ·                   ╰── yield expression not allowed in formal parameter
 28 │ }
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/class/static-init-await-binding-invalid.js:25:11]
 24 │   static {
 25 │     class await {}
    ·           ─────
 26 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/class/static-init-await-binding-invalid.js:25:11]
 24 │   static {
 25 │     class await {}
    ·           ─────
 26 │   }
    ╰────

  × 'arguments' is not allowed in static initialization block
    ╭─[test262/test/language/statements/class/static-init-invalid-arguments.js:22:15]
 21 │   static {
 22 │     (class { [argument\u0073]() {} });
    ·               ──────────────
 23 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/class/static-init-invalid-await.js:31:7]
 30 │     static {
 31 │       await 0;
    ·       ─────
 32 │     }
    ╰────

  × Label `x` has already been declared
    ╭─[test262/test/language/statements/class/static-init-invalid-label-dup.js:22:5]
 21 │   static {
 22 │     x: x: 0;
    ·     ┬  ┬
    ·     │  ╰── It can not be redeclared here
    ·     ╰── `x` has already been declared here
 23 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/static-init-invalid-lex-dup.js:22:9]
 21 │   static {
 22 │     let x;
    ·         ┬
    ·         ╰── `x` has already been declared here
 23 │     let x;
    ·         ┬
    ·         ╰── It can not be redeclared here
 24 │   }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/class/static-init-invalid-lex-var.js:23:9]
 22 │   static {
 23 │     let x;
    ·         ┬
    ·         ╰── `x` has already been declared here
 24 │     var x;
    ·         ┬
    ·         ╰── It can not be redeclared here
 25 │   }
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/class/static-init-invalid-return.js:25:7]
 24 │     static {
 25 │       return;
    ·       ──────
 26 │     }
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/class/static-init-invalid-super-call.js:21:5]
 20 │   static {
 21 │     super();
    ·     ───────
 22 │   }
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/class/static-init-invalid-undefined-break-target.js:23:13]
 22 │     x: while (false) {
 23 │       break y;
    ·             ─
 24 │     }
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/class/static-init-invalid-undefined-continue-target.js:23:16]
 22 │     x: while (false) {
 23 │       continue y;
    ·                ─
 24 │     }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/static-init-invalid-yield.js:25:7]
 24 │     static {
 25 │       yield;
    ·       ─────
 26 │     }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/class/static-method-param-yield.js:22:16]
 21 │ class C {
 22 │   static m(x = yield) {}
    ·                ─────
 23 │ }
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/class/strict-mode/with.js:15:33]
 14 │ 
 15 │ class C extends (function B() { with ({}); return B; }()) {}
    ·                                 ────
 16 │ 
    ╰────

  × Identifier `A` has already been declared
    ╭─[test262/test/language/statements/class/syntax/early-errors/class-definition-evaluation-block-duplicate-binding.js:17:9]
 16 │ {
 17 │   class A {}
    ·         ┬
    ·         ╰── `A` has already been declared here
 18 │   class A {}
    ·         ┬
    ·         ╰── It can not be redeclared here
 19 │ }
    ╰────

  × Identifier `A` has already been declared
    ╭─[test262/test/language/statements/class/syntax/early-errors/class-definition-evaluation-scriptbody-duplicate-binding.js:16:7]
 15 │ $DONOTEVALUATE();
 16 │ class A {}
    ·       ┬
    ·       ╰── `A` has already been declared here
 17 │ class A {}
    ·       ┬
    ·       ╰── It can not be redeclared here
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/class/syntax/escaped-static.js:25:3]
 24 │ class C {
 25 │   st\u0061tic m() {}
    ·   ───────────
 26 │ }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-init-ary.js:31:11]
 30 │ 
 31 │ const [...[ x ] = []] = [];
    ·           ──────────
 32 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-init-id.js:31:11]
 30 │ 
 31 │ const [...x = []] = [];
    ·           ──────
 32 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-init-obj.js:31:11]
 30 │ 
 31 │ const [...{ x } = []] = [];
    ·           ──────────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-not-final-ary.js:31:8]
 30 │ 
 31 │ const [...[x], y] = [1, 2, 3];
    ·        ──────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-not-final-id.js:31:8]
 30 │ 
 31 │ const [...x, y] = [1, 2, 3];
    ·        ────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/const/dstr/ary-ptrn-rest-not-final-obj.js:31:8]
 30 │ 
 31 │ const [...{ x }, y] = [1, 2, 3];
    ·        ────────
 32 │ 
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/const/redeclaration-error-from-within-strict-mode-function-const.js:14:37]
 13 │ $DONOTEVALUATE();
 14 │ (function() { 'use strict'; { const f = 1; var f; } })
    ·                                     ┬          ┬
    ·                                     │          ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
 15 │ 
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/const/static-init-await-binding-invalid.js:25:11]
 24 │   static {
 25 │     const await = 0;
    ·           ─────
 26 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/const/static-init-await-binding-invalid.js:25:11]
 24 │   static {
 25 │     const await = 0;
    ·           ─────
 26 │   }
    ╰────

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/block-scope-syntax-const-declarations-mixed-with-without-initialiser.js:14:14]
 13 │ $DONOTEVALUATE();
 14 │ const x = 1, y;
    ·              ─
 15 │ 
    ╰────

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/block-scope-syntax-const-declarations-mixed-without-with-initialiser.js:14:7]
 13 │ $DONOTEVALUATE();
 14 │ const x, y = 1;
    ·       ─
 15 │ 
    ╰────

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/block-scope-syntax-const-declarations-without-initialiser.js:14:7]
 13 │ $DONOTEVALUATE();
 14 │ const x;
    ·       ─
 15 │ 
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/const/syntax/const-declaring-let-split-across-two-lines.js:20:1]
 19 │ const
 20 │ let = "irrelevant initializer";
    · ───
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-do-statement-while-expression.js:15:4]
 14 │ $DONOTEVALUATE();
 15 │ do const x = 1; while (false)
    ·    ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-for-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) const x = 1;
    ·               ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-if-expression-statement-else-statement.js:15:19]
 14 │ $DONOTEVALUATE();
 15 │ if (true) {} else const x = 1;
    ·                   ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-if-expression-statement.js:15:11]
 14 │ $DONOTEVALUATE();
 15 │ if (true) const x = 1;
    ·           ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-label-statement.js:15:8]
 14 │ $DONOTEVALUATE();
 15 │ label: const x = 1;
    ·        ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/with-initializer-while-expression-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ while (false) const x = 1;
    ·               ────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-case-expression-statement-list.js:15:34]
 14 │ $DONOTEVALUATE();
 15 │ switch (true) { case true: const x; }
    ·                                  ─
    ╰────

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-default-statement-list.js:15:32]
 14 │ $DONOTEVALUATE();
 15 │ switch (true) { default: const x; }
    ·                                ─
    ╰────

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-do-statement-while-expression.js:15:10]
 14 │ $DONOTEVALUATE();
 15 │ do const x; while (false)
    ·          ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-do-statement-while-expression.js:15:4]
 14 │ $DONOTEVALUATE();
 15 │ do const x; while (false)
    ·    ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-for-statement.js:15:21]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) const x;
    ·                     ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-for-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) const x;
    ·               ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-if-expression-statement-else-statement.js:15:25]
 14 │ $DONOTEVALUATE();
 15 │ if (true) {} else const x;
    ·                         ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-if-expression-statement-else-statement.js:15:19]
 14 │ $DONOTEVALUATE();
 15 │ if (true) {} else const x;
    ·                   ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-if-expression-statement.js:15:17]
 14 │ $DONOTEVALUATE();
 15 │ if (true) const x;
    ·                 ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-if-expression-statement.js:15:11]
 14 │ $DONOTEVALUATE();
 15 │ if (true) const x;
    ·           ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-label-statement.js:15:14]
 14 │ $DONOTEVALUATE();
 15 │ label: const x;
    ·              ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-label-statement.js:15:8]
 14 │ $DONOTEVALUATE();
 15 │ label: const x;
    ·        ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Missing initializer in const declaration
    ╭─[test262/test/language/statements/const/syntax/without-initializer-while-expression-statement.js:15:21]
 14 │ $DONOTEVALUATE();
 15 │ while (false) const x;
    ·                     ─
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/const/syntax/without-initializer-while-expression-statement.js:15:15]
 14 │ $DONOTEVALUATE();
 15 │ while (false) const x;
    ·               ────────
    ╰────
  help: Wrap this declaration in a block statement

  × Illegal continue statement: no surrounding iteration statement
    ╭─[test262/test/language/statements/continue/S12.7_A1_T1.js:21:1]
 20 │ var x=1;
 21 │ continue;
    · ─────────
 22 │ var y=2;
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A1_T2.js:23:10]
 22 │ var x=1;
 23 │ continue LABEL;
    ·          ─────
 24 │ var y=2;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A1_T3.js:24:14]
 23 │     var x=1;
 24 │     continue LABEL;
    ·              ─────
 25 │     var y=2;
    ╰────

  × Illegal continue statement: no surrounding iteration statement
    ╭─[test262/test/language/statements/continue/S12.7_A1_T4.js:22:5]
 21 │     var x=1;
 22 │     continue;
    ·     ─────────
 23 │     var y=2;
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A5_T1.js:23:13]
 22 │    if(x===10)break;
 23 │    continue LABEL_ANOTHER_LOOP;
    ·             ──────────────────
 24 │    LABEL_IN_2 : y++;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A5_T2.js:23:13]
 22 │    if(x===10)break;
 23 │    continue IN_DO_FUNC;
    ·             ──────────
 24 │    LABEL_IN_2 : y++;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A5_T3.js:24:13]
 23 │    if(x===10)break;
 24 │    continue LABEL_IN;
    ·             ────────
 25 │    LABEL_IN_2 : y++;
    ╰────

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/continue/S12.7_A6.js:22:26]
 21 │     x++;
 22 │     (function(){continue LABEL1;})();
    ·                          ──────
 23 │     y++;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/continue/S12.7_A8_T1.js:20:11]
 19 │ } catch(e){
 20 │     continue LABEL2;
    ·              ──────
 21 │     LABEL2 : do {
    ╰────

  × Illegal continue statement: no surrounding iteration statement
    ╭─[test262/test/language/statements/continue/S12.7_A8_T2.js:18:2]
 17 │ } catch(e){
 18 │     continue;
    ·     ─────────
 19 │ };
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Jump target cannot cross function boundary.
    ╭─[test262/test/language/statements/continue/static-init-with-label.js:26:16]
 25 │     static {
 26 │       continue label;
    ·                ─────
 27 │     }
    ╰────

  × Illegal continue statement: no surrounding iteration statement
    ╭─[test262/test/language/statements/continue/static-init-without-label.js:26:7]
 25 │     static {
 26 │       continue;
    ·       ─────────
 27 │     }
    ╰────
  help: A `continue` statement can only be used within an enclosing `for`, `while` or `do while`

  × Unexpected token
    ╭─[test262/test/language/statements/debugger/expression.js:15:2]
 14 │ 
 15 │ (debugger);
    ·  ────────
    ╰────

  × Expected `while` but found `var`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A12.js:18:13]
 17 │ //CHECK#1
 18 │ do var x=1; var y =2; while (0);
    ·             ─┬─
    ·              ╰── `while` expected
 19 │ //
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/do-while/S12.6.1_A15.js:20:10]
 19 │     ;
 20 │ }while({0});
    ·          ─
 21 │ //
    ╰────

  × Expected `(` but found `decimal`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T1.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while 1;
    ·                 ┬
    ·                 ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `decimal`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T2.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while 0;
    ·                 ┬
    ·                 ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `true`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T3.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while true;
    ·                 ──┬─
    ·                   ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `false`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T4.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while false;
    ·                 ──┬──
    ·                   ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `string`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T5.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while '';
    ·                 ─┬
    ·                  ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `string`
    ╭─[test262/test/language/statements/do-while/S12.6.1_A6_T6.js:18:17]
 17 │ //CHECK#1
 18 │ do break; while 'hood';
    ·                 ───┬──
    ·                    ╰── `(` expected
 19 │ //
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/do-while/decl-async-fun.js:21:4]
 20 │ 
 21 │ do async function f() {} while (false)
    ·    ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/do-while/decl-async-fun.js:21:4]
 20 │ 
 21 │ do async function f() {} while (false)
    ·    ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/do-while/decl-async-gen.js:21:4]
 20 │ 
 21 │ do async function* g() {} while (false)
    ·    ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/do-while/decl-async-gen.js:21:4]
 20 │ 
 21 │ do async function* g() {} while (false)
    ·    ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/do-while/decl-cls.js:15:4]
 14 │ 
 15 │ do class C {} while (false)
    ·    ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/do-while/decl-const.js:15:4]
 14 │ 
 15 │ do const x = null; while (false)
    ·    ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/do-while/decl-fun.js:15:4]
 14 │ 
 15 │ do function f() {} while (false)
    ·    ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/do-while/decl-gen.js:16:4]
 15 │ 
 16 │ do function* g() {} while (false)
    ·    ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/do-while/decl-gen.js:16:4]
 15 │ 
 16 │ do function* g() {} while (false)
    ·    ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/do-while/decl-let.js:15:7]
 14 │ 
 15 │ do let x; while (false)
    ·       ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid function declaration
    ╭─[test262/test/language/statements/do-while/labelled-fn-stmt.js:19:20]
 18 │ 
 19 │ do label1: label2: function f() {} while (false)
    ·                    ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/do-while/let-array-with-newline.js:20:4]
 19 │     
 20 │ ╭─▶ do let
 21 │ ╰─▶ [x] = 0
 22 │     while (false);
    ╰────
  help: Wrap this declaration in a block statement

  × Expected function name
    ╭─[test262/test/language/statements/expression/S12.4_A1.js:20:9]
 19 │ //CHECK#1
 20 │ function(){}();
    ·         ─
 21 │ //
    ╰────
  help: Function name is required in function declaration or named export

  × Empty parenthesized expression
    ╭─[test262/test/language/statements/expression/S12.4_A1.js:20:13]
 19 │ //CHECK#1
 20 │ function(){}();
    ·             ──
 21 │ //
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/for/S12.6.3_A11.1_T3.js:25:40]
 24 │     nested:for(var index_n=0;index_n<=index;index_n++){
 25 │         if(index*index_n == 6)continue nonexist;
    ·                                        ────────
 26 │         __str+=""+index+index_n;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/for/S12.6.3_A11_T3.js:25:40]
 24 │     nested:for(index_n=0;index_n<=index;index_n++){
 25 │         if(index*index_n == 6)continue nonexist;
    ·                                        ────────
 26 │         __str+=""+index+index_n;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/for/S12.6.3_A12.1_T3.js:25:37]
 24 │     nested:for(var index_n=0;index_n<=index;index_n++){
 25 │         if(index*index_n >= 4)break nonexist;
    ·                                     ────────
 26 │         __str+=""+index+index_n;
    ╰────

  × Use of undefined label
    ╭─[test262/test/language/statements/for/S12.6.3_A12_T3.js:25:37]
 24 │     nested:for(index_n=0;index_n<=index;index_n++){
 25 │         if(index*index_n >= 4)break nonexist;
    ·                                     ────────
 26 │         __str+=""+index+index_n;
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A4.1.js:23:18]
 22 │ //CHECK#1
 23 │ for (var a in arr;1;){
    ·                  ┬
    ·                  ╰── `)` expected
 24 │     break;
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A4_T1.js:23:14]
 22 │ //CHECK#1
 23 │ for (a in arr;1;){
    ·              ┬
    ·              ╰── `)` expected
 24 │     break;
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for/S12.6.3_A4_T2.js:23:5]
 22 │ //CHECK#1
 23 │ for(1 in arr;1;) {
    ·     ─
 24 │     break;
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A7.1_T1.js:22:35]
 21 │ //CHECK#1
 22 │ for(var index=0; index<10; index++; index--);
    ·                                   ┬
    ·                                   ╰── `)` expected
 23 │ //
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A7.1_T2.js:22:36]
 21 │ //CHECK#1
 22 │ for(var index=0; index<10; index+=4; index++; index--) ;
    ·                                    ┬
    ·                                    ╰── `)` expected
 23 │ //
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A7_T1.js:22:31]
 21 │ //CHECK#1
 22 │ for(index=0; index<10; index++; index--) ;
    ·                               ┬
    ·                               ╰── `)` expected
 23 │ //
    ╰────

  × Expected `)` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A7_T2.js:22:32]
 21 │ //CHECK#1
 22 │ for(index=0; index<10; index+=4; index++; index--) ;
    ·                                ┬
    ·                                ╰── `)` expected
 23 │ //
    ╰────

  × Expected `,` but found `++`
    ╭─[test262/test/language/statements/for/S12.6.3_A8.1_T1.js:22:35]
 21 │ //CHECK#1
 22 │ for(var index=0; index<100; {index++; index*2;}) {  arr.add(""+index);};
    ·                                   ─┬
    ·                                    ╰── `,` expected
 23 │ //
    ╰────

  × Expected `,` but found `++`
    ╭─[test262/test/language/statements/for/S12.6.3_A8.1_T2.js:22:24]
 21 │ //CHECK#1
 22 │ for(var index=0; {index++;index<100;}; index*2;) {  arr.add(""+index);};
    ·                        ─┬
    ·                         ╰── `,` expected
 23 │ //
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for/S12.6.3_A8.1_T3.js:22:10]
 21 │ //CHECK#3
 22 │ for({var index=0; index+=1;} index++<=10; index*2;) {   arr.add(""+index);};
    ·          ─────
 23 │ //
    ╰────

  × Expected `,` but found `++`
    ╭─[test262/test/language/statements/for/S12.6.3_A8_T1.js:22:31]
 21 │ //CHECK#1
 22 │ for(index=0; index<100; {index++; index*2;}) {  arr.add(""+index);};
    ·                               ─┬
    ·                                ╰── `,` expected
 23 │ //
    ╰────

  × Expected `,` but found `++`
    ╭─[test262/test/language/statements/for/S12.6.3_A8_T2.js:22:20]
 21 │ //CHECK#1
 22 │ for(index=0; {index++;index<100;}; index*2;) {  arr.add(""+index);};
    ·                    ─┬
    ·                     ╰── `,` expected
 23 │ //
    ╰────

  × Expected `,` but found `;`
    ╭─[test262/test/language/statements/for/S12.6.3_A8_T3.js:22:13]
 21 │ //CHECK#1
 22 │ for({index=0; index+=1;} index++<=10; index*2;) {   arr.add(""+index);};
    ·             ┬
    ·             ╰── `,` expected
 23 │ //
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for/decl-async-fun.js:21:18]
 20 │ 
 21 │ for ( ; false; ) async function f() {}
    ·                  ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/decl-async-fun.js:21:18]
 20 │ 
 21 │ for ( ; false; ) async function f() {}
    ·                  ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for/decl-async-gen.js:21:18]
 20 │ 
 21 │ for ( ; false; ) async function* g() {}
    ·                  ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/decl-async-gen.js:21:18]
 20 │ 
 21 │ for ( ; false; ) async function* g() {}
    ·                  ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/for/decl-cls.js:15:18]
 14 │ 
 15 │ for ( ; false; ) class C {}
    ·                  ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for/decl-const.js:15:18]
 14 │ 
 15 │ for ( ; false; ) const x = null;
    ·                  ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/decl-fun.js:15:18]
 14 │ 
 15 │ for ( ; false; ) function f() {}
    ·                  ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for/decl-gen.js:16:18]
 15 │ 
 16 │ for ( ; false; ) function* g() {}
    ·                  ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/decl-gen.js:16:18]
 15 │ 
 16 │ for ( ; false; ) function* g() {}
    ·                  ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/for/decl-let.js:15:21]
 14 │ 
 15 │ for ( ; false; ) let x;
    ·                     ▲
    ╰────
  help: Try insert a semicolon here

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-init-ary.js:52:16]
 51 │ 
 52 │ for (const [...[ x ] = []] = []; iterCount < 1; ) {
    ·                ──────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-init-id.js:52:16]
 51 │ 
 52 │ for (const [...x = []] = []; iterCount < 1; ) {
    ·                ──────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-init-obj.js:52:16]
 51 │ 
 52 │ for (const [...{ x } = []] = []; iterCount < 1; ) {
    ·                ──────────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-not-final-ary.js:52:13]
 51 │ 
 52 │ for (const [...[x], y] = [1, 2, 3]; iterCount < 1; ) {
    ·             ──────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-not-final-id.js:52:13]
 51 │ 
 52 │ for (const [...x, y] = [1, 2, 3]; iterCount < 1; ) {
    ·             ────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/const-ary-ptrn-rest-not-final-obj.js:52:13]
 51 │ 
 52 │ for (const [...{ x }, y] = [1, 2, 3]; iterCount < 1; ) {
    ·             ────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-init-ary.js:52:14]
 51 │ 
 52 │ for (let [...[ x ] = []] = []; iterCount < 1; ) {
    ·              ──────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-init-id.js:52:14]
 51 │ 
 52 │ for (let [...x = []] = []; iterCount < 1; ) {
    ·              ──────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-init-obj.js:52:14]
 51 │ 
 52 │ for (let [...{ x } = []] = []; iterCount < 1; ) {
    ·              ──────────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-not-final-ary.js:52:11]
 51 │ 
 52 │ for (let [...[x], y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ──────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-not-final-id.js:52:11]
 51 │ 
 52 │ for (let [...x, y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/let-ary-ptrn-rest-not-final-obj.js:52:11]
 51 │ 
 52 │ for (let [...{ x }, y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-init-ary.js:46:14]
 45 │ 
 46 │ for (var [...[ x ] = []] = []; iterCount < 1; ) {
    ·              ──────────
 47 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-init-id.js:46:14]
 45 │ 
 46 │ for (var [...x = []] = []; iterCount < 1; ) {
    ·              ──────
 47 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-init-obj.js:46:14]
 45 │ 
 46 │ for (var [...{ x } = []] = []; iterCount < 1; ) {
    ·              ──────────
 47 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-not-final-ary.js:46:11]
 45 │ 
 46 │ for (var [...[x], y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ──────
 47 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-not-final-id.js:46:11]
 45 │ 
 46 │ for (var [...x, y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ────
 47 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for/dstr/var-ary-ptrn-rest-not-final-obj.js:46:11]
 45 │ 
 46 │ for (var [...{ x }, y] = [1, 2, 3]; iterCount < 1; ) {
    ·           ────────
 47 │   
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for/head-const-bound-names-in-stmt.js:21:12]
 20 │ 
 21 │ for (const x = 0; false; ) {
    ·            ┬
    ·            ╰── `x` has already been declared here
 22 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 23 │ }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for/head-let-bound-names-in-stmt.js:21:10]
 20 │ 
 21 │ for (let x; false; ) {
    ·          ┬
    ·          ╰── `x` has already been declared here
 22 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 23 │ }
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/labelled-fn-stmt-const.js:19:44]
 18 │ 
 19 │ for (const x = 0; false; ) label1: label2: function f() {}
    ·                                            ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/labelled-fn-stmt-expr.js:19:34]
 18 │ 
 19 │ for ( ; false; ) label1: label2: function f() {}
    ·                                  ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/labelled-fn-stmt-let.js:19:38]
 18 │ 
 19 │ for (let x; false; ) label1: label2: function f() {}
    ·                                      ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for/labelled-fn-stmt-var.js:19:38]
 18 │ 
 19 │ for (var x; false; ) label1: label2: function f() {}
    ·                                      ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for/let-array-with-newline.js:20:17]
 19 │     
 20 │ ╭─▶ for (; false; ) let
 21 │ ╰─▶ [a] = 0;
    ╰────
  help: Wrap this declaration in a block statement

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-init-yield-ident-invalid.js:34:20]
 33 │ async function fn() {
 34 │   for await ([ x = yield ] of [[]]) {}
    ·                    ─────
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-nested-array-invalid.js:34:14]
 33 │ async function fn() {
 34 │   for await ([[(x, y)]] of [[[]]]) {}
    ·              ──────────
 35 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-nested-array-yield-ident-invalid.js:34:18]
 33 │ async function fn() {
 34 │   for await ([[x[yield]]] of [[[]]]) {}
    ·                  ─────
 35 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-nested-obj-invalid.js:34:14]
 33 │ async function fn() {
 34 │   for await ([{ get x() {} }] of [[{}]]) {}
    ·              ────────────────
 35 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-nested-obj-yield-ident-invalid.js:34:21]
 33 │ async function fn() {
 34 │   for await ([{ x = yield }] of [[{}]]) {}
    ·                     ─────
 35 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-target-simple-strict.js:34:15]
 33 │ async function fn() {
 34 │   for await ([arguments] of [[]]) {}
    ·               ─────────
 35 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-await-of/async-func-decl-dstr-array-elem-target-yield-invalid.js:34:18]
 33 │ async function fn() {
 34 │   for await ([ x[yield] ] of [[]]) {}
    ·                  ─────
 35 │ }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-init-ary.js:53:24]
 52 │ async function fn() {
 53 │   for await (const [...[ x ] = []] of [[]]) {
    ·                        ──────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-init-id.js:53:24]
 52 │ async function fn() {
 53 │   for await (const [...x = []] of [[]]) {
    ·                        ──────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-init-obj.js:53:24]
 52 │ async function fn() {
 53 │   for await (const [...{ x } = []] of [[]]) {
    ·                        ──────────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-not-final-ary.js:53:21]
 52 │ async function fn() {
 53 │   for await (const [...[x], y] of [[1, 2, 3]]) {
    ·                     ──────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-not-final-id.js:53:21]
 52 │ async function fn() {
 53 │   for await (const [...x, y] of [[1, 2, 3]]) {
    ·                     ────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-ary-ptrn-rest-not-final-obj.js:53:21]
 52 │ async function fn() {
 53 │   for await (const [...{ x }, y] of [[1, 2, 3]]) {
    ·                     ────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-init-ary.js:56:24]
 55 │ async function fn() {
 56 │   for await (const [...[ x ] = []] of asyncIter) {
    ·                        ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-init-id.js:56:24]
 55 │ async function fn() {
 56 │   for await (const [...x = []] of asyncIter) {
    ·                        ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-init-obj.js:56:24]
 55 │ async function fn() {
 56 │   for await (const [...{ x } = []] of asyncIter) {
    ·                        ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-not-final-ary.js:56:21]
 55 │ async function fn() {
 56 │   for await (const [...[x], y] of asyncIter) {
    ·                     ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-not-final-id.js:56:21]
 55 │ async function fn() {
 56 │   for await (const [...x, y] of asyncIter) {
    ·                     ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-const-async-ary-ptrn-rest-not-final-obj.js:56:21]
 55 │ async function fn() {
 56 │   for await (const [...{ x }, y] of asyncIter) {
    ·                     ────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-init-ary.js:53:22]
 52 │ async function fn() {
 53 │   for await (let [...[ x ] = []] of [[]]) {
    ·                      ──────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-init-id.js:53:22]
 52 │ async function fn() {
 53 │   for await (let [...x = []] of [[]]) {
    ·                      ──────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-init-obj.js:53:22]
 52 │ async function fn() {
 53 │   for await (let [...{ x } = []] of [[]]) {
    ·                      ──────────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-not-final-ary.js:53:19]
 52 │ async function fn() {
 53 │   for await (let [...[x], y] of [[1, 2, 3]]) {
    ·                   ──────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-not-final-id.js:53:19]
 52 │ async function fn() {
 53 │   for await (let [...x, y] of [[1, 2, 3]]) {
    ·                   ────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-ary-ptrn-rest-not-final-obj.js:53:19]
 52 │ async function fn() {
 53 │   for await (let [...{ x }, y] of [[1, 2, 3]]) {
    ·                   ────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-init-ary.js:56:22]
 55 │ async function fn() {
 56 │   for await (let [...[ x ] = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-init-id.js:56:22]
 55 │ async function fn() {
 56 │   for await (let [...x = []] of asyncIter) {
    ·                      ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-init-obj.js:56:22]
 55 │ async function fn() {
 56 │   for await (let [...{ x } = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-not-final-ary.js:56:19]
 55 │ async function fn() {
 56 │   for await (let [...[x], y] of asyncIter) {
    ·                   ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-not-final-id.js:56:19]
 55 │ async function fn() {
 56 │   for await (let [...x, y] of asyncIter) {
    ·                   ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-let-async-ary-ptrn-rest-not-final-obj.js:56:19]
 55 │ async function fn() {
 56 │   for await (let [...{ x }, y] of asyncIter) {
    ·                   ────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-init-ary.js:50:22]
 49 │ async function fn() {
 50 │   for await (var [...[ x ] = []] of [[]]) {
    ·                      ──────────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-init-id.js:50:22]
 49 │ async function fn() {
 50 │   for await (var [...x = []] of [[]]) {
    ·                      ──────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-init-obj.js:50:22]
 49 │ async function fn() {
 50 │   for await (var [...{ x } = []] of [[]]) {
    ·                      ──────────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-not-final-ary.js:50:19]
 49 │ async function fn() {
 50 │   for await (var [...[x], y] of [[1, 2, 3]]) {
    ·                   ──────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-not-final-id.js:50:19]
 49 │ async function fn() {
 50 │   for await (var [...x, y] of [[1, 2, 3]]) {
    ·                   ────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-ary-ptrn-rest-not-final-obj.js:50:19]
 49 │ async function fn() {
 50 │   for await (var [...{ x }, y] of [[1, 2, 3]]) {
    ·                   ────────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-init-ary.js:56:22]
 55 │ async function fn() {
 56 │   for await (var [...[ x ] = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-init-id.js:56:22]
 55 │ async function fn() {
 56 │   for await (var [...x = []] of asyncIter) {
    ·                      ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-init-obj.js:56:22]
 55 │ async function fn() {
 56 │   for await (var [...{ x } = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-not-final-ary.js:56:19]
 55 │ async function fn() {
 56 │   for await (var [...[x], y] of asyncIter) {
    ·                   ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-not-final-id.js:56:19]
 55 │ async function fn() {
 56 │   for await (var [...x, y] of asyncIter) {
    ·                   ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-func-dstr-var-async-ary-ptrn-rest-not-final-obj.js:56:19]
 55 │ async function fn() {
 56 │   for await (var [...{ x }, y] of asyncIter) {
    ·                   ────────
 57 │     
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (const [x] = 1 of []) {}
    ·              ─────────────
 21 │ }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-init-ary.js:53:24]
 52 │ async function *fn() {
 53 │   for await (const [...[ x ] = []] of [[]]) {
    ·                        ──────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-init-id.js:53:24]
 52 │ async function *fn() {
 53 │   for await (const [...x = []] of [[]]) {
    ·                        ──────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-init-obj.js:53:24]
 52 │ async function *fn() {
 53 │   for await (const [...{ x } = []] of [[]]) {
    ·                        ──────────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-not-final-ary.js:53:21]
 52 │ async function *fn() {
 53 │   for await (const [...[x], y] of [[1, 2, 3]]) {
    ·                     ──────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-not-final-id.js:53:21]
 52 │ async function *fn() {
 53 │   for await (const [...x, y] of [[1, 2, 3]]) {
    ·                     ────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-ary-ptrn-rest-not-final-obj.js:53:21]
 52 │ async function *fn() {
 53 │   for await (const [...{ x }, y] of [[1, 2, 3]]) {
    ·                     ────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-init-ary.js:56:24]
 55 │ async function *fn() {
 56 │   for await (const [...[ x ] = []] of asyncIter) {
    ·                        ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-init-id.js:56:24]
 55 │ async function *fn() {
 56 │   for await (const [...x = []] of asyncIter) {
    ·                        ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-init-obj.js:56:24]
 55 │ async function *fn() {
 56 │   for await (const [...{ x } = []] of asyncIter) {
    ·                        ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-not-final-ary.js:56:21]
 55 │ async function *fn() {
 56 │   for await (const [...[x], y] of asyncIter) {
    ·                     ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-not-final-id.js:56:21]
 55 │ async function *fn() {
 56 │   for await (const [...x, y] of asyncIter) {
    ·                     ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-async-ary-ptrn-rest-not-final-obj.js:56:21]
 55 │ async function *fn() {
 56 │   for await (const [...{ x }, y] of asyncIter) {
    ·                     ────────
 57 │     
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-const-obj-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (const {x} = 1 of []) {}
    ·              ─────────────
 21 │ }
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (let [x] = 1 of []) {}
    ·              ───────────
 21 │ }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-init-ary.js:53:22]
 52 │ async function *fn() {
 53 │   for await (let [...[ x ] = []] of [[]]) {
    ·                      ──────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-init-id.js:53:22]
 52 │ async function *fn() {
 53 │   for await (let [...x = []] of [[]]) {
    ·                      ──────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-init-obj.js:53:22]
 52 │ async function *fn() {
 53 │   for await (let [...{ x } = []] of [[]]) {
    ·                      ──────────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-not-final-ary.js:53:19]
 52 │ async function *fn() {
 53 │   for await (let [...[x], y] of [[1, 2, 3]]) {
    ·                   ──────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-not-final-id.js:53:19]
 52 │ async function *fn() {
 53 │   for await (let [...x, y] of [[1, 2, 3]]) {
    ·                   ────
 54 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-ary-ptrn-rest-not-final-obj.js:53:19]
 52 │ async function *fn() {
 53 │   for await (let [...{ x }, y] of [[1, 2, 3]]) {
    ·                   ────────
 54 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-init-ary.js:56:22]
 55 │ async function *fn() {
 56 │   for await (let [...[ x ] = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-init-id.js:56:22]
 55 │ async function *fn() {
 56 │   for await (let [...x = []] of asyncIter) {
    ·                      ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-init-obj.js:56:22]
 55 │ async function *fn() {
 56 │   for await (let [...{ x } = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-not-final-ary.js:56:19]
 55 │ async function *fn() {
 56 │   for await (let [...[x], y] of asyncIter) {
    ·                   ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-not-final-id.js:56:19]
 55 │ async function *fn() {
 56 │   for await (let [...x, y] of asyncIter) {
    ·                   ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-async-ary-ptrn-rest-not-final-obj.js:56:19]
 55 │ async function *fn() {
 56 │   for await (let [...{ x }, y] of asyncIter) {
    ·                   ────────
 57 │     
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-let-obj-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (let {x} = 1 of []) {}
    ·              ───────────
 21 │ }
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (var [x] = 1 of []) {}
    ·              ───────────
 21 │ }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-init-ary.js:50:22]
 49 │ async function *fn() {
 50 │   for await (var [...[ x ] = []] of [[]]) {
    ·                      ──────────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-init-id.js:50:22]
 49 │ async function *fn() {
 50 │   for await (var [...x = []] of [[]]) {
    ·                      ──────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-init-obj.js:50:22]
 49 │ async function *fn() {
 50 │   for await (var [...{ x } = []] of [[]]) {
    ·                      ──────────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-not-final-ary.js:50:19]
 49 │ async function *fn() {
 50 │   for await (var [...[x], y] of [[1, 2, 3]]) {
    ·                   ──────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-not-final-id.js:50:19]
 49 │ async function *fn() {
 50 │   for await (var [...x, y] of [[1, 2, 3]]) {
    ·                   ────
 51 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-ary-ptrn-rest-not-final-obj.js:50:19]
 49 │ async function *fn() {
 50 │   for await (var [...{ x }, y] of [[1, 2, 3]]) {
    ·                   ────────
 51 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-init-ary.js:56:22]
 55 │ async function *fn() {
 56 │   for await (var [...[ x ] = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-init-id.js:56:22]
 55 │ async function *fn() {
 56 │   for await (var [...x = []] of asyncIter) {
    ·                      ──────
 57 │     
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-init-obj.js:56:22]
 55 │ async function *fn() {
 56 │   for await (var [...{ x } = []] of asyncIter) {
    ·                      ──────────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-not-final-ary.js:56:19]
 55 │ async function *fn() {
 56 │   for await (var [...[x], y] of asyncIter) {
    ·                   ──────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-not-final-id.js:56:19]
 55 │ async function *fn() {
 56 │   for await (var [...x, y] of asyncIter) {
    ·                   ────
 57 │     
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-async-ary-ptrn-rest-not-final-obj.js:56:19]
 55 │ async function *fn() {
 56 │   for await (var [...{ x }, y] of asyncIter) {
    ·                   ────────
 57 │     
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/async-gen-dstr-var-obj-ptrn-init-err.js:20:14]
 19 │ async function fn() {
 20 │   for await (var {x} = 1 of []) {}
    ·              ───────────
 21 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/for-await-of/escaped-of.js:26:20]
 25 │ async function* f() {
 26 │   for await (var x o\u0066 []) ;
    ·                    ───────
 27 │ }
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/head-const-init.js:20:14]
 19 │ async function fn() {
 20 │   for await (const x = 1 of []) {}
    ·              ───────────
 21 │ }
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/head-let-init.js:20:14]
 19 │ async function fn() {
 20 │   for await (let x = 1 of []) {}
    ·              ─────────
 21 │ }
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-await-of/head-var-init.js:20:14]
 19 │ async function fn() {
 20 │   for await (var x = 1 of []) {}
    ·              ─────────
 21 │ }
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for-await-of/let-array-with-newline.js:22:27]
 21 │     async function* f() {
 22 │ ╭─▶   for await (var x of []) let
 23 │ ╰─▶   [a] = 0;
 24 │     }
    ╰────
  help: Wrap this declaration in a block statement

  × Expected `,` but found `;`
    ╭─[test262/test/language/statements/for-in/S12.6.4_A15.js:20:16]
 19 │ //CHECK#
 20 │ for(x in {__arr;}){
    ·                ┬
    ·                ╰── `,` expected
 21 │    break ;
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-in/decl-async-fun.js:21:19]
 20 │ 
 21 │ for (var x in {}) async function f() {}
    ·                   ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/decl-async-fun.js:21:19]
 20 │ 
 21 │ for (var x in {}) async function f() {}
    ·                   ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-in/decl-async-gen.js:21:19]
 20 │ 
 21 │ for (var x in {}) async function* g() {}
    ·                   ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/decl-async-gen.js:21:19]
 20 │ 
 21 │ for (var x in {}) async function* g() {}
    ·                   ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/for-in/decl-cls.js:15:19]
 14 │ 
 15 │ for (var x in {}) class C {}
    ·                   ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for-in/decl-const.js:15:19]
 14 │ 
 15 │ for (var x in {}) const y = null;
    ·                   ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/decl-fun.js:15:19]
 14 │ 
 15 │ for (var x in {}) function f() {}
    ·                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-in/decl-gen.js:16:19]
 15 │ 
 16 │ for (var x in {}) function* g() {}
    ·                   ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/decl-gen.js:16:19]
 15 │ 
 16 │ for (var x in {}) function* g() {}
    ·                   ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/for-in/decl-let.js:15:22]
 14 │ 
 15 │ for (var x in {}) let y;
    ·                      ▲
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-init-yield-ident-invalid.js:33:12]
 32 │ 
 33 │ for ([ x = yield ] in [[]]) ;
    ·            ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ([[(x, y)]] in [[[]]]) ;
    ·      ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-nested-array-yield-ident-invalid.js:33:10]
 32 │ 
 33 │ for ([[x[yield]]] in [[[]]]) ;
    ·          ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-nested-memberexpr-optchain-prop-ref-init.js:66:7]
 65 │ 
 66 │ for ([x?.y = 42] in [[23]]) ;
    ·       ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ([{ get x() {} }] in [[{}]]) ;
    ·      ────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-nested-obj-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ([{ x = yield }] in [[{}]]) ;
    ·             ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-put-obj-literal-optchain-prop-ref-init.js:65:7]
 64 │     
 65 │ ╭─▶ for ([{
 66 │ │     set y(val) {
 67 │ │       throw new Test262Error('The property should not be accessed.');
 68 │ │     }
 69 │ ╰─▶ }?.y = 42] in [[23]]) ;
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-target-simple-strict.js:33:7]
 32 │ 
 33 │ for ([arguments] in [[]]) ;
    ·       ─────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-elem-target-yield-invalid.js:33:10]
 32 │ 
 33 │ for ([ x[yield] ] in [[]]) ;
    ·          ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-before-element.js:33:6]
 32 │ 
 33 │ for ([...x, y] in [[]]) ;
    ·      ─────────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-before-elision.js:33:11]
 32 │ 
 33 │ for ([...x,] in [[]]) ;
    ·           ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-before-rest.js:33:6]
 32 │ 
 33 │ for ([...x, ...y] in [[]]) ;
    ·      ────────────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-elision-invalid.js:33:11]
 32 │ 
 33 │ for ([...x,] in [[]]) ;
    ·           ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-init.js:34:6]
 33 │ 
 34 │ for ([...x = 1] in [[]]) ;
    ·      ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ([...[(x, y)]] in [[[]]]) ;
    ·      ─────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-nested-array-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ([...[x[yield]]] in [[]]) ;
    ·             ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ([...{ get x() {} }] in [[[]]]) ;
    ·      ───────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-nested-obj-yield-ident-invalid.js:33:16]
 32 │ 
 33 │ for ([...{ x = yield }] in [[{}]]) ;
    ·                ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/array-rest-yield-ident-invalid.js:34:12]
 33 │ 
 34 │ for ([...x[yield]] in [[]]) ;
    ·            ─────
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/for-in/dstr/obj-id-identifier-yield-expr.js:33:8]
 32 │ 
 33 │ for ({ yield } in [{}]) ;
    ·        ─────
 34 │ 
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-id-identifier-yield-ident-invalid.js:33:8]
 32 │ 
 33 │ for ({ yield } in [{}]) ;
    ·        ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-in/dstr/obj-id-init-simple-strict.js:33:8]
 32 │ 
 33 │ for ({ eval = 0 } in [{}]) ;
    ·        ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-id-init-yield-ident-invalid.js:33:12]
 32 │ 
 33 │ for ({ x = yield } in [{}]) ;
    ·            ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-in/dstr/obj-id-simple-strict.js:33:8]
 32 │ 
 33 │ for ({ eval } in [{}]) ;
    ·        ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-elem-init-yield-ident-invalid.js:33:15]
 32 │ 
 33 │ for ({ x: x = yield } in [{}]) ;
    ·               ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-elem-target-memberexpr-optchain-prop-ref-init.js:66:11]
 65 │ 
 66 │ for ({ x: y?.z = 42 } in [{ x: 23 }]) ;
    ·           ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-elem-target-obj-literal-optchain-prop-ref-init.js:65:11]
 64 │     
 65 │ ╭─▶ for ({ x: {
 66 │ │     set y(val) {
 67 │ │       throw new Test262Error('The property should not be accessed.');
 68 │ │     }
 69 │ ╰─▶ }?.y = 42} in [{x: 42}]) ;
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-elem-target-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ({ x: x[yield] } in [{}]) ;
    ·             ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ({ x: [(x, y)] } in [{ x: [] }]) ;
    ·      ───────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-nested-array-yield-ident-invalid.js:33:16]
 32 │ 
 33 │ for ({ x: [x = yield] } in [{ x: [] }]) ;
    ·                ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ({ x: { get x() {} } } in [{ x: {} }]) ;
    ·      ─────────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-in/dstr/obj-prop-nested-obj-yield-ident-invalid.js:33:17]
 32 │ 
 33 │ for ({ x: { x = yield } } in [{ x: {} }]) ;
    ·                 ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/dstr/obj-rest-not-last-element-invalid.js:34:6]
 33 │ 
 34 │ for ({...rest, b} in [{}
    ·      ────────────
 35 │ ]) ;
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-in/head-const-bound-names-dup.js:18:13]
 17 │ 
 18 │ for (const [x, x] in {}) {}
    ·             ┬  ┬
    ·             │  ╰── It can not be redeclared here
    ·             ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-in/head-const-bound-names-in-stmt.js:18:12]
 17 │ 
 18 │ for (const x in {}) {
    ·            ┬
    ·            ╰── `x` has already been declared here
 19 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 20 │ }
    ╰────

  × `let` cannot be declared as a variable name inside of a `const` declaration
    ╭─[test262/test/language/statements/for-in/head-const-bound-names-let.js:17:12]
 16 │ 
 17 │ for (const let in {}) {}
    ·            ───
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-in/head-let-bound-names-dup.js:18:11]
 17 │ 
 18 │ for (let [x, x] in {}) {}
    ·           ┬  ┬
    ·           │  ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-in/head-let-bound-names-in-stmt.js:18:10]
 17 │ 
 18 │ for (let x in {}) {
    ·          ┬
    ·          ╰── `x` has already been declared here
 19 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 20 │ }
    ╰────

  × `let` cannot be declared as a variable name inside of a `let` declaration
    ╭─[test262/test/language/statements/for-in/head-let-bound-names-let.js:17:10]
 16 │ 
 17 │ for (let let in {}) {}
    ·          ───
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/head-lhs-cover-non-asnmt-trgt.js:25:6]
 24 │ 
 25 │ for ((this) in {}) {}
    ·      ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/head-lhs-invalid-asnmt-ptrn-ary.js:21:6]
 20 │ 
 21 │ for ([(x, y)] in {}) {}
    ·      ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/head-lhs-invalid-asnmt-ptrn-obj.js:21:6]
 20 │ 
 21 │ for ({ m() {} } in {}) {}
    ·      ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-in/head-lhs-non-asnmt-trgt.js:19:6]
 18 │ 
 19 │ for (this in {}) {}
    ·      ────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/labelled-fn-stmt-const.js:19:37]
 18 │ 
 19 │ for (const x in {}) label1: label2: function f() {}
    ·                                     ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/labelled-fn-stmt-let.js:19:35]
 18 │ 
 19 │ for (let x in {}) label1: label2: function f() {}
    ·                                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/labelled-fn-stmt-lhs.js:19:31]
 18 │ 
 19 │ for (x in {}) label1: label2: function f() {}
    ·                               ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-in/labelled-fn-stmt-var.js:19:35]
 18 │ 
 19 │ for (var x in {}) label1: label2: function f() {}
    ·                                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for-in/let-array-with-newline.js:20:21]
 19 │     
 20 │ ╭─▶ for (var x in null) let
 21 │ ╰─▶ [a] = 0;
    ╰────
  help: Wrap this declaration in a block statement

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-in/var-arguments-fn-strict-init.js:19:12]
 18 │ function f() {
 19 │   for (var arguments = 42 in null) {}
    ·            ─────────
 20 │ }
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-in/var-arguments-fn-strict-init.js:19:8]
 18 │ function f() {
 19 │   for (var arguments = 42 in null) {}
    ·        ──────────────────
 20 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-in/var-arguments-fn-strict.js:19:12]
 18 │ function f() {
 19 │   for (var arguments in null) {}
    ·            ─────────
 20 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-in/var-arguments-strict-init.js:18:10]
 17 │ 
 18 │ for (var arguments = 42 in null) {}
    ·          ─────────
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-in/var-arguments-strict-init.js:18:6]
 17 │ 
 18 │ for (var arguments = 42 in null) {}
    ·      ──────────────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-in/var-arguments-strict.js:16:10]
 15 │ 
 16 │ for (var arguments in null) {}
    ·          ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-in/var-eval-strict-init.js:16:10]
 15 │ 
 16 │ for (var eval = 42 in null) {}
    ·          ────
    ╰────

  × for-in loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-in/var-eval-strict-init.js:16:6]
 15 │ 
 16 │ for (var eval = 42 in null) {}
    ·      ─────────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-in/var-eval-strict.js:16:10]
 15 │ 
 16 │ for (var eval in null) {}
    ·          ────
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-of/decl-async-fun.js:21:19]
 20 │ 
 21 │ for (var x of []) async function f() {}
    ·                   ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/decl-async-fun.js:21:19]
 20 │ 
 21 │ for (var x of []) async function f() {}
    ·                   ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-of/decl-async-gen.js:21:19]
 20 │ 
 21 │ for (var x of []) async function* g() {}
    ·                   ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/decl-async-gen.js:21:19]
 20 │ 
 21 │ for (var x of []) async function* g() {}
    ·                   ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/for-of/decl-cls.js:15:19]
 14 │ 
 15 │ for (var x of []) class C {}
    ·                   ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for-of/decl-const.js:15:19]
 14 │ 
 15 │ for (var x of []) const y = null;
    ·                   ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/decl-fun.js:15:19]
 14 │ 
 15 │ for (var x of []) function f() {}
    ·                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/for-of/decl-gen.js:16:19]
 15 │ 
 16 │ for (var x of []) function* g() {}
    ·                   ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/decl-gen.js:16:19]
 15 │ 
 16 │ for (var x of []) function* g() {}
    ·                   ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/for-of/decl-let.js:15:22]
 14 │ 
 15 │ for (var x of []) let y;
    ·                      ▲
    ╰────
  help: Try insert a semicolon here

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-init-yield-ident-invalid.js:33:12]
 32 │ 
 33 │ for ([ x = yield ] of [[]]) ;
    ·            ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ([[(x, y)]] of [[[]]]) ;
    ·      ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-nested-array-yield-ident-invalid.js:33:10]
 32 │ 
 33 │ for ([[x[yield]]] of [[[]]]) ;
    ·          ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-nested-memberexpr-optchain-prop-ref-init.js:66:7]
 65 │ 
 66 │ for ([x?.y = 42] of [[23]]) ;
    ·       ────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ([{ get x() {} }] of [[{}]]) ;
    ·      ────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-nested-obj-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ([{ x = yield }] of [[{}]]) ;
    ·             ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-put-obj-literal-optchain-prop-ref-init.js:65:7]
 64 │     
 65 │ ╭─▶ for ([{
 66 │ │     set y(val) {
 67 │ │       throw new Test262Error('The property should not be accessed.');
 68 │ │     }
 69 │ ╰─▶ }?.y = 42] of [[23]]) ;
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-target-simple-strict.js:33:7]
 32 │ 
 33 │ for ([arguments] of [[]]) ;
    ·       ─────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-elem-target-yield-invalid.js:33:10]
 32 │ 
 33 │ for ([ x[yield] ] of [[]]) ;
    ·          ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-before-element.js:33:6]
 32 │ 
 33 │ for ([...x, y] of [[]]) ;
    ·      ─────────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-before-elision.js:33:11]
 32 │ 
 33 │ for ([...x,] of [[]]) ;
    ·           ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-before-rest.js:33:6]
 32 │ 
 33 │ for ([...x, ...y] of [[]]) ;
    ·      ────────────
    ╰────

  × Unexpected trailing comma after rest element
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-elision-invalid.js:33:11]
 32 │ 
 33 │ for ([...x,] of [[]]) ;
    ·           ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-init.js:34:6]
 33 │ 
 34 │ for ([...x = 1] of [[]]) ;
    ·      ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ([...[(x, y)]] of [[[]]]) ;
    ·      ─────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-nested-array-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ([...[x[yield]]] of [[]]) ;
    ·             ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ([...{ get x() {} }] of [[[]]]) ;
    ·      ───────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-nested-obj-yield-ident-invalid.js:33:16]
 32 │ 
 33 │ for ([...{ x = yield }] of [[{}]]) ;
    ·                ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/array-rest-yield-ident-invalid.js:34:12]
 33 │ 
 34 │ for ([...x[yield]] of [[]]) ;
    ·            ─────
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (const [x] = 1 of []) {}
    ·      ─────────────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-init-ary.js:52:16]
 51 │ 
 52 │ for (const [...[ x ] = []] of [[]]) {
    ·                ──────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-init-id.js:52:16]
 51 │ 
 52 │ for (const [...x = []] of [[]]) {
    ·                ──────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-init-obj.js:52:16]
 51 │ 
 52 │ for (const [...{ x } = []] of [[]]) {
    ·                ──────────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-not-final-ary.js:52:13]
 51 │ 
 52 │ for (const [...[x], y] of [[1, 2, 3]]) {
    ·             ──────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-not-final-id.js:52:13]
 51 │ 
 52 │ for (const [...x, y] of [[1, 2, 3]]) {
    ·             ────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/const-ary-ptrn-rest-not-final-obj.js:52:13]
 51 │ 
 52 │ for (const [...{ x }, y] of [[1, 2, 3]]) {
    ·             ────────
 53 │   
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/const-obj-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (const {x} = 1 of []) {}
    ·      ─────────────
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (let [x] = 1 of []) {}
    ·      ───────────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-init-ary.js:52:14]
 51 │ 
 52 │ for (let [...[ x ] = []] of [[]]) {
    ·              ──────────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-init-id.js:52:14]
 51 │ 
 52 │ for (let [...x = []] of [[]]) {
    ·              ──────
 53 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-init-obj.js:52:14]
 51 │ 
 52 │ for (let [...{ x } = []] of [[]]) {
    ·              ──────────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-not-final-ary.js:52:11]
 51 │ 
 52 │ for (let [...[x], y] of [[1, 2, 3]]) {
    ·           ──────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-not-final-id.js:52:11]
 51 │ 
 52 │ for (let [...x, y] of [[1, 2, 3]]) {
    ·           ────
 53 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/let-ary-ptrn-rest-not-final-obj.js:52:11]
 51 │ 
 52 │ for (let [...{ x }, y] of [[1, 2, 3]]) {
    ·           ────────
 53 │   
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/let-obj-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (let {x} = 1 of []) {}
    ·      ───────────
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/for-of/dstr/obj-id-identifier-yield-expr.js:33:8]
 32 │ 
 33 │ for ({ yield } of [{}]) ;
    ·        ─────
 34 │ 
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-id-identifier-yield-ident-invalid.js:33:8]
 32 │ 
 33 │ for ({ yield } of [{}]) ;
    ·        ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-of/dstr/obj-id-init-simple-strict.js:33:8]
 32 │ 
 33 │ for ({ eval = 0 } of [{}]) ;
    ·        ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-id-init-yield-ident-invalid.js:33:12]
 32 │ 
 33 │ for ({ x = yield } of [{}]) ;
    ·            ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/for-of/dstr/obj-id-simple-strict.js:33:8]
 32 │ 
 33 │ for ({ eval } of [{}]) ;
    ·        ────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-elem-init-yield-ident-invalid.js:33:15]
 32 │ 
 33 │ for ({ x: x = yield } of [{}]) ;
    ·               ─────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-elem-target-memberexpr-optchain-prop-ref-init.js:66:11]
 65 │ 
 66 │ for ({ x: y?.z = 42 } of [{ x: 23 }]) ;
    ·           ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-elem-target-obj-literal-optchain-prop-ref-init.js:65:11]
 64 │     
 65 │ ╭─▶ for ({ x: {
 66 │ │     set y(val) {
 67 │ │       throw new Test262Error('The property should not be accessed.');
 68 │ │     }
 69 │ ╰─▶ }?.y = 42} of [{x: 42}]) ;
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-elem-target-yield-ident-invalid.js:33:13]
 32 │ 
 33 │ for ({ x: x[yield] } of [{}]) ;
    ·             ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-nested-array-invalid.js:33:6]
 32 │ 
 33 │ for ({ x: [(x, y)] } of [{ x: [] }]) ;
    ·      ───────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-nested-array-yield-ident-invalid.js:33:16]
 32 │ 
 33 │ for ({ x: [x = yield] } of [{ x: [] }]) ;
    ·                ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-nested-obj-invalid.js:33:6]
 32 │ 
 33 │ for ({ x: { get x() {} } } of [{ x: {} }]) ;
    ·      ─────────────────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/for-of/dstr/obj-prop-nested-obj-yield-ident-invalid.js:33:17]
 32 │ 
 33 │ for ({ x: { x = yield } } of [{ x: {} }]) ;
    ·                 ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/dstr/obj-rest-not-last-element-invalid.js:34:6]
 33 │ 
 34 │ for ({...rest, b} of [{}
    ·      ────────────
 35 │ ]) ;
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (var [x] = 1 of []) {}
    ·      ───────────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-init-ary.js:49:14]
 48 │ 
 49 │ for (var [...[ x ] = []] of [[]]) {
    ·              ──────────
 50 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-init-id.js:49:14]
 48 │ 
 49 │ for (var [...x = []] of [[]]) {
    ·              ──────
 50 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-init-obj.js:49:14]
 48 │ 
 49 │ for (var [...{ x } = []] of [[]]) {
    ·              ──────────
 50 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-not-final-ary.js:49:11]
 48 │ 
 49 │ for (var [...[x], y] of [[1, 2, 3]]) {
    ·           ──────
 50 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-not-final-id.js:49:11]
 48 │ 
 49 │ for (var [...x, y] of [[1, 2, 3]]) {
    ·           ────
 50 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/for-of/dstr/var-ary-ptrn-rest-not-final-obj.js:49:11]
 48 │ 
 49 │ for (var [...{ x }, y] of [[1, 2, 3]]) {
    ·           ────────
 50 │   
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/dstr/var-obj-ptrn-init-err.js:18:6]
 17 │ 
 18 │ for (var {x} = 1 of []) {}
    ·      ───────────
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/for-of/escaped-of.js:24:12]
 23 │ 
 24 │ for (var x o\u0066 []) ;
    ·            ───────
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-of/head-const-bound-names-dup.js:18:13]
 17 │ 
 18 │ for (const [x, x] of []) {}
    ·             ┬  ┬
    ·             │  ╰── It can not be redeclared here
    ·             ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-of/head-const-bound-names-in-stmt.js:18:12]
 17 │ 
 18 │ for (const x of []) {
    ·            ┬
    ·            ╰── `x` has already been declared here
 19 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 20 │ }
    ╰────

  × `let` cannot be declared as a variable name inside of a `const` declaration
    ╭─[test262/test/language/statements/for-of/head-const-bound-names-let.js:17:12]
 16 │ 
 17 │ for (const let of []) {}
    ·            ───
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/head-const-init.js:18:6]
 17 │ 
 18 │ for (const x = 1 of []) {}
    ·      ───────────
    ╰────

  × Expected `)` but found `,`
    ╭─[test262/test/language/statements/for-of/head-decl-no-expr.js:18:17]
 17 │ 
 18 │ for (let x of [], []) {}
    ·                 ┬
    ·                 ╰── `)` expected
    ╰────

  × Expected `)` but found `,`
    ╭─[test262/test/language/statements/for-of/head-expr-no-expr.js:19:13]
 18 │ var x;
 19 │ for (x of [], []) {}
    ·             ┬
    ·             ╰── `)` expected
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-of/head-let-bound-names-dup.js:18:11]
 17 │ 
 18 │ for (let [x, x] of []) {}
    ·           ┬  ┬
    ·           │  ╰── It can not be redeclared here
    ·           ╰── `x` has already been declared here
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/for-of/head-let-bound-names-in-stmt.js:18:10]
 17 │ 
 18 │ for (let x of []) {
    ·          ┬
    ·          ╰── `x` has already been declared here
 19 │   var x;
    ·       ┬
    ·       ╰── It can not be redeclared here
 20 │ }
    ╰────

  × `let` cannot be declared as a variable name inside of a `let` declaration
    ╭─[test262/test/language/statements/for-of/head-let-bound-names-let.js:17:10]
 16 │ 
 17 │ for (let let of []) {}
    ·          ───
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/head-let-init.js:18:6]
 17 │ 
 18 │ for (let x = 1 of []) {}
    ·      ─────────
    ╰────

  × The left-hand side of a `for...of` statement may not be `async`
    ╭─[test262/test/language/statements/for-of/head-lhs-async-invalid.js:18:6]
 17 │ var async;
 18 │ for (async of [1]) ;
    ·      ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/head-lhs-cover-non-asnmt-trgt.js:25:6]
 24 │ 
 25 │ for ((this) of []) {}
    ·      ──────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/head-lhs-invalid-asnmt-ptrn-ary.js:21:6]
 20 │ 
 21 │ for ([(x, y)] of []) {}
    ·      ────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/head-lhs-invalid-asnmt-ptrn-obj.js:21:6]
 20 │ 
 21 │ for ({ m() {} } of []) {}
    ·      ──────────
    ╰────

  × Expected `;` but found `[`
    ╭─[test262/test/language/statements/for-of/head-lhs-let.js:26:14]
 25 │ 
 26 │ for ( let of [] ) ;
    ·              ┬
    ·              ╰── `;` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/for-of/head-lhs-non-asnmt-trgt.js:19:6]
 18 │ 
 19 │ for (this of []) {}
    ·      ────
    ╰────

  × for-of loop variable declaration may not have an initializer
    ╭─[test262/test/language/statements/for-of/head-var-init.js:18:6]
 17 │ 
 18 │ for (var x = 1 of []) {}
    ·      ─────────
    ╰────

  × Expected `)` but found `,`
    ╭─[test262/test/language/statements/for-of/head-var-no-expr.js:18:17]
 17 │ 
 18 │ for (var x of [], []) {}
    ·                 ┬
    ·                 ╰── `)` expected
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/labelled-fn-stmt-const.js:19:37]
 18 │ 
 19 │ for (const x of []) label1: label2: function f() {}
    ·                                     ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/labelled-fn-stmt-let.js:19:35]
 18 │ 
 19 │ for (let x of []) label1: label2: function f() {}
    ·                                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/labelled-fn-stmt-lhs.js:19:31]
 18 │ 
 19 │ for (x of []) label1: label2: function f() {}
    ·                               ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/for-of/labelled-fn-stmt-var.js:19:35]
 18 │ 
 19 │ for (var x of []) label1: label2: function f() {}
    ·                                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/for-of/let-array-with-newline.js:20:19]
 19 │     
 20 │ ╭─▶ for (var x of []) let
 21 │ ╰─▶ [a] = 0;
    ╰────
  help: Wrap this declaration in a block statement

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/13.0_4-5gs.js:18:28]
 17 │ 
 18 │ function _13_0_4_5_fun() { eval = 42; };
    ·                            ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/13.1-13gs.js:18:10]
 17 │ 
 18 │ function arguments() { };
    ·          ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/13.1-1gs.js:19:22]
 18 │ 
 19 │ function _13_1_1_fun(eval) { }
    ·                      ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/13.1-4gs.js:19:29]
 18 │ 
 19 │ var _13_1_4_fun = function (arguments) { };
    ·                             ─────────
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/13.1-5gs.js:18:22]
 17 │ 
 18 │ function _13_1_5_fun(param, param) { }
    ·                      ──┬──  ──┬──
    ·                        │      ╰── It can not be redeclared here
    ·                        ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/13.1-8gs.js:18:29]
 17 │ 
 18 │ var _13_1_8_fun = function (param, param) { };
    ·                             ──┬──  ──┬──
    ·                               │      ╰── It can not be redeclared here
    ·                               ╰── `param` has already been declared here
    ╰────

  × Invalid Unicode escape sequence
    ╭─[test262/test/language/statements/function/S13_A7_T3.js:16:20]
 15 │ 
 16 │ function __func(){\A\B\C};
    ·                    ─
    ╰────

  × Invalid Unicode escape sequence
    ╭─[test262/test/language/statements/function/S13_A7_T3.js:16:22]
 15 │ 
 16 │ function __func(){\A\B\C};
    ·                      ─
    ╰────

  × Invalid Unicode escape sequence
    ╭─[test262/test/language/statements/function/S13_A7_T3.js:16:24]
 15 │ 
 16 │ function __func(){\A\B\C};
    ·                        ─
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/function/array-destructuring-param-strict-body.js:133:3]
 132 │ function f([element]) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/function/dflt-params-duplicates.js:61:12]
 60 │ 
 61 │ function f(x = 0, x) {
    ·            ┬      ┬
    ·            │      ╰── It can not be redeclared here
    ·            ╰── `x` has already been declared here
 62 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dflt-params-rest.js:65:15]
 64 │ 
 65 │ function f(...x = []) {
    ·               ──────
 66 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-init-ary.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...[ x ] = []]) {
    ·                ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-init-id.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...x = []]) {
    ·                ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-init-obj.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...{ x } = []]) {
    ·                ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-not-final-ary.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...[x], y]) {
    ·             ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-not-final-id.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...x, y]) {
    ·             ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/ary-ptrn-rest-not-final-obj.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...{ x }, y]) {
    ·             ────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-init-ary.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...[ x ] = []] = []) {
    ·                ──────────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-init-id.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...x = []] = []) {
    ·                ──────
 55 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-init-obj.js:54:16]
 53 │ var callCount = 0;
 54 │ function f([...{ x } = []] = []) {
    ·                ──────────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-not-final-ary.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...[x], y] = [1, 2, 3]) {
    ·             ──────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-not-final-id.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...x, y] = [1, 2, 3]) {
    ·             ────
 55 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/function/dstr/dflt-ary-ptrn-rest-not-final-obj.js:54:13]
 53 │ var callCount = 0;
 54 │ function f([...{ x }, y] = [1, 2, 3]) {
    ·             ────────
 55 │   
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/function/early-body-super-call.js:18:3]
 17 │ function f() {
 18 │   super();
    ·   ───────
 19 │ }
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/statements/function/early-body-super-prop.js:18:3]
 17 │ function f() {
 18 │   super.x;
    ·   ─────
 19 │ }
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/function/early-errors/invalid-names-call-expression-bad-reference.js:41:30]
 40 │ 
 41 │ function fn() { (() => {})().#x }
    ·                              ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/function/early-errors/invalid-names-call-expression-this.js:41:32]
 40 │ 
 41 │ function fn() { (() => this)().#x }
    ·                                ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/function/early-errors/invalid-names-member-expression-bad-reference.js:41:27]
 40 │ 
 41 │ function fn() { something.#x }
    ·                           ──
    ╰────

  × Private identifier '#x' is not allowed outside class bodies
    ╭─[test262/test/language/statements/function/early-errors/invalid-names-member-expression-this.js:41:22]
 40 │ 
 41 │ function fn() { this.#x }
    ·                      ──
    ╰────

  × Super calls are not permitted outside constructors or in nested functions inside constructors.
    ╭─[test262/test/language/statements/function/early-params-super-call.js:17:16]
 16 │ 
 17 │ function f(x = super()) {}
    ·                ───────
    ╰────

  × 'super' can only be referenced in members of derived classes or object literal expressions.
    ╭─[test262/test/language/statements/function/early-params-super-prop.js:17:16]
 16 │ 
 17 │ function f(x = super.x) {}
    ·                ─────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/enable-strict-via-body.js:24:9]
 23 │         "use strict";
 24 │         eval = 42;
    ·         ────
 25 │     }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/enable-strict-via-outer-body.js:24:9]
 23 │     function _13_0_11_inner() {
 24 │         eval = 42;
    ·         ────
 25 │     }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/enable-strict-via-outer-script.js:24:9]
 23 │     function _13_0_9_inner() {
 24 │         eval = 42;
    ·         ────
 25 │     }
    ╰────

  × Expected `(` but found `,`
    ╭─[test262/test/language/statements/function/invalid-2-names.js:17:11]
 16 │ 
 17 │ function x, y() {}
    ·           ┬
    ·           ╰── `(` expected
    ╰────

  × Expected `(` but found `,`
    ╭─[test262/test/language/statements/function/invalid-3-names.js:17:11]
 16 │ 
 17 │ function x,y,z(){}
    ·           ┬
    ·           ╰── `(` expected
    ╰────

  × Unterminated regular expression
    ╭─[test262/test/language/statements/function/invalid-function-body-1.js:18:19]
 17 │ 
 18 │ function __func(){/ ABC}
    ·                   ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/function/invalid-function-body-2.js:18:19]
 17 │ 
 18 │ function __func(){&1}
    ·                   ─
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/statements/function/invalid-function-body-3.js:18:20]
 17 │ 
 18 │ function __func(){# ABC}
    ·                    ─
    ╰────

  × Expected `(` but found `.`
    ╭─[test262/test/language/statements/function/invalid-name-dot.js:17:13]
 16 │ 
 17 │ function obj.tt() {}
    ·             ┬
    ·             ╰── `(` expected
    ╰────

  × Expected `(` but found `.`
    ╭─[test262/test/language/statements/function/invalid-name-two-dots.js:17:13]
 16 │ 
 17 │ function obj.tt.ss() {}
    ·             ┬
    ·             ╰── `(` expected
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/name-arguments-strict-body.js:18:10]
 17 │ 
 18 │ function arguments() { 'use strict'; }
    ·          ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/name-arguments-strict.js:18:10]
 17 │ 
 18 │ function arguments() { }
    ·          ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/name-eval-strict-body.js:18:10]
 17 │ 
 18 │ function eval() { 'use strict'; }
    ·          ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/name-eval-strict.js:18:10]
 17 │ 
 18 │ function eval() { }
    ·          ────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/function/object-destructuring-param-strict-body.js:133:3]
 132 │ function f({property}) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/param-arguments-strict-body.js:22:23]
 21 │ 
 22 │ function _13_1_20_fun(arguments) { 'use strict'; }
    ·                       ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/function/param-arguments-strict.js:23:22]
 22 │ 
 23 │ function _13_1_3_fun(arguments) { }
    ·                      ─────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/function/param-dflt-yield-strict.js:23:18]
 22 │ function *g() {
 23 │   function f(x = yield) {
    ·                  ─────
 24 │     paramValue = x;
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-1.js:23:22]
 22 │ 
 23 │ function _13_1_5_fun(param, param) { }
    ·                      ──┬──  ──┬──
    ·                        │      ╰── It can not be redeclared here
    ·                        ╰── `param` has already been declared here
    ╰────

  × Identifier `param1` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-2.js:24:22]
 23 │ 
 24 │ function _13_1_6_fun(param1, param2, param1) { }
    ·                      ───┬──          ───┬──
    ·                         │               ╰── It can not be redeclared here
    ·                         ╰── `param1` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-3.js:23:22]
 22 │ 
 23 │ function _13_1_7_fun(param, param, param) { }
    ·                      ──┬──  ──┬──
    ·                        │      ╰── It can not be redeclared here
    ·                        ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-3.js:23:22]
 22 │ 
 23 │ function _13_1_7_fun(param, param, param) { }
    ·                      ──┬──         ──┬──
    ·                        │             ╰── It can not be redeclared here
    ·                        ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-body-1.js:22:23]
 21 │ 
 22 │ function _13_1_24_fun(param, param) { 'use strict'; }
    ·                       ──┬──  ──┬──
    ·                         │      ╰── It can not be redeclared here
    ·                         ╰── `param` has already been declared here
    ╰────

  × Identifier `param1` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-body-2.js:23:23]
 22 │ 
 23 │ function _13_1_26_fun(param1, param2, param1) { 'use strict'; }
    ·                       ───┬──          ───┬──
    ·                          │               ╰── It can not be redeclared here
    ·                          ╰── `param1` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-body-3.js:22:23]
 21 │ 
 22 │ function _13_1_28_fun(param, param, param) { 'use strict'; }
    ·                       ──┬──  ──┬──
    ·                         │      ╰── It can not be redeclared here
    ·                         ╰── `param` has already been declared here
    ╰────

  × Identifier `param` has already been declared
    ╭─[test262/test/language/statements/function/param-duplicated-strict-body-3.js:22:23]
 21 │ 
 22 │ function _13_1_28_fun(param, param, param) { 'use strict'; }
    ·                       ──┬──         ──┬──
    ·                         │             ╰── It can not be redeclared here
    ·                         ╰── `param` has already been declared here
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/param-eval-strict-body.js:22:23]
 21 │ 
 22 │ function _13_1_16_fun(eval) { 'use strict'; }
    ·                       ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/function/param-eval-strict.js:23:22]
 22 │ 
 23 │ function _13_1_1_fun(eval) { }
    ·                      ────
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/function/rest-param-strict-body.js:133:3]
 132 │ function f(a,...rest) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/function/rest-params-trailing-comma-early-error.js:57:12]
 56 │ 
 57 │ function f(...a,) {
    ·            ────
 58 │   
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/function/static-init-await-binding-invalid.js:25:14]
 24 │   static {
 25 │     function await() {}
    ·              ─────
 26 │   }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/statements/function/use-strict-with-non-simple-param.js:21:3]
 20 │ function f(a = 0) {
 21 │   "use strict";
    ·   ─────────────
 22 │ }
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/generators/array-destructuring-param-strict-body.js:133:3]
 132 │ function* f([element]) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/generators/dflt-params-duplicates.js:61:13]
 60 │ 
 61 │ function* f(x = 0, x) {
    ·             ┬      ┬
    ·             │      ╰── It can not be redeclared here
    ·             ╰── `x` has already been declared here
 62 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dflt-params-rest.js:65:16]
 64 │ 
 65 │ function* f(...x = []) {
    ·                ──────
 66 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-init-ary.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...[ x ] = []]) {
    ·                 ──────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-init-id.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...x = []]) {
    ·                 ──────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-init-obj.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...{ x } = []]) {
    ·                 ──────────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-not-final-ary.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...[x], y]) {
    ·              ──────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-not-final-id.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...x, y]) {
    ·              ────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/ary-ptrn-rest-not-final-obj.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...{ x }, y]) {
    ·              ────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-init-ary.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...[ x ] = []] = []) {
    ·                 ──────────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-init-id.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...x = []] = []) {
    ·                 ──────
 54 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-init-obj.js:53:17]
 52 │ var callCount = 0;
 53 │ function* f([...{ x } = []] = []) {
    ·                 ──────────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-not-final-ary.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...[x], y] = [1, 2, 3]) {
    ·              ──────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-not-final-id.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...x, y] = [1, 2, 3]) {
    ·              ────
 54 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/generators/dstr/dflt-ary-ptrn-rest-not-final-obj.js:53:14]
 52 │ var callCount = 0;
 53 │ function* f([...{ x }, y] = [1, 2, 3]) {
    ·              ────────
 54 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/generators/object-destructuring-param-strict-body.js:133:3]
 132 │ function* f({property}) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × yield expression not allowed in formal parameter
    ╭─[test262/test/language/statements/generators/param-dflt-yield.js:25:17]
 24 │ 
 25 │ function* g(x = yield) {}
    ·                 ──┬──
    ·                   ╰── yield expression not allowed in formal parameter
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
     ╭─[test262/test/language/statements/generators/rest-param-strict-body.js:133:3]
 132 │ function* f(a,...rest) {
 133 │   "use strict";
     ·   ─────────────
 134 │ }
     ╰────

  × A rest parameter must be last in a parameter list
    ╭─[test262/test/language/statements/generators/rest-params-trailing-comma-early-error.js:58:13]
 57 │ 
 58 │ function* f(...a,) {
    ·             ────
 59 │   
    ╰────

  × Illegal 'use strict' directive in function with non-simple parameter list
    ╭─[test262/test/language/statements/generators/use-strict-with-non-simple-param.js:22:3]
 21 │ function* f(a = 0) {
 22 │   "use strict";
    ·   ─────────────
 23 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-as-binding-identifier-escaped.js:29:7]
 28 │ function *gen() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-as-binding-identifier-escaped.js:29:7]
 28 │ function *gen() {
 29 │   var yi\u0065ld;
    ·       ──────────
 30 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-as-binding-identifier.js:29:7]
 28 │ function *gen() {
 29 │   var yield;
    ·       ─────
 30 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-as-binding-identifier.js:29:7]
 28 │ function *gen() {
 29 │   var yield;
    ·       ─────
 30 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-as-identifier-reference-escaped.js:29:8]
 28 │ function *gen() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-as-identifier-reference-escaped.js:29:8]
 28 │ function *gen() {
 29 │   void yi\u0065ld;
    ·        ──────────
 30 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-as-identifier-reference.js:29:8]
 28 │ function *gen() {
 29 │   void yield;
    ·        ─────
 30 │ }
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-as-identifier-reference.js:29:8]
 28 │ function *gen() {
 29 │   void yield;
    ·        ─────
 30 │ }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/generators/yield-as-label-identifier-escaped.js:29:3]
 28 │ function *gen() {
 29 │   yi\u0065ld: ;
    ·   ──────────
 30 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/generators/yield-as-label-identifier-escaped.js:29:13]
 28 │ function *gen() {
 29 │   yi\u0065ld: ;
    ·             ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/generators/yield-as-label-identifier.js:29:8]
 28 │ function *gen() {
 29 │   yield: ;
    ·        ▲
 30 │ }
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/statements/generators/yield-as-logical-or-expression.js:19:9]
 18 │ function* g() {
 19 │   yield ? yield : yield
    ·         ─
 20 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-as-parameter.js:18:13]
 17 │ 
 18 │ function* g(yield) {}
    ·             ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-as-parameter.js:18:13]
 17 │ 
 18 │ function* g(yield) {}
    ·             ─────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-identifier-spread-strict.js:35:15]
 34 │        ...(function() {
 35 │           var yield;
    ·               ─────
 36 │           throw new Test262Error();
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/generators/yield-identifier-strict.js:27:11]
 26 │   (function() {
 27 │       var yield;
    ·           ─────
 28 │       throw new Test262Error();
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/generators/yield-star-after-newline.js:19:3]
 18 │   yield
 19 │   * 1
    ·   ─
 20 │ }
    ╰────

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/generators/yield-weak-binding.js:17:27]
 16 │ 
 17 │ function* g() { yield 3 + yield 4; }
    ·                           ─────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/generators/yield-weak-binding.js:17:32]
 16 │ 
 17 │ function* g() { yield 3 + yield 4; }
    ·                                ▲
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/statements/if/S12.5_A11.js:18:6]
 17 │ //CHECK#
 18 │ if({1})
    ·      ─
 19 │   {
    ╰────

  × Expected `(` but found `true`
    ╭─[test262/test/language/statements/if/S12.5_A6_T1.js:18:4]
 17 │ //CHECK#1
 18 │ if true;
    ·    ──┬─
    ·      ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `false`
    ╭─[test262/test/language/statements/if/S12.5_A6_T2.js:18:4]
 17 │ //CHECK#2
 18 │ if false;
    ·    ──┬──
    ·      ╰── `(` expected
 19 │ //
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/if/S12.5_A8.js:18:4]
 17 │ //CHECK#1
 18 │ if();
    ·    ─
 19 │ //
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-fun-else-async-fun.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  } else async function _f() {}
    ·           ──────────────────
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-fun-else-async-fun.js:21:40]
 20 │ 
 21 │ if (true) async function f() {  } else async function _f() {}
    ·                                        ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-fun-else-async-fun.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  } else async function _f() {}
    ·           ───────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-fun-else-async-fun.js:21:40]
 20 │ 
 21 │ if (true) async function f() {  } else async function _f() {}
    ·                                        ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-fun-else-stmt.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  } else ;
    ·           ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-fun-else-stmt.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  } else ;
    ·           ───────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-fun-no-else.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  }
    ·           ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-fun-no-else.js:21:11]
 20 │ 
 21 │ if (true) async function f() {  }
    ·           ───────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-gen-else-async-gen.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  } else async function* _f() {}
    ·           ───────────────────
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-gen-else-async-gen.js:21:41]
 20 │ 
 21 │ if (true) async function* f() {  } else async function* _f() {}
    ·                                         ────────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-gen-else-async-gen.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  } else async function* _f() {}
    ·           ────────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-gen-else-async-gen.js:21:41]
 20 │ 
 21 │ if (true) async function* f() {  } else async function* _f() {}
    ·                                         ───────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-gen-else-stmt.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  } else ;
    ·           ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-gen-else-stmt.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  } else ;
    ·           ────────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-async-gen-no-else.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  }
    ·           ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-async-gen-no-else.js:21:11]
 20 │ 
 21 │ if (true) async function* f() {  }
    ·           ────────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/if/if-cls-else-cls.js:15:11]
 14 │ 
 15 │ if (true) class C {} else class D {}
    ·           ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/if/if-cls-else-cls.js:15:27]
 14 │ 
 15 │ if (true) class C {} else class D {}
    ·                           ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/if/if-cls-else-stmt.js:15:11]
 14 │ 
 15 │ if (true) class C {} else ;
    ·           ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/if/if-cls-no-else.js:15:11]
 14 │ 
 15 │ if (true) class C {}
    ·           ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/if-const-else-const.js:15:11]
 14 │ 
 15 │ if (true) const x = null; else const y = null;
    ·           ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/if-const-else-const.js:15:32]
 14 │ 
 15 │ if (true) const x = null; else const y = null;
    ·                                ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/if-const-else-stmt.js:15:11]
 14 │ 
 15 │ if (true) const x = null; else ;
    ·           ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/if-const-no-else.js:15:11]
 14 │ 
 15 │ if (true) const x = null;
    ·           ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-decl-else-decl-strict.js:25:11]
 24 │ 
 25 │ if (true) function f() {  } else function _f() {}
    ·           ─────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-decl-else-decl-strict.js:25:34]
 24 │ 
 25 │ if (true) function f() {  } else function _f() {}
    ·                                  ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-decl-else-stmt-strict.js:25:11]
 24 │ 
 25 │ if (true) function f() {  } else ;
    ·           ─────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-decl-no-else-strict.js:25:11]
 24 │ 
 25 │ if (true) function f() {  }
    ·           ─────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-fun-else-fun-strict.js:26:11]
 25 │ 
 26 │ if (true) function f() {} else function _f() {}
    ·           ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-fun-else-fun-strict.js:26:32]
 25 │ 
 26 │ if (true) function f() {} else function _f() {}
    ·                                ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-fun-else-stmt-strict.js:26:11]
 25 │ 
 26 │ if (true) function f() {} else ;
    ·           ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-fun-no-else-strict.js:26:11]
 25 │ 
 26 │ if (true) function f() {}
    ·           ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-gen-else-gen.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  } else function* _g() {}
    ·           ─────────────
    ╰────

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-gen-else-gen.js:16:35]
 15 │ 
 16 │ if (true) function* g() {  } else function* _g() {}
    ·                                   ──────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-gen-else-gen.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  } else function* _g() {}
    ·           ──────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-gen-else-gen.js:16:35]
 15 │ 
 16 │ if (true) function* g() {  } else function* _g() {}
    ·                                   ─────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-gen-else-stmt.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  } else ;
    ·           ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-gen-else-stmt.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  } else ;
    ·           ──────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-gen-no-else.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  }
    ·           ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-gen-no-else.js:16:11]
 15 │ 
 16 │ if (true) function* g() {  }
    ·           ──────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/if/if-let-else-let.js:15:14]
 14 │ 
 15 │ if (true) let x; else let y;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/if/if-let-else-stmt.js:15:14]
 14 │ 
 15 │ if (true) let x; else ;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/if/if-let-no-else.js:15:14]
 14 │ 
 15 │ if (true) let x;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-stmt-else-async-fun.js:21:19]
 20 │ 
 21 │ if (false) ; else async function f() {  }
    ·                   ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-async-fun.js:21:19]
 20 │ 
 21 │ if (false) ; else async function f() {  }
    ·                   ───────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-stmt-else-async-gen.js:21:19]
 20 │ 
 21 │ if (false) ; else async function* f() {  }
    ·                   ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-async-gen.js:21:19]
 20 │ 
 21 │ if (false) ; else async function* f() {  }
    ·                   ────────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-cls.js:15:19]
 14 │ 
 15 │ if (false) ; else class C {}
    ·                   ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/if-stmt-else-const.js:15:19]
 14 │ 
 15 │ if (false) ; else const x = null;
    ·                   ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-decl-strict.js:29:19]
 28 │ 
 29 │ if (false) ; else function f() {  }
    ·                   ─────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-fun-strict.js:30:19]
 29 │ 
 30 │ if (false) ; else function f() {}
    ·                   ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/if/if-stmt-else-gen.js:16:19]
 15 │ 
 16 │ if (false) ; else function* g() {  }
    ·                   ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/if-stmt-else-gen.js:16:19]
 15 │ 
 16 │ if (false) ; else function* g() {  }
    ·                   ──────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/if/if-stmt-else-let.js:15:22]
 14 │ 
 15 │ if (false) ; else let x;
    ·                      ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/labelled-fn-stmt-first.js:30:28]
 29 │ 
 30 │ if (false) label1: label2: function test262() {} else ;
    ·                            ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/labelled-fn-stmt-lone.js:30:28]
 29 │ 
 30 │ if (false) label1: label2: function test262() {}
    ·                            ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid function declaration
    ╭─[test262/test/language/statements/if/labelled-fn-stmt-second.js:30:34]
 29 │ 
 30 │ if (true) ; else label1: label2: function test262() {}
    ·                                  ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/if/let-array-with-newline.js:20:12]
 19 │     
 20 │ ╭─▶ if (false) let
 21 │ ╰─▶ [a] = 0;
    ╰────
  help: Wrap this declaration in a block statement

  × A `continue` statement can only jump to a label of an enclosing `for`, `while` or `do while` statement.
    ╭─[test262/test/language/statements/labeled/continue.js:25:3]
 24 │ do {
 25 │   test262: {
    ·   ───┬───
    ·      ╰── This is an non-iteration statement
 26 │     continue test262;
    ·              ───┬───
    ·                 ╰── for this label
 27 │   }
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/labeled/decl-async-function.js:21:8]
 20 │ 
 21 │ label: async function f() {}
    ·        ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/labeled/decl-async-function.js:21:8]
 20 │ 
 21 │ label: async function f() {}
    ·        ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/labeled/decl-async-generator.js:21:8]
 20 │ 
 21 │ label: async function* g() {}
    ·        ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/labeled/decl-async-generator.js:21:8]
 20 │ 
 21 │ label: async function* g() {}
    ·        ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/labeled/decl-cls.js:15:8]
 14 │ 
 15 │ label: class C {}
    ·        ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/labeled/decl-const.js:15:8]
 14 │ 
 15 │ label: const x = null;
    ·        ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/labeled/decl-fun-strict.js:18:8]
 17 │ 
 18 │ label: function g() {}
    ·        ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/labeled/decl-gen.js:16:8]
 15 │ 
 16 │ label: function* g() {}
    ·        ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/labeled/decl-gen.js:16:8]
 15 │ 
 16 │ label: function* g() {}
    ·        ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/labeled/decl-let.js:15:11]
 14 │ 
 15 │ label: let x;
    ·           ▲
    ╰────
  help: Try insert a semicolon here

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/labeled/let-array-with-newline.js:22:8]
 21 │     if (false) {
 22 │ ╭─▶     L: let
 23 │ ╰─▶     [a] = 0;
 24 │     }
    ╰────
  help: Wrap this declaration in a block statement

  × Unexpected token
    ╭─[test262/test/language/statements/labeled/static-init-invalid-await.js:24:10]
 23 │   static {
 24 │     await: 0;
    ·          ─
 25 │   }
    ╰────

  × Keywords cannot contain escape characters
    ╭─[test262/test/language/statements/labeled/value-await-module-escaped.js:21:1]
 20 │ 
 21 │ aw\u0061it: 1;
    · ──────────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/labeled/value-await-module-escaped.js:21:11]
 20 │ 
 21 │ aw\u0061it: 1;
    ·           ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/labeled/value-await-module.js:20:6]
 19 │ 
 20 │ await: 1;
    ·      ─
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/labeled/value-yield-strict-escaped.js:23:1]
 22 │ 
 23 │ yi\u0065ld: 1;
    · ──────────
    ╰────

  × The keyword 'yield' is reserved
    ╭─[test262/test/language/statements/labeled/value-yield-strict.js:18:1]
 17 │ 
 18 │ yield: 1;
    · ─────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-init-ary.js:31:9]
 30 │ 
 31 │ let [...[ x ] = []] = [];
    ·         ──────────
 32 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-init-id.js:31:9]
 30 │ 
 31 │ let [...x = []] = [];
    ·         ──────
 32 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-init-obj.js:31:9]
 30 │ 
 31 │ let [...{ x } = []] = [];
    ·         ──────────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-not-final-ary.js:31:6]
 30 │ 
 31 │ let [...[x], y] = [1, 2, 3];
    ·      ──────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-not-final-id.js:31:6]
 30 │ 
 31 │ let [...x, y] = [1, 2, 3];
    ·      ────
 32 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/let/dstr/ary-ptrn-rest-not-final-obj.js:31:6]
 30 │ 
 31 │ let [...{ x }, y] = [1, 2, 3];
    ·      ────────
 32 │ 
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/let/redeclaration-error-from-within-strict-mode-function.js:14:35]
 13 │ $DONOTEVALUATE();
 14 │ (function() { 'use strict'; { let f; var f; } })
    ·                                   ┬      ┬
    ·                                   │      ╰── It can not be redeclared here
    ·                                   ╰── `f` has already been declared here
 15 │ 
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/let/static-init-await-binding-invalid.js:25:9]
 24 │   static {
 25 │     let await;
    ·         ─────
 26 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/let/static-init-await-binding-invalid.js:25:9]
 24 │   static {
 25 │     let await;
    ·         ─────
 26 │   }
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/let/syntax/identifier-let-allowed-as-lefthandside-expression-strict.js:17:6]
 16 │ var o = { a: 1 };
 17 │ for (let in o) { }
    ·      ───
 18 │ 
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/let/syntax/identifier-let-disallowed-as-boundname.js:14:10]
 13 │ $DONOTEVALUATE();
 14 │ for (let let in {}) { }
    ·          ───
 15 │ 
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/let/syntax/let-let-declaration-split-across-two-lines.js:34:1]
 33 │ let  // start of a LexicalDeclaration, *not* an ASI opportunity
 34 │ let;
    · ───
    ╰────

  × The keyword 'let' is reserved
    ╭─[test262/test/language/statements/let/syntax/let-let-declaration-with-initializer-split-across-two-lines.js:34:1]
 33 │ let  // start of a LexicalDeclaration, *not* an ASI opportunity
 34 │ let = "irrelevant initializer";
    · ───
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/let-newline-await-in-normal-function.js:24:10]
 23 │     let
 24 │     await 0;
    ·          ▲
 25 │ }
    ╰────
  help: Try insert a semicolon here

  × Cannot use `yield` as an identifier in a generator context
    ╭─[test262/test/language/statements/let/syntax/let-newline-yield-in-generator-function.js:25:5]
 24 │     let
 25 │     yield 0;
    ·     ─────
 26 │ }
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/let-newline-yield-in-generator-function.js:25:10]
 24 │     let
 25 │     yield 0;
    ·          ▲
 26 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/let-newline-yield-in-normal-function.js:23:10]
 22 │     let
 23 │     yield 0;
    ·          ▲
 24 │ }
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-do-statement-while-expression.js:15:7]
 14 │ $DONOTEVALUATE();
 15 │ do let x = 1; while (false)
    ·       ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-for-statement.js:15:18]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) let x = 1;
    ·                  ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-if-expression-statement-else-statement.js:15:22]
 14 │ $DONOTEVALUATE();
 15 │ if (true) {} else let x = 1;
    ·                      ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-if-expression-statement.js:15:14]
 14 │ $DONOTEVALUATE();
 15 │ if (true) let x = 1;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-label-statement.js:15:11]
 14 │ $DONOTEVALUATE();
 15 │ label: let x = 1;
    ·           ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/with-initialisers-in-statement-positions-while-expression-statement.js:15:18]
 14 │ $DONOTEVALUATE();
 15 │ while (false) let x = 1;
    ·                  ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-do-statement-while-expression.js:15:7]
 14 │ $DONOTEVALUATE();
 15 │ do let x; while (false)
    ·       ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-for-statement.js:15:18]
 14 │ $DONOTEVALUATE();
 15 │ for (;false;) let x;
    ·                  ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-if-expression-statement-else-statement.js:15:22]
 14 │ $DONOTEVALUATE();
 15 │ if (true) {} else let x;
    ·                      ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-if-expression-statement.js:15:14]
 14 │ $DONOTEVALUATE();
 15 │ if (true) let x;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-label-statement.js:15:11]
 14 │ $DONOTEVALUATE();
 15 │ label: let x;
    ·           ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/let/syntax/without-initialisers-in-statement-positions-while-expression-statement.js:15:18]
 14 │ $DONOTEVALUATE();
 15 │ while (false) let x;
    ·                  ▲
    ╰────
  help: Try insert a semicolon here

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T1.js:19:1]
 18 │ var x=1;
 19 │ return;
    · ──────
 20 │ var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T10.js:18:1]
 17 │ //CHECK#1
 18 │ return (0);
    · ──────
 19 │ //
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T2.js:19:1]
 18 │ var x=1;
 19 │ return x;
    · ──────
 20 │ var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T3.js:19:5]
 18 │ try {
 19 │     return 1;
    ·     ──────
 20 │ } catch(e){
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T3.js:21:5]
 20 │ } catch(e){
 21 │     return 1;
    ·     ──────
 22 │ }
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T4.js:18:1]
 17 │ //CHECK#1
 18 │ return;
    · ──────
 19 │ //
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T5.js:22:5]
 21 │     var x=1;
 22 │     return;
    ·     ──────
 23 │     var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T6.js:22:5]
 21 │     var x=1;
 22 │     return;
    ·     ──────
 23 │     var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T7.js:22:5]
 21 │     var x=1;
 22 │     return x;
    ·     ──────
 23 │     var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T8.js:22:5]
 21 │     var x=1;
 22 │     return x;
    ·     ──────
 23 │     var y=2;
    ╰────

  × TS(1108): A 'return' statement can only be used within a function body.
    ╭─[test262/test/language/statements/return/S12.9_A1_T9.js:21:5]
 20 │ } catch(e){
 21 │     return e;
    ·     ──────
 22 │ }
    ╰────

  × Identifier `default` has already been declared
    ╭─[test262/test/language/statements/switch/S12.11_A2_T1.js:22:5]
 21 │           result += 2;
 22 │ ╭─▶     default:
 23 │ │         result += 32;
 24 │ ├─▶       break;
    · ╰──── `default` has already been declared here
 25 │ ╭─▶     default:
 26 │ │         result += 32;
 27 │ ├─▶       break;
    · ╰──── It can not be redeclared here
 28 │       }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/switch/S12.11_A3_T1.js:19:10]
 18 │ 
 19 │   switch() {
    ·          ─
 20 │     case 0:
    ╰────

  × Expected `(` but found `{`
    ╭─[test262/test/language/statements/switch/S12.11_A3_T2.js:19:10]
 18 │ 
 19 │   switch {
    ·          ┬
    ·          ╰── `(` expected
 20 │     case 0:
    ╰────

  × Expected `{` but found `;`
    ╭─[test262/test/language/statements/switch/S12.11_A3_T3.js:16:14]
 15 │ 
 16 │ switch(value);
    ·              ┬
    ·              ╰── `{` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/switch/S12.11_A3_T4.js:22:9]
 21 │   switch(value) {
 22 │     case:
    ·         ─
 23 │       result += 2;
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/switch/S12.11_A3_T5.js:20:4]
 19 │   switch(value) {
 20 │     result =2;
    ·     ──────
 21 │     case 0:
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-async-function.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: async function f() {} }
    ·                                     ┬                              ┬
    ·                                     │                              ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-async-generator.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: async function* f() {} }
    ·                                     ┬                               ┬
    ·                                     │                               ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-class.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: class f {} }
    ·                                     ┬                     ┬
    ·                                     │                     ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-const.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: const f = 0 }
    ·                                     ┬                     ┬
    ·                                     │                     ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-function.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: function f() {} }
    ·                                     ┬                        ┬
    ·                                     │                        ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-generator.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: function* f() {} }
    ·                                     ┬                         ┬
    ·                                     │                         ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-let.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: let f }
    ·                                     ┬                   ┬
    ·                                     │                   ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-function-name-redeclaration-attempt-with-var.js:24:37]
 23 │ 
 24 │ switch (0) { case 1: async function f() {} default: var f }
    ·                                     ┬                   ┬
    ·                                     │                   ╰── It can not be redeclared here
    ·                                     ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-async-function.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: async function f() {} }
    ·                                      ┬                              ┬
    ·                                      │                              ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-async-generator.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: async function* f() {} }
    ·                                      ┬                               ┬
    ·                                      │                               ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-class.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: class f {} }
    ·                                      ┬                     ┬
    ·                                      │                     ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-const.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: const f = 0 }
    ·                                      ┬                     ┬
    ·                                      │                     ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-function.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: function f() {} }
    ·                                      ┬                        ┬
    ·                                      │                        ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-generator.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: function* f() {} }
    ·                                      ┬                         ┬
    ·                                      │                         ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-let.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: let f }
    ·                                      ┬                   ┬
    ·                                      │                   ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/async-generator-name-redeclaration-attempt-with-var.js:24:38]
 23 │ 
 24 │ switch (0) { case 1: async function* f() {} default: var f }
    ·                                      ┬                   ┬
    ·                                      │                   ╰── It can not be redeclared here
    ·                                      ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-async-function.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: class f {} default: async function f() {} }
    ·                            ┬                            ┬
    ·                            │                            ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-async-generator.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: class f {} default: async function* f() {} }
    ·                            ┬                             ┬
    ·                            │                             ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-class.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: class f {} default: class f {} }
    ·                            ┬                   ┬
    ·                            │                   ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-const.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: class f {} default: const f = 0 }
    ·                            ┬                   ┬
    ·                            │                   ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-function.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: class f {} default: function f() {} }
    ·                            ┬                      ┬
    ·                            │                      ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-generator.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: class f {} default: function* f() {} }
    ·                            ┬                       ┬
    ·                            │                       ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-let.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: class f {} default: let f }
    ·                            ┬                 ┬
    ·                            │                 ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/class-name-redeclaration-attempt-with-var.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: class f {} default: var f }
    ·                            ┬                 ┬
    ·                            │                 ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-async-function.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: const f = 0; default: async function f() {} }
    ·                            ┬                              ┬
    ·                            │                              ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-async-generator.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: const f = 0; default: async function* f() {} }
    ·                            ┬                               ┬
    ·                            │                               ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-class.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: const f = 0; default: class f {} }
    ·                            ┬                     ┬
    ·                            │                     ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-const.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: const f = 0; default: const f = 0 }
    ·                            ┬                     ┬
    ·                            │                     ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-function.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: const f = 0; default: function f() {} }
    ·                            ┬                        ┬
    ·                            │                        ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-generator.js:24:28]
 23 │ 
 24 │ switch (0) { case 1: const f = 0; default: function* f() {} }
    ·                            ┬                         ┬
    ·                            │                         ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-let.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: const f = 0; default: let f }
    ·                            ┬                   ┬
    ·                            │                   ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/const-name-redeclaration-attempt-with-var.js:23:28]
 22 │ 
 23 │ switch (0) { case 1: const f = 0; default: var f }
    ·                            ┬                   ┬
    ·                            │                   ╰── It can not be redeclared here
    ·                            ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-async-function.js:24:31]
 23 │ 
 24 │ switch (0) { case 1: function f() {} default: async function f() {} }
    ·                               ┬                              ┬
    ·                               │                              ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-async-generator.js:24:31]
 23 │ 
 24 │ switch (0) { case 1: function f() {} default: async function* f() {} }
    ·                               ┬                               ┬
    ·                               │                               ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-class.js:23:31]
 22 │ 
 23 │ switch (0) { case 1: function f() {} default: class f {} }
    ·                               ┬                     ┬
    ·                               │                     ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-const.js:23:31]
 22 │ 
 23 │ switch (0) { case 1: function f() {} default: const f = 0 }
    ·                               ┬                     ┬
    ·                               │                     ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-function.js:23:31]
 22 │ 
 23 │ switch (0) { case 1: function f() {} default: function f() {} }
    ·                               ┬                        ┬
    ·                               │                        ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-generator.js:24:31]
 23 │ 
 24 │ switch (0) { case 1: function f() {} default: function* f() {} }
    ·                               ┬                         ┬
    ·                               │                         ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-let.js:23:31]
 22 │ 
 23 │ switch (0) { case 1: function f() {} default: let f }
    ·                               ┬                   ┬
    ·                               │                   ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/function-name-redeclaration-attempt-with-var.js:23:31]
 22 │ 
 23 │ switch (0) { case 1: function f() {} default: var f }
    ·                               ┬                   ┬
    ·                               │                   ╰── It can not be redeclared here
    ·                               ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-async-function.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: async function f() {} }
    ·                                ┬                              ┬
    ·                                │                              ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-async-generator.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: async function* f() {} }
    ·                                ┬                               ┬
    ·                                │                               ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-class.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: class f {} }
    ·                                ┬                     ┬
    ·                                │                     ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-const.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: const f = 0 }
    ·                                ┬                     ┬
    ·                                │                     ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-function.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: function f() {} }
    ·                                ┬                        ┬
    ·                                │                        ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-generator.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: function* f() {} }
    ·                                ┬                         ┬
    ·                                │                         ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-let.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: let f }
    ·                                ┬                   ┬
    ·                                │                   ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/generator-name-redeclaration-attempt-with-var.js:24:32]
 23 │ 
 24 │ switch (0) { case 1: function* f() {} default: var f }
    ·                                ┬                   ┬
    ·                                │                   ╰── It can not be redeclared here
    ·                                ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-async-function.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: let f; default: async function f() {} }
    ·                          ┬                          ┬
    ·                          │                          ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-async-generator.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: let f; default: async function* f() {} }
    ·                          ┬                           ┬
    ·                          │                           ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-class.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: let f; default: class f {} }
    ·                          ┬                 ┬
    ·                          │                 ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-const.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: let f; default: const f = 0 }
    ·                          ┬                 ┬
    ·                          │                 ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-function.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: let f; default: function f() {} }
    ·                          ┬                    ┬
    ·                          │                    ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-generator.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: let f; default: function* f() {} }
    ·                          ┬                     ┬
    ·                          │                     ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-let.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: let f; default: let f }
    ·                          ┬               ┬
    ·                          │               ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/let-name-redeclaration-attempt-with-var.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: let f; default: var f }
    ·                          ┬               ┬
    ·                          │               ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-async-function.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: var f; default: async function f() {} }
    ·                          ┬                          ┬
    ·                          │                          ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-async-generator.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: var f; default: async function* f() {} }
    ·                          ┬                           ┬
    ·                          │                           ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-class.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: var f; default: class f {} }
    ·                          ┬                 ┬
    ·                          │                 ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-const.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: var f; default: const f = 0 }
    ·                          ┬                 ┬
    ·                          │                 ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-function.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: var f; default: function f() {} }
    ·                          ┬                    ┬
    ·                          │                    ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-generator.js:24:26]
 23 │ 
 24 │ switch (0) { case 1: var f; default: function* f() {} }
    ·                          ┬                     ┬
    ·                          │                     ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Identifier `f` has already been declared
    ╭─[test262/test/language/statements/switch/syntax/redeclaration/var-name-redeclaration-attempt-with-let.js:23:26]
 22 │ 
 23 │ switch (0) { case 1: var f; default: let f }
    ·                          ┬               ┬
    ·                          │               ╰── It can not be redeclared here
    ·                          ╰── `f` has already been declared here
    ╰────

  × Expected `{` but found `EOF`
    ╭─[test262/test/language/statements/try/S12.14_A16_T1.js:20:1]
 19 │ try
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T10.js:20:7]
 19 │ try{}
 20 │ catch(){}
    ·       ─
 21 │ finally{}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T11.js:24:3]
 23 │   }
 24 │   catch(e){}
    ·   ─────
 25 │   finally{}
    ╰────

  × Missing catch or finally clause
    ╭─[test262/test/language/statements/try/S12.14_A16_T12.js:23:4]
 22 │   {
 23 │   }
    ·    ▲
 24 │ }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T12.js:26:1]
 25 │ catch(e1){}
 26 │ catch(e2){}
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T13.js:24:7]
 23 │ }
 24 │ catch("22")
    ·       ────
 25 │ {
    ╰────

  × Expected `{` but found `(`
    ╭─[test262/test/language/statements/try/S12.14_A16_T14.js:19:4]
 18 │ // CHECK#1
 19 │ try(e1){
    ·    ┬
    ·    ╰── `{` expected
 20 │ }
    ╰────

  × Expected `{` but found `(`
    ╭─[test262/test/language/statements/try/S12.14_A16_T15.js:23:8]
 22 │ }
 23 │ finally(e){}
    ·        ┬
    ·        ╰── `{` expected
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T2.js:19:1]
 18 │ // CHECK#1
 19 │ catch
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T3.js:19:1]
 18 │ // CHECK#1
 19 │ finally
    · ───────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T5.js:22:7]
 21 │ try{}
 22 │ catch()
    ·       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T6.js:22:1]
 21 │ try{
 22 │ catch(){}
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T7.js:22:7]
 21 │ try{}
 22 │ catch(){
    ·       ─
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T8.js:22:7]
 21 │ try{}
 22 │ catch(){
    ·       ─
 23 │ finally{}
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/S12.14_A16_T9.js:19:1]
 18 │ // CHECK#1
 19 │ catch(){}
    · ─────
 20 │ finally{}
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/try/catch-parameter-boundnames-restriction-arguments-negative-early.js:17:16]
 16 │ 
 17 │ try { } catch (arguments) { }
    ·                ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/try/catch-parameter-boundnames-restriction-eval-negative-early.js:17:16]
 16 │ 
 17 │ try { } catch (eval) { }
    ·                ────
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-init-ary.js:33:14]
 32 │   throw [];
 33 │ } catch ([...[ x ] = []]) {
    ·              ──────────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-init-id.js:33:14]
 32 │   throw [];
 33 │ } catch ([...x = []]) {
    ·              ──────
 34 │   
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-init-obj.js:33:14]
 32 │   throw [];
 33 │ } catch ([...{ x } = []]) {
    ·              ──────────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-not-final-ary.js:33:11]
 32 │   throw [1, 2, 3];
 33 │ } catch ([...[x], y]) {
    ·           ──────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-not-final-id.js:33:11]
 32 │   throw [1, 2, 3];
 33 │ } catch ([...x, y]) {
    ·           ────
 34 │   
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/try/dstr/ary-ptrn-rest-not-final-obj.js:33:11]
 32 │   throw [1, 2, 3];
 33 │ } catch ([...{ x }, y]) {
    ·           ────────
 34 │   
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/try/early-catch-duplicates.js:17:17]
 16 │ 
 17 │ try { } catch ([x, x]) {}
    ·                 ┬  ┬
    ·                 │  ╰── It can not be redeclared here
    ·                 ╰── `x` has already been declared here
    ╰────

  × Identifier `e` has already been declared
    ╭─[test262/test/language/statements/try/early-catch-function.js:23:14]
 22 │     try {
 23 │     } catch (e) {
    ·              ┬
    ·              ╰── `e` has already been declared here
 24 │         function e(){}
    ·                  ┬
    ·                  ╰── It can not be redeclared here
 25 │     }
    ╰────

  × Identifier `x` has already been declared
    ╭─[test262/test/language/statements/try/early-catch-lex.js:18:16]
 17 │ 
 18 │ try { } catch (x) { let x; }
    ·                ┬        ┬
    ·                │        ╰── It can not be redeclared here
    ·                ╰── `x` has already been declared here
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/try/optional-catch-binding-parens.js:21:15]
 20 │ 
 21 │ try {} catch () {}
    ·               ─
 22 │ 
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/try/static-init-await-binding-invalid.js:25:19]
 24 │   static {
 25 │     try {} catch (await) {}
    ·                   ─────
 26 │   }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/12.2.1-1gs.js:18:10]
 17 │ 
 18 │ for (var eval in arrObj) { }
    ·          ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/12.2.1-4gs.js:18:5]
 17 │ 
 18 │ var arguments;
    ·     ─────────
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T1.js:18:6]
 17 │ //CHECK#1
 18 │ var x += 1;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T2.js:18:6]
 17 │ //CHECK#1
 18 │ var x | true;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T3.js:18:6]
 17 │ //CHECK#1
 18 │ var x && 1;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T4.js:18:6]
 17 │ //CHECK#1
 18 │ var x++;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Unexpected token
    ╭─[test262/test/language/statements/variable/S12.2_A8_T5.js:18:5]
 17 │ //CHECK#1
 18 │ var --x;
    ·     ──
 19 │ //
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T6.js:18:6]
 17 │ //CHECK#1
 18 │ var x*1;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T7.js:18:6]
 17 │ //CHECK#1
 18 │ var x>>1;
    ·      ▲
 19 │ //
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/variable/S12.2_A8_T8.js:20:6]
 19 │ //CHECK#1
 20 │ var x in __arr;
    ·      ▲
 21 │ //
    ╰────
  help: Try insert a semicolon here

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-final-init.js:20:10]
 19 │ function f() {
 20 │   var a, arguments = 42;
    ·          ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-final.js:20:15]
 19 │ function f() {
 20 │   var a = 42, arguments;
    ·               ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-first-init.js:19:7]
 18 │ function f() {
 19 │   var arguments = 42, a;
    ·       ─────────
 20 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-first.js:20:7]
 19 │ function f() {
 20 │   var arguments, a;
    ·       ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-middle-init.js:19:10]
 18 │ function f() {
 19 │   var a, arguments = 42, b;
    ·          ─────────
 20 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-middle.js:20:10]
 19 │ function f() {
 20 │   var a, arguments, b;
    ·          ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-repeated.js:20:7]
 19 │ function f() {
 20 │   var arguments, arguments = 42;
    ·       ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-list-repeated.js:20:18]
 19 │ function f() {
 20 │   var arguments, arguments = 42;
    ·                  ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-single-init.js:20:7]
 19 │ function f() {
 20 │   var arguments = 42;
    ·       ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-fn-strict-single.js:20:7]
 19 │ function f() {
 20 │   var arguments;
    ·       ─────────
 21 │ }
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-final-init.js:19:8]
 18 │ 
 19 │ var a, arguments = 42;
    ·        ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-final.js:17:13]
 16 │ 
 17 │ var a = 42, arguments;
    ·             ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-first-init.js:16:5]
 15 │ 
 16 │ var arguments = 42, a;
    ·     ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-first.js:17:5]
 16 │ 
 17 │ var arguments, a;
    ·     ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-middle-init.js:16:8]
 15 │ 
 16 │ var a, arguments = 42, b;
    ·        ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-middle.js:17:8]
 16 │ 
 17 │ var a, arguments, b;
    ·        ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-repeated.js:19:5]
 18 │ 
 19 │ var arguments, arguments = 42;
    ·     ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-list-repeated.js:19:16]
 18 │ 
 19 │ var arguments, arguments = 42;
    ·                ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-single-init.js:19:5]
 18 │ 
 19 │ var arguments = 42;
    ·     ─────────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/arguments-strict-single.js:17:5]
 16 │ 
 17 │ var arguments;
    ·     ─────────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-elem-id-static-init-await-invalid.js:25:10]
 24 │   static {
 25 │     var [await] = [];
    ·          ─────
 26 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-elem-id-static-init-await-invalid.js:25:10]
 24 │   static {
 25 │     var [await] = [];
    ·          ─────
 26 │   }
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-init-ary.js:30:9]
 29 │ 
 30 │ var [...[ x ] = []] = [];
    ·         ──────────
 31 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-init-id.js:30:9]
 29 │ 
 30 │ var [...x = []] = [];
    ·         ──────
 31 │ 
    ╰────

  × A rest parameter cannot have an initializer
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-init-obj.js:30:9]
 29 │ 
 30 │ var [...{ x } = []] = [];
    ·         ──────────
 31 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-not-final-ary.js:30:6]
 29 │ 
 30 │ var [...[x], y] = [1, 2, 3];
    ·      ──────
 31 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-not-final-id.js:30:6]
 29 │ 
 30 │ var [...x, y] = [1, 2, 3];
    ·      ────
 31 │ 
    ╰────

  × A rest element must be last in a destructuring pattern
    ╭─[test262/test/language/statements/variable/dstr/ary-ptrn-rest-not-final-obj.js:30:6]
 29 │ 
 30 │ var [...{ x }, y] = [1, 2, 3];
    ·      ────────
 31 │ 
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/variable/dstr/obj-ptrn-elem-id-static-init-await-invalid.js:25:10]
 24 │   static {
 25 │     var {await} = {};
    ·          ─────
 26 │   }
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-final-init.js:16:8]
 15 │ 
 16 │ var a, eval = 42;
    ·        ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-final.js:17:8]
 16 │ 
 17 │ var a, eval;
    ·        ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-first-init.js:19:5]
 18 │ 
 19 │ var eval = 42, a;
    ·     ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-first.js:17:5]
 16 │ 
 17 │ var eval, a = 42;
    ·     ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-middle-init.js:16:8]
 15 │ 
 16 │ var a, eval = 42, b;
    ·        ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-middle.js:16:8]
 15 │ 
 16 │ var a, eval, b;
    ·        ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-repeated.js:19:5]
 18 │ 
 19 │ var eval, eval;
    ·     ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-list-repeated.js:19:11]
 18 │ 
 19 │ var eval, eval;
    ·           ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-single-init.js:19:5]
 18 │ 
 19 │ var eval = 42;
    ·     ────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/eval-strict-single.js:19:5]
 18 │ 
 19 │ var eval;
    ·     ────
    ╰────

  × Cannot assign to 'arguments' in strict mode
    ╭─[test262/test/language/statements/variable/id-arguments-strict.js:17:5]
 16 │ 
 17 │ var arguments;
    ·     ─────────
    ╰────

  × Cannot assign to 'eval' in strict mode
    ╭─[test262/test/language/statements/variable/id-eval-strict.js:17:5]
 16 │ 
 17 │ var eval;
    ·     ────
    ╰────

  × Cannot use `await` as an identifier in an async context
    ╭─[test262/test/language/statements/variable/static-init-await-binding-invalid.js:25:9]
 24 │   static {
 25 │     var await;
    ·         ─────
 26 │   }
    ╰────

  × Cannot use await in class static initialization block
    ╭─[test262/test/language/statements/variable/static-init-await-binding-invalid.js:25:9]
 24 │   static {
 25 │     var await;
    ·         ─────
 26 │   }
    ╰────

  × Unexpected token
    ╭─[test262/test/language/statements/while/S12.6.2_A15.js:18:9]
 17 │ //CHECK#
 18 │ while({1}){
    ·         ─
 19 │    break ;
    ╰────

  × Expected `(` but found `decimal`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T1.js:18:7]
 17 │ //CHECK#1
 18 │ while 1 break;
    ·       ┬
    ·       ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `decimal`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T2.js:18:7]
 17 │ //CHECK#1
 18 │ while 0 break;
    ·       ┬
    ·       ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `true`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T3.js:18:7]
 17 │ //CHECK#1
 18 │ while true break;
    ·       ──┬─
    ·         ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `false`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T4.js:18:7]
 17 │ //CHECK#1
 18 │ while false break;
    ·       ──┬──
    ·         ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `string`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T5.js:18:7]
 17 │ //CHECK#1
 18 │ while '' break;
    ·       ─┬
    ·        ╰── `(` expected
 19 │ //
    ╰────

  × Expected `(` but found `string`
    ╭─[test262/test/language/statements/while/S12.6.2_A6_T6.js:18:7]
 17 │ //CHECK#1
 18 │ while 'hood' break;
    ·       ───┬──
    ·          ╰── `(` expected
 19 │ //
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/while/decl-async-fun.js:21:15]
 20 │ 
 21 │ while (false) async function f() {}
    ·               ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/while/decl-async-fun.js:21:15]
 20 │ 
 21 │ while (false) async function f() {}
    ·               ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/while/decl-async-gen.js:21:15]
 20 │ 
 21 │ while (false) async function* g() {}
    ·               ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/while/decl-async-gen.js:21:15]
 20 │ 
 21 │ while (false) async function* g() {}
    ·               ──────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Invalid class declaration
    ╭─[test262/test/language/statements/while/decl-cls.js:15:15]
 14 │ 
 15 │ while (false) class C {}
    ·               ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/while/decl-const.js:15:15]
 14 │ 
 15 │ while (false) const x = null;
    ·               ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/while/decl-fun.js:15:15]
 14 │ 
 15 │ while (false) function f() {}
    ·               ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/while/decl-gen.js:16:15]
 15 │ 
 16 │ while (false) function* g() {}
    ·               ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/while/decl-gen.js:16:15]
 15 │ 
 16 │ while (false) function* g() {}
    ·               ────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/while/decl-let.js:15:18]
 14 │ 
 15 │ while (false) let x;
    ·                  ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid function declaration
    ╭─[test262/test/language/statements/while/labelled-fn-stmt.js:19:31]
 18 │ 
 19 │ while (false) label1: label2: function f() {}
    ·                               ───────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/while/let-array-with-newline.js:20:15]
 19 │     
 20 │ ╭─▶ while (false) let
 21 │ ╰─▶ [a] = 0;
    ╰────
  help: Wrap this declaration in a block statement

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/12.10.1-11gs.js:16:1]
 15 │ 
 16 │ with ({}) { }
    · ────
    ╰────

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/with/decl-async-fun.js:21:11]
 20 │ 
 21 │ with ({}) async function f() {}
    ·           ──────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/with/decl-async-fun.js:21:11]
 20 │ 
 21 │ with ({}) async function f() {}
    ·           ─────────────────────
    ╰────
  help: In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement

  × Async functions can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/with/decl-async-gen.js:21:11]
 20 │ 
 21 │ with ({}) async function* g() {}
    ·           ───────────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/with/decl-async-gen.js:21:11]
 20 │ 
 21 │ with ({}) async function* g() {}
    ·           ──────────────────────
    ╰────
  help: In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement

  × Invalid class declaration
    ╭─[test262/test/language/statements/with/decl-cls.js:15:11]
 14 │ 
 15 │ with ({}) class C {}
    ·           ────────
    ╰────
  help: Classes can only be declared at top level or inside a block

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/with/decl-const.js:15:11]
 14 │ 
 15 │ with ({}) const x = null;
    ·           ───────────────
    ╰────
  help: Wrap this declaration in a block statement

  × Invalid function declaration
    ╭─[test262/test/language/statements/with/decl-fun.js:15:11]
 14 │ 
 15 │ with ({}) function f() {}
    ·           ───────────────
    ╰────
  help: In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement

  × Generators can only be declared at the top level or inside a block
    ╭─[test262/test/language/statements/with/decl-gen.js:16:11]
 15 │ 
 16 │ with ({}) function* g() {}
    ·           ─────────────
    ╰────

  × Invalid function declaration
    ╭─[test262/test/language/statements/with/decl-gen.js:16:11]
 15 │ 
 16 │ with ({}) function* g() {}
    ·           ────────────────
    ╰────
  help: In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/statements/with/decl-let.js:15:14]
 14 │ 
 15 │ with ({}) let x;
    ·              ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid function declaration
    ╭─[test262/test/language/statements/with/labelled-fn-stmt.js:27:27]
 26 │ 
 27 │ with ({}) label1: label2: function test262() {}
    ·                           ─────────────────────
    ╰────
  help: In strict mode code, functions can only be declared at top level or inside a block

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/labelled-fn-stmt.js:27:1]
 26 │ 
 27 │ with ({}) label1: label2: function test262() {}
    · ────
    ╰────

  × Lexical declaration cannot appear in a single-statement context
    ╭─[test262/test/language/statements/with/let-array-with-newline.js:22:15]
 21 │     if (false) {
 22 │ ╭─▶     with ({}) let
 23 │ ╰─▶     [a] = 0;
 24 │     }
    ╰────
  help: Wrap this declaration in a block statement

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-fn-decl-nested-1.js:21:5]
 20 │     var o = {};
 21 │     with (o) {};
    ·     ────
 22 │   }
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-fn-decl-nested-2.js:20:5]
 19 │     var o = {};
 20 │     with (o) {};
    ·     ────
 21 │   }
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-fn-decl.js:18:3]
 17 │   var o = {};
 18 │   with (o) {};
    ·   ────
 19 │ }
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-fn-expr.js:19:4]
 18 │    var o = {};
 19 │    with (o) {};
    ·    ────
 20 │ };
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-fn-method.js:18:22]
 17 │ 
 18 │ var obj = { get(a) { with(a){} } };
    ·                      ────
    ╰────

  × 'with' statements are not allowed
    ╭─[test262/test/language/statements/with/strict-script.js:18:1]
 17 │ 
 18 │ with ({}) {}
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/types/boolean/S8.3_A2.1.js:16:1]
 15 │ 
 16 │ true = 1;
    · ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/types/boolean/S8.3_A2.2.js:16:1]
 15 │ 
 16 │ false = 0;
    · ─────
    ╰────

  × Unexpected token
    ╭─[test262/test/language/types/null/S8.2_A2.js:16:5]
 15 │ 
 16 │ var null;
    ·     ────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/types/reference/S8.7.2_A1_T1.js:16:1]
 15 │ 
 16 │ 'litera'=1;
    · ────────
    ╰────

  × Cannot assign to this expression
    ╭─[test262/test/language/types/reference/S8.7.2_A1_T2.js:16:1]
 15 │ 
 16 │ 1=1;
    · ─
    ╰────

  × Unterminated string
    ╭─[test262/test/language/types/string/S8.4_A13_T1.js:16:13]
 15 │ 
 16 │ var str = ''';
    ·             ───
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/types/string/S8.4_A13_T1.js:16:13]
 15 │ 
 16 │ var str = ''';
    ·             ▲
    ╰────
  help: Try insert a semicolon here

  × Unterminated string
    ╭─[test262/test/language/types/string/S8.4_A13_T2.js:16:11]
 15 │ 
 16 │ var str = ';
    ·           ───
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/types/string/S8.4_A13_T3.js:16:13]
 15 │ 
 16 │ var str = '''';
    ·             ▲
    ╰────
  help: Try insert a semicolon here

  × Unterminated string
    ╭─[test262/test/language/types/string/S8.4_A14_T1.js:16:11]
 15 │ 
 16 │ var str = ";
    ·           ───
    ╰────

  × Unterminated string
    ╭─[test262/test/language/types/string/S8.4_A14_T2.js:16:13]
 15 │ 
 16 │ var str = """;
    ·             ───
    ╰────

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/types/string/S8.4_A14_T2.js:16:13]
 15 │ 
 16 │ var str = """;
    ·             ▲
    ╰────
  help: Try insert a semicolon here

  × Expected a semicolon or an implicit semicolon after a statement, but found none
    ╭─[test262/test/language/types/string/S8.4_A14_T3.js:16:13]
 15 │ 
 16 │ var str = """";
    ·             ▲
    ╰────
  help: Try insert a semicolon here

  × Invalid Character `	`
    ╭─[test262/test/language/white-space/S7.2_A5_T1.js:18:10]
 17 │ 
 18 │ var\u0009x;
    ·          ▲
    ╰────

  × Invalid Character ``
    ╭─[test262/test/language/white-space/S7.2_A5_T2.js:18:10]
 17 │ 
 18 │ var\u000Bx;
    ·          ▲
    ╰────

  × Invalid Character ``
    ╭─[test262/test/language/white-space/S7.2_A5_T3.js:18:10]
 17 │ 
 18 │ var\u000Cx;
    ·          ▲
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/white-space/S7.2_A5_T4.js:18:10]
 17 │ 
 18 │ var\u0020x;
    ·          ▲
    ╰────

  × Invalid Character ` `
    ╭─[test262/test/language/white-space/S7.2_A5_T5.js:18:10]
 17 │ 
 18 │ var\u00A0x;
    ·          ▲
    ╰────

  × Invalid Character `᠎`
    ╭─[test262/test/language/white-space/mongolian-vowel-separator.js:33:4]
 32 │ // U+180E between "var" and "foo"; UTF8(0x180E) = 0xE1 0xA0 0x8E
 33 │ var᠎foo;
    ·    ─
    ╰────
