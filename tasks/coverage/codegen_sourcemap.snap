- ClassBody-StaticBlock/input.js
(0:0-0:6) "class " --> (0:0-0:6) "class "
(0:6-0:10) "Foo " --> (0:6-0:10) "Foo "
(0:10-1:2) "{" --> (0:10-1:1) "{"
(1:2-1:11) "static {}" --> (1:1-2:1) "static{"
(1:11-2:1) "" --> (2:1-3:0) "}"
(2:1-4:0) "" --> (3:0-4:0) "}"
(4:0-4:6) "class " --> (4:0-4:6) "class "
(4:6-4:9) "A1 " --> (4:6-4:9) "A1 "
(4:9-5:2) "{" --> (4:9-5:1) "{"
(5:2-6:4) "static{" --> (5:1-6:0) "static{"
(6:4-7:3) "foo;" --> (6:0-7:1) "\t\tfoo;"
(7:3-8:1) "" --> (7:1-8:0) "}"
(8:1-10:0) "" --> (8:0-9:0) "}"
(10:0-10:6) "class " --> (9:0-9:6) "class "
(10:6-10:9) "A2 " --> (9:6-9:9) "A2 "
(10:9-11:2) "{" --> (9:9-10:1) "{"
(11:2-12:4) "static {" --> (10:1-11:0) "static{"
(12:4-12:8) "foo;" --> (11:0-12:0) "\t\tfoo;"
(12:8-13:3) "bar;" --> (12:0-13:1) "\t\tbar;"
(13:3-14:1) "" --> (13:1-14:0) "}"



- ModuleExpression/input.js
Expected a semicolon or an implicit semicolon after a statement, but found none


- arrow-function/input.js
(0:0-0:1) "(" --> (0:0-0:0) ""
(0:1-0:7) "() => " --> (0:0-0:6) "() => "
(0:7-0:9) "{ " --> (0:6-1:0) "{"
(0:9-0:16) "return " --> (1:0-1:8) "\treturn "
(0:16-0:21) "42; }" --> (1:8-2:0) "42;"



- arrow-function-compact/input.js
(0:0-0:1) "(" --> (0:0-0:0) ""
(0:1-0:7) "() => " --> (0:0-0:6) "() => "
(0:7-0:9) "{ " --> (0:6-1:0) "{"
(0:9-0:16) "return " --> (1:0-1:8) "\treturn "
(0:16-0:21) "42; }" --> (1:8-2:0) "42;"



- bar-record-tuple/input.js
Unexpected token


- call-identifiers/input.js
(0:0-1:0) "foo;" --> (0:0-1:0) "foo;"
(1:0-2:0) "foo();" --> (1:0-2:0) "foo();"
(2:0-2:6) "foo()." --> (2:0-2:6) "foo()."
(2:6-3:0) "bar;" --> (2:6-3:0) "bar;"
(3:0-3:4) "obj." --> (3:0-3:4) "obj."
(3:4-4:0) "foo;" --> (3:4-4:0) "foo;"
(4:0-4:4) "obj." --> (4:0-4:4) "obj."
(4:4-5:0) "foo();" --> (4:4-5:0) "foo();"
(5:0-5:4) "obj." --> (5:0-5:4) "obj."
(5:4-5:8) "foo." --> (5:4-5:8) "foo."
(5:8-6:0) "bar;" --> (5:8-6:0) "bar;"
(6:0-6:4) "obj." --> (6:0-6:4) "obj."
(6:4-6:10) "foo()." --> (6:4-6:10) "foo()."
(6:10-7:0) "bar;" --> (6:10-7:0) "bar;"
(7:0-8:2) "{" --> (7:0-8:0) "{"
(8:2-9:2) "foo;" --> (8:0-9:0) "\tfoo;"
(9:2-10:2) "foo();" --> (9:0-10:0) "\tfoo();"
(10:2-10:8) "foo()." --> (10:0-10:7) "\tfoo()."
(10:8-11:2) "bar;" --> (10:7-11:0) "bar;"
(11:2-11:6) "obj." --> (11:0-11:5) "\tobj."
(11:6-12:2) "foo;" --> (11:5-12:0) "foo;"
(12:2-12:6) "obj." --> (12:0-12:5) "\tobj."
(12:6-13:2) "foo();" --> (12:5-13:0) "foo();"
(13:2-13:6) "obj." --> (13:0-13:5) "\tobj."
(13:6-13:10) "foo." --> (13:5-13:9) "foo."
(13:10-14:2) "bar;" --> (13:9-14:0) "bar;"
(14:2-14:6) "obj." --> (14:0-14:5) "\tobj."
(14:6-14:12) "foo()." --> (14:5-14:11) "foo()."
(14:12-15:1) "bar;" --> (14:11-15:0) "bar;"



- comment-before-parentheses-return-arg/input.js
(0:0-0:9) "function " --> (0:0-0:9) "function "
(0:9-0:23) "assertElement(" --> (0:9-0:23) "assertElement("
(0:23-0:33) "assertFn, " --> (0:23-0:33) "assertFn, "
(0:33-0:50) "shouldBeElement, " --> (0:33-0:50) "shouldBeElement, "
(0:50-0:63) "opt_message) " --> (0:50-0:63) "opt_message) "
(0:63-1:2) "{" --> (0:63-1:0) "{"
(1:2-2:3) "return /** @type {!Ele\tment} */ (" --> (1:0-1:8) "\treturn "
(2:3-3:5) "assertType_(" --> (1:8-1:20) "assertType_("
(3:5-4:4) "assertFn," --> (1:20-1:30) "assertFn, "
(4:4-5:4) "shouldBeElement," --> (1:30-1:47) "shouldBeElement, "
(5:4-5:14) "isElement(" --> (1:47-1:57) "isElement("
(5:14-6:4) "shouldBeElement)," --> (1:57-1:75) "shouldBeElement), "
(6:4-7:4) "'Element expected'," --> (1:75-1:95) "'Element expected', "
(7:4-10:1) "opt_message\t  )\t);" --> (1:95-2:0) "opt_message);"
(10:1-12:0) "" --> (2:0-3:0) "}"
(12:0-12:6) "const " --> (3:0-3:6) "const "
(12:6-12:46) "slot = /** @type {!HTMLSlotElement} */ (" --> (3:6-3:13) "slot = "
(12:46-12:48) "e." --> (3:13-3:15) "e."
(12:48-14:0) "target);" --> (3:15-4:0) "target;"
(14:0-15:26) "assertElement(" --> (4:0-4:14) "assertElement("



- comment-before-parentheses-return-arg-createParenthesizedExpressions/input.js
(0:0-0:9) "function " --> (0:0-0:9) "function "
(0:9-0:23) "assertElement(" --> (0:9-0:23) "assertElement("
(0:23-0:33) "assertFn, " --> (0:23-0:33) "assertFn, "
(0:33-0:50) "shouldBeElement, " --> (0:33-0:50) "shouldBeElement, "
(0:50-0:63) "opt_message) " --> (0:50-0:63) "opt_message) "
(0:63-1:2) "{" --> (0:63-1:0) "{"
(1:2-2:3) "return /** @type {!Ele\tment} */ (" --> (1:0-1:8) "\treturn "
(2:3-3:5) "assertType_(" --> (1:8-1:20) "assertType_("
(3:5-4:4) "assertFn," --> (1:20-1:30) "assertFn, "
(4:4-5:4) "shouldBeElement," --> (1:30-1:47) "shouldBeElement, "
(5:4-5:14) "isElement(" --> (1:47-1:57) "isElement("
(5:14-6:4) "shouldBeElement)," --> (1:57-1:75) "shouldBeElement), "
(6:4-7:4) "'Element expected'," --> (1:75-1:95) "'Element expected', "
(7:4-10:1) "opt_message\t  )\t);" --> (1:95-2:0) "opt_message);"
(10:1-12:0) "" --> (2:0-3:0) "}"
(12:0-12:6) "const " --> (3:0-3:6) "const "
(12:6-12:46) "slot = /** @type {!HTMLSlotElement} */ (" --> (3:6-3:13) "slot = "
(12:46-12:48) "e." --> (3:13-3:15) "e."
(12:48-14:0) "target);" --> (3:15-4:0) "target;"
(14:0-15:26) "assertElement(" --> (4:0-4:14) "assertElement("



- function-identifier-name/input.js
(0:0-0:9) "function " --> (0:0-0:9) "function "
(0:9-0:14) "fn() " --> (0:9-0:14) "fn() "
(0:14-0:16) "{}" --> (0:14-1:0) "{"
(0:16-2:0) "" --> (1:0-2:0) "}"
(2:0-2:15) "export default " --> (2:0-2:15) "export default "
(2:15-2:27) "function () " --> (2:15-2:26) "function() "
(2:27-2:29) "{}" --> (2:26-3:0) "{"
(2:29-4:0) "" --> (3:0-3:1) "}"
(4:0-4:4) "var " --> (3:1-3:5) "var "
(4:4-4:8) "a = " --> (3:5-3:9) "a = "
(4:8-5:2) "{" --> (3:9-4:1) "{"
(5:2-5:7) "fn() " --> (4:1-4:5) "fn()"
(5:7-5:9) "{}" --> (4:5-5:1) "{"
(5:9-6:2) "," --> (5:1-6:1) "},"
(6:2-6:5) "fn:" --> (6:1-6:4) "fn:"
(6:5-6:16) "function() " --> (6:4-6:15) "function() "
(6:16-6:18) "{}" --> (6:15-7:1) "{"
(6:18-7:2) "," --> (7:1-8:1) "},"
(7:2-7:3) "[" --> (8:1-8:2) "["
(7:3-7:7) "fn]:" --> (8:2-8:6) "fn]:"
(7:7-7:18) "function() " --> (8:6-8:17) "function() "
(7:18-7:20) "{}" --> (8:17-9:1) "{"
(7:20-8:2) "," --> (9:1-10:1) "},"
(8:2-8:3) "[" --> (10:1-10:2) "["
(8:3-8:9) "\"fn\"]:" --> (10:2-10:8) "'fn']:"
(8:9-8:20) "function() " --> (10:8-10:19) "function() "
(8:20-8:22) "{}" --> (10:19-11:1) "{"
(8:22-9:2) "," --> (11:1-12:1) "},"
(9:2-9:3) "[" --> (12:1-12:2) "["
(9:3-9:14) "function() " --> (12:2-12:13) "function() "
(9:14-9:16) "{}" --> (12:13-13:1) "{"
(9:16-9:18) "]:" --> (13:1-13:4) "}]:"
(9:18-9:29) "function() " --> (13:4-13:15) "function() "
(9:29-9:31) "{}" --> (13:15-14:1) "{"
(9:31-10:2) "," --> (14:1-15:1) "},"
(10:2-10:3) "[" --> (15:1-15:2) "["
(10:3-10:8) "()=> " --> (15:2-15:8) "() => "
(10:8-10:10) "{}" --> (15:8-16:1) "{"
(10:10-10:12) "]:" --> (16:1-16:4) "}]:"
(10:12-10:23) "function() " --> (16:4-16:15) "function() "
(10:23-10:25) "{}" --> (16:15-17:1) "{"
(10:25-11:2) "," --> (17:1-18:1) "},"
(11:2-11:3) "[" --> (18:1-18:2) "["
(11:3-11:9) "fn]() " --> (18:2-18:7) "fn]()"
(11:9-11:12) "{ }" --> (18:7-19:1) "{"
(11:12-12:2) "," --> (19:1-20:1) "},"
(12:2-12:3) "[" --> (20:1-20:2) "["
(12:3-12:11) "\"fn\"]() " --> (20:2-20:9) "'fn']()"
(12:11-12:14) "{ }" --> (20:9-21:1) "{"
(12:14-13:2) "," --> (21:1-22:1) "},"
(13:2-13:3) "[" --> (22:1-22:2) "["
(13:3-13:14) "function() " --> (22:2-22:13) "function() "
(13:14-13:16) "{}" --> (22:13-23:1) "{"
(13:16-13:20) "]() " --> (23:1-23:5) "}]()"
(13:20-13:23) "{ }" --> (23:5-24:1) "{"
(13:23-14:2) "," --> (24:1-25:1) "},"
(14:2-14:3) "[" --> (25:1-25:2) "["
(14:3-14:8) "()=> " --> (25:2-25:8) "() => "
(14:8-14:10) "{}" --> (25:8-26:1) "{"
(14:10-14:14) "]() " --> (26:1-26:5) "}]()"
(14:14-14:17) "{ }" --> (26:5-27:1) "{"
(14:17-15:1) "" --> (27:1-28:1) "}"
(15:1-17:0) "" --> (28:1-29:0) ";"
(17:0-17:6) "class " --> (29:0-29:6) "class "
(17:6-17:8) "b " --> (29:6-29:8) "b "
(17:8-18:2) "{" --> (29:8-30:1) "{"
(18:2-18:7) "fn() " --> (30:1-30:5) "fn()"
(18:7-18:9) "{}" --> (30:5-31:1) "{"
(18:9-19:2) ";" --> (31:1-32:1) "}"
(19:2-19:5) "fn=" --> (32:1-32:4) "fn="
(19:5-19:16) "function() " --> (32:4-32:15) "function() "
(19:16-19:18) "{}" --> (32:15-33:1) "{"
(19:18-20:2) ";" --> (33:1-35:1) "};"
(20:2-20:3) "[" --> (35:1-35:2) "["
(20:3-20:7) "fn]=" --> (35:2-35:6) "fn]="
(20:7-20:18) "function() " --> (35:6-35:17) "function() "
(20:18-20:20) "{}" --> (35:17-36:1) "{"
(20:20-21:2) ";" --> (36:1-38:1) "};"
(21:2-21:3) "[" --> (38:1-38:2) "["
(21:3-21:9) "\"fn\"]=" --> (38:2-38:8) "'fn']="
(21:9-21:20) "function() " --> (38:8-38:19) "function() "
(21:20-21:22) "{}" --> (38:19-39:1) "{"
(21:22-22:2) ";" --> (39:1-41:1) "};"
(22:2-22:3) "[" --> (41:1-41:2) "["
(22:3-22:14) "function() " --> (41:2-41:13) "function() "
(22:14-22:16) "{}" --> (41:13-42:1) "{"
(22:16-22:18) "]=" --> (42:1-42:4) "}]="
(22:18-22:29) "function() " --> (42:4-42:15) "function() "
(22:29-22:31) "{}" --> (42:15-43:1) "{"
(22:31-23:2) ";" --> (43:1-45:1) "};"
(23:2-23:3) "[" --> (45:1-45:2) "["
(23:3-23:8) "()=> " --> (45:2-45:8) "() => "
(23:8-23:10) "{}" --> (45:8-46:1) "{"
(23:10-23:12) "]=" --> (46:1-46:4) "}]="
(23:12-23:23) "function() " --> (46:4-46:15) "function() "
(23:23-23:25) "{}" --> (46:15-47:1) "{"
(23:25-24:2) ";" --> (47:1-49:1) "};"
(24:2-24:3) "[" --> (49:1-49:2) "["
(24:3-24:9) "fn]() " --> (49:2-49:7) "fn]()"
(24:9-24:12) "{ }" --> (49:7-50:1) "{"
(24:12-25:2) ";" --> (50:1-51:1) "}"
(25:2-25:3) "[" --> (51:1-51:2) "["
(25:3-25:11) "\"fn\"]() " --> (51:2-51:9) "'fn']()"
(25:11-25:14) "{ }" --> (51:9-52:1) "{"
(25:14-26:2) ";" --> (52:1-53:1) "}"
(26:2-26:3) "[" --> (53:1-53:2) "["
(26:3-26:14) "function() " --> (53:2-53:13) "function() "
(26:14-26:16) "{}" --> (53:13-54:1) "{"
(26:16-26:20) "]() " --> (54:1-54:5) "}]()"
(26:20-26:23) "{ }" --> (54:5-55:1) "{"
(26:23-27:2) ";" --> (55:1-56:1) "}"
(27:2-27:3) "[" --> (56:1-56:2) "["
(27:3-27:8) "()=> " --> (56:2-56:8) "() => "
(27:8-27:10) "{}" --> (56:8-57:1) "{"
(27:10-27:14) "]() " --> (57:1-57:5) "}]()"
(27:14-27:17) "{ }" --> (57:5-58:1) "{"
(27:17-28:2) ";" --> (58:1-59:1) "}"
(28:2-28:7) "#x = " --> (59:1-59:4) "#x="
(28:7-28:18) "function() " --> (59:4-59:15) "function() "
(28:18-28:20) "{}" --> (59:15-60:1) "{"
(28:20-29:2) ";" --> (60:1-62:1) "};"
(29:2-29:11) "accessor " --> (62:1-62:10) "accessor "
(29:11-29:15) "y = " --> (62:10-62:12) "y="
(29:15-29:26) "function() " --> (62:12-62:23) "function() "
(29:26-29:28) "{}" --> (62:23-63:1) "{"
(29:28-30:1) "" --> (63:1-65:0) "};"
(30:1-32:0) "" --> (65:0-66:0) "}"
(32:0-32:4) "var " --> (66:0-66:4) "var "
(32:4-32:9) "aa = " --> (66:4-66:9) "aa = "
(32:9-33:2) "{" --> (66:9-67:1) "{"
(33:2-33:5) "fn:" --> (67:1-67:4) "fn:"
(33:5-33:14) "function " --> (67:4-67:13) "function "
(33:14-33:18) "a() " --> (67:13-67:17) "a() "
(33:18-33:20) "{}" --> (67:17-68:1) "{"
(33:20-34:2) "," --> (68:1-69:1) "},"
(34:2-34:3) "[" --> (69:1-69:2) "["
(34:3-34:7) "fn]:" --> (69:2-69:6) "fn]:"
(34:7-34:16) "function " --> (69:6-69:15) "function "
(34:16-34:20) "a() " --> (69:15-69:19) "a() "
(34:20-34:22) "{}" --> (69:19-70:1) "{"
(34:22-35:2) "," --> (70:1-71:1) "},"
(35:2-35:3) "[" --> (71:1-71:2) "["
(35:3-35:9) "\"fn\"]:" --> (71:2-71:8) "'fn']:"
(35:9-35:18) "function " --> (71:8-71:17) "function "
(35:18-35:22) "a() " --> (71:17-71:21) "a() "
(35:22-35:24) "{}" --> (71:21-72:1) "{"
(35:24-36:2) "," --> (72:1-73:1) "},"
(36:2-36:3) "[" --> (73:1-73:2) "["
(36:3-36:14) "function() " --> (73:2-73:13) "function() "
(36:14-36:16) "{}" --> (73:13-74:1) "{"
(36:16-36:18) "]:" --> (74:1-74:4) "}]:"
(36:18-36:27) "function " --> (74:4-74:13) "function "
(36:27-36:31) "a() " --> (74:13-74:17) "a() "
(36:31-36:33) "{}" --> (74:17-75:1) "{"
(36:33-37:2) "," --> (75:1-76:1) "},"
(37:2-37:3) "[" --> (76:1-76:2) "["
(37:3-37:8) "()=> " --> (76:2-76:8) "() => "
(37:8-37:10) "{}" --> (76:8-77:1) "{"
(37:10-37:12) "]:" --> (77:1-77:4) "}]:"
(37:12-37:21) "function " --> (77:4-77:13) "function "
(37:21-37:25) "a() " --> (77:13-77:17) "a() "
(37:25-37:27) "{}" --> (77:17-78:1) "{"
(37:27-38:1) "," --> (78:1-79:1) "}"
(38:1-40:0) "" --> (79:1-80:0) ";"
(40:0-40:6) "class " --> (80:0-80:6) "class "
(40:6-40:9) "bb " --> (80:6-80:9) "bb "
(40:9-41:2) "{" --> (80:9-81:1) "{"
(41:2-41:5) "fn=" --> (81:1-81:4) "fn="
(41:5-41:14) "function " --> (81:4-81:13) "function "
(41:14-41:18) "a() " --> (81:13-81:17) "a() "
(41:18-41:20) "{}" --> (81:17-82:1) "{"
(41:20-42:2) ";" --> (82:1-84:1) "};"
(42:2-42:3) "[" --> (84:1-84:2) "["
(42:3-42:7) "fn]=" --> (84:2-84:6) "fn]="
(42:7-42:16) "function " --> (84:6-84:15) "function "
(42:16-42:20) "a() " --> (84:15-84:19) "a() "
(42:20-42:22) "{}" --> (84:19-85:1) "{"
(42:22-43:2) ";" --> (85:1-87:1) "};"
(43:2-43:3) "[" --> (87:1-87:2) "["
(43:3-43:9) "\"fn\"]=" --> (87:2-87:8) "'fn']="
(43:9-43:18) "function " --> (87:8-87:17) "function "
(43:18-43:22) "a() " --> (87:17-87:21) "a() "
(43:22-43:24) "{}" --> (87:21-88:1) "{"
(43:24-44:2) ";" --> (88:1-90:1) "};"
(44:2-44:3) "[" --> (90:1-90:2) "["
(44:3-44:14) "function() " --> (90:2-90:13) "function() "
(44:14-44:16) "{}" --> (90:13-91:1) "{"
(44:16-44:18) "]=" --> (91:1-91:4) "}]="
(44:18-44:27) "function " --> (91:4-91:13) "function "
(44:27-44:31) "a() " --> (91:13-91:17) "a() "
(44:31-44:33) "{}" --> (91:17-92:1) "{"
(44:33-45:2) ";" --> (92:1-94:1) "};"
(45:2-45:3) "[" --> (94:1-94:2) "["
(45:3-45:8) "()=> " --> (94:2-94:8) "() => "
(45:8-45:10) "{}" --> (94:8-95:1) "{"
(45:10-45:12) "]=" --> (95:1-95:4) "}]="
(45:12-45:21) "function " --> (95:4-95:13) "function "
(45:21-45:25) "a() " --> (95:13-95:17) "a() "
(45:25-45:27) "{}" --> (95:17-96:1) "{"
(45:27-46:1) ";" --> (96:1-98:0) "};"
(46:1-48:0) "" --> (98:0-99:0) "}"
(48:0-48:4) "var " --> (99:0-99:4) "var "
(48:4-48:8) "x = " --> (99:4-99:8) "x = "
(48:8-48:17) "function " --> (99:8-99:17) "function "
(48:17-48:22) "fn() " --> (99:17-99:22) "fn() "
(48:22-48:24) "{}" --> (99:22-100:0) "{"
(48:24-49:0) ";" --> (100:0-101:0) "};"
(49:0-49:4) "var " --> (101:0-101:4) "var "
(49:4-49:8) "x = " --> (101:4-101:8) "x = "
(49:8-49:20) "function () " --> (101:8-101:19) "function() "
(49:20-49:22) "{}" --> (101:19-102:0) "{"
(49:22-51:0) ";" --> (102:0-103:0) "};"
(51:0-51:1) "(" --> (103:0-103:0) ""
(51:1-51:10) "function " --> (103:0-103:10) "(function "
(51:10-51:15) "fn() " --> (103:10-103:15) "fn() "
(51:15-51:17) "{}" --> (103:15-104:0) "{"
(51:17-53:0) ");" --> (104:0-105:0) "});"
(53:0-53:4) "var " --> (105:0-105:4) "var "
(53:4-53:8) "z = " --> (105:4-105:8) "z = "
(53:8-53:14) "() => " --> (105:8-105:14) "() => "
(53:14-53:16) "{}" --> (105:14-106:0) "{"
(53:16-54:0) ";" --> (106:0-107:0) "};"
(54:0-54:4) "var " --> (107:0-107:4) "var "
(54:4-54:8) "z = " --> (107:4-107:8) "z = "
(54:8-54:13) "x => " --> (107:8-107:13) "x => "
(54:13-54:15) "{}" --> (107:13-108:0) "{"
(54:15-55:0) ";" --> (108:0-109:0) "};"
(55:0-55:4) "var " --> (109:0-109:4) "var "
(55:4-55:9) "z = (" --> (109:4-109:8) "z = "
(55:9-55:15) "x) => " --> (109:8-109:13) "x => "
(55:15-55:17) "{}" --> (109:13-110:0) "{"
(55:17-56:0) ";" --> (110:0-111:0) "};"
(56:0-56:4) "var " --> (111:0-111:4) "var "
(56:4-56:8) "z = " --> (111:4-111:8) "z = "
(56:8-56:9) "(" --> (111:8-111:9) "("
(56:9-56:12) "x, " --> (111:9-111:12) "x, "
(56:12-56:15) "y, " --> (111:12-111:15) "y, "
(56:15-56:21) "z) => " --> (111:15-111:21) "z) => "
(56:21-56:23) "{}" --> (111:21-112:0) "{"
(56:23-58:0) ";" --> (112:0-113:0) "};"
(58:0-58:4) "x = " --> (113:0-113:4) "x = "
(58:4-58:15) "function() " --> (113:4-113:15) "function() "
(58:15-58:17) "{}" --> (113:15-114:0) "{"
(58:17-60:0) ";" --> (114:0-115:0) "};"
(60:0-60:2) "( " --> (115:0-115:1) "("
(60:2-60:4) "{ " --> (115:1-115:2) "{"
(60:4-60:8) "x = " --> (115:2-115:4) "x="
(60:8-60:19) "function() " --> (115:4-115:15) "function() "
(60:19-60:21) "{}" --> (115:15-116:0) "{"
(60:21-60:23) " }" --> (116:0-116:2) "}}"
(60:23-60:26) " = " --> (116:2-116:5) " = "
(60:26-60:28) "{}" --> (116:5-116:7) "{}"



- hash-record-tuple/input.js
Invalid Character `[`


- string-literal-newline/input.js
(0:0-3:0) "\"before\\after\";" --> (0:0-1:7) "'before\\"



- template-literal-newline/input.js
(1:0-1:1) "`" --> (0:0-0:1) "`"
(1:1-5:0) "beforeafter`;// Newline newline" --> (0:1-2:0) "beforeafter`;"
(5:0-5:1) "`" --> (2:0-2:1) "`"
(5:1-10:0) "beforeafter`;// Newline LineContinuation" --> (2:1-5:0) "beforeafter`;"
(10:0-10:1) "`" --> (5:0-5:1) "`"
(10:1-15:0) "before\\after`;// LineContinuation" --> (5:1-8:0) "before\\after`;"
(15:0-15:1) "`" --> (8:0-8:1) "`"
(15:1-19:0) "before\\after`;// LineContinuation newline" --> (8:1-10:0) "before\\after`;"
(19:0-19:1) "`" --> (10:0-10:1) "`"
(19:1-24:0) "before\\after`;// LineContinuation LineContinuation" --> (10:1-13:0) "before\\after`;"
(24:0-24:1) "`" --> (13:0-13:1) "`"



