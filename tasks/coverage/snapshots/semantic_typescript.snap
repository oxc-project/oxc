commit: 261630d6

semantic_typescript Summary:
AST Parsed     : 2836/2836 (100.00%)
Positive Passed: 1458/2836 (51.41%)
semantic Error: tasks/coverage/typescript/tests/cases/conformance/Symbols/ES5SymbolProperty1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientDeclarations.ts
Bindings mismatch:
after transform: ScopeId(0): ["E1", "E2", "E3", "M1", "_defineProperty", "cls", "fn1", "fn10", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8", "fn9", "m", "n", "p", "q", "x"]
rebuilt        : ScopeId(0): ["_defineProperty", "cls", "fn1", "fn10", "fn2", "fn3", "fn4", "fn5", "fn6", "fn7", "fn8", "fn9", "p", "q", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(23)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(11): []
Symbol flags mismatch for "cls":
after transform: SymbolId(27): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(25): SymbolFlags(Class)
Symbol reference IDs mismatch for "cls":
after transform: SymbolId(27): [ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(25): [ReferenceId(2)]
Reference symbol mismatch for "E3":
after transform: SymbolId(39) "E3"
rebuilt        : <None>
Reference symbol mismatch for "M1":
after transform: SymbolId(43) "M1"
rebuilt        : <None>
Reference symbol mismatch for "M1":
after transform: SymbolId(43) "M1"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["E3", "M1", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientDeclarationsExternal.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientEnumDeclaration1.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientEnumDeclaration2.ts
Bindings mismatch:
after transform: ScopeId(0): ["E", "E1"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientExternalModuleMerging.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientInsideNonAmbient.ts
Bindings mismatch:
after transform: ScopeId(1): ["C", "E", "M", "_M", "f", "x"]
rebuilt        : ScopeId(1): ["_M"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): []
Bindings mismatch:
after transform: ScopeId(6): ["C", "E", "M", "_M2", "f", "x"]
rebuilt        : ScopeId(2): ["C", "_M2", "f"]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(2): [ScopeId(3), ScopeId(4)]
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol flags mismatch for "M2":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M2":
after transform: SymbolId(6): Span { start: 173, end: 175 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol flags mismatch for "C":
after transform: SymbolId(9): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientInsideNonAmbientExternalModule.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "E", "M", "f", "x"]
rebuilt        : ScopeId(0): ["C"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "C":
after transform: SymbolId(2): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand_declarationEmit.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand_duplicate.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/ambient/ambientShorthand_merging.ts
Bindings mismatch:
after transform: ScopeId(0): ["bar", "foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncArrowFunction/asyncArrowFunction1_es2017.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncArrowFunction/asyncUnParenthesizedArrowFunction_es2017.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(8)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncAwait_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "mp", "o", "p"]
rebuilt        : ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "o"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(18), ScopeId(25), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(37), ScopeId(39), ScopeId(41), ScopeId(43), ScopeId(45), ScopeId(47), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(60), ScopeId(61)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(25), ScopeId(28), ScopeId(31), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(40), ScopeId(53), ScopeId(57), ScopeId(58)]
Scope flags mismatch:
after transform: ScopeId(25): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(53): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(58): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(54): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(59): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(55): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(19): SymbolFlags(ValueModule)
rebuilt        : SymbolId(33): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(19): Span { start: 913, end: 914 }
rebuilt        : SymbolId(33): Span { start: 0, end: 0 }
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "mp", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/asyncUseStrict_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "func"]
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression1_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression2_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression3_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression4_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitBinaryExpression/awaitBinaryExpression5_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression1_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression2_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression3_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression4_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "pfn":
after transform: SymbolId(7) "pfn"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "pfn", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression5_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression6_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression7_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitCallExpression/awaitCallExpression8_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "po":
after transform: SymbolId(8) "po"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "po", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitClassExpression_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_asyncToGenerator", "_func", "func", "p"]
rebuilt        : ScopeId(0): ["C", "_asyncToGenerator", "_func", "func"]
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(1)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/awaitInheritedPromise_es2017.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_f", "a", "f"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_f", "f"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "a":
after transform: SymbolId(1) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/functionDeclarations/asyncFunctionDeclaration11_es2017.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/functionDeclarations/asyncFunctionDeclaration14_es2017.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es2017/functionDeclarations/asyncFunctionDeclaration1_es2017.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncArrowFunction/asyncArrowFunction1_es5.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncArrowFunction/asyncUnParenthesizedArrowFunction_es5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(8)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncAwaitNestedClasses_es5.ts
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncAwait_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "mp", "o", "p"]
rebuilt        : ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "o"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(18), ScopeId(25), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(37), ScopeId(39), ScopeId(41), ScopeId(43), ScopeId(45), ScopeId(47), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(60), ScopeId(61)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(25), ScopeId(28), ScopeId(31), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(40), ScopeId(53), ScopeId(57), ScopeId(58)]
Scope flags mismatch:
after transform: ScopeId(25): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(53): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(58): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(54): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(59): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(55): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(19): SymbolFlags(ValueModule)
rebuilt        : SymbolId(33): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(19): Span { start: 913, end: 914 }
rebuilt        : SymbolId(33): Span { start: 0, end: 0 }
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "mp", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncImportedPromise_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["Task", "Test", "_asyncToGenerator"]
rebuilt        : ScopeId(0): ["Test", "_asyncToGenerator"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncQualifiedReturnType_es5.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "X":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "X":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "X":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(5), ReferenceId(6)]
rebuilt        : SymbolId(1): [ReferenceId(4), ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/asyncUseStrict_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "func"]
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression1_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression2_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression3_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression4_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitBinaryExpression/awaitBinaryExpression5_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression1_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression2_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression3_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression4_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "pfn":
after transform: SymbolId(7) "pfn"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "pfn", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression5_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression6_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression7_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitCallExpression/awaitCallExpression8_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "po":
after transform: SymbolId(8) "po"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "po", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitClassExpression_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_asyncToGenerator", "_func", "func", "p"]
rebuilt        : ScopeId(0): ["C", "_asyncToGenerator", "_func", "func"]
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(1)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/awaitUnion_es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_f", "a", "b", "c", "d", "e", "f"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_f", "f"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(3) "d"
rebuilt        : <None>
Reference symbol mismatch for "e":
after transform: SymbolId(4) "e"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["PromiseLike", "arguments", "require"]
rebuilt        : ["a", "arguments", "b", "c", "d", "e", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/functionDeclarations/asyncFunctionDeclaration11_es5.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/functionDeclarations/asyncFunctionDeclaration14_es5.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es5/functionDeclarations/asyncFunctionDeclaration1_es5.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncAliasReturnType_es6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncArrowFunction/asyncArrowFunction1_es6.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncArrowFunction/asyncUnParenthesizedArrowFunction_es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(8)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Reference symbol mismatch for "someOtherFunction":
after transform: SymbolId(0) "someOtherFunction"
rebuilt        : SymbolId(1) "someOtherFunction"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncAwait_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "mp", "o", "p"]
rebuilt        : ScopeId(0): ["C", "M", "_asyncToGenerator", "_f", "_f2", "_f3", "_f5", "f0", "f1", "f10", "f11", "f12", "f13", "f14", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "o"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(18), ScopeId(25), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(37), ScopeId(39), ScopeId(41), ScopeId(43), ScopeId(45), ScopeId(47), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(60), ScopeId(61)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(25), ScopeId(28), ScopeId(31), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(40), ScopeId(53), ScopeId(57), ScopeId(58)]
Scope flags mismatch:
after transform: ScopeId(25): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(53): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(58): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(54): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(59): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(55): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(19): SymbolFlags(ValueModule)
rebuilt        : SymbolId(33): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(19): Span { start: 913, end: 914 }
rebuilt        : SymbolId(33): Span { start: 0, end: 0 }
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "mp":
after transform: SymbolId(3) "mp"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(2) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "mp", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncUseStrict_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "func"]
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/asyncWithVarShadowing_es6.ts
Identifier `x` has already been declared

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression1_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression2_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression3_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression4_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitBinaryExpression/awaitBinaryExpression5_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "func", "p"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "before":
after transform: SymbolId(2) "before"
rebuilt        : SymbolId(1) "before"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(3) "after"
rebuilt        : SymbolId(2) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression1_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression2_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression3_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "fn":
after transform: SymbolId(2) "fn"
rebuilt        : SymbolId(1) "fn"
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression4_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "pfn":
after transform: SymbolId(7) "pfn"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "pfn", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression5_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression6_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression7_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "o":
after transform: SymbolId(6) "o"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "o", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitCallExpression/awaitCallExpression8_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_func", "a", "after", "before", "fn", "func", "o", "p", "pfn", "po"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_func", "after", "before", "fn", "func"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "before":
after transform: SymbolId(9) "before"
rebuilt        : SymbolId(5) "before"
Reference symbol mismatch for "po":
after transform: SymbolId(8) "po"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "after":
after transform: SymbolId(10) "after"
rebuilt        : SymbolId(6) "after"
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["a", "arguments", "po", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitClassExpression_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_asyncToGenerator", "_func", "func", "p"]
rebuilt        : ScopeId(0): ["C", "_asyncToGenerator", "_func", "func"]
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(1)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "p":
after transform: SymbolId(1) "p"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "p", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/awaitUnion_es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_f", "a", "b", "c", "d", "e", "f"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_f", "f"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(3) "d"
rebuilt        : <None>
Reference symbol mismatch for "e":
after transform: SymbolId(4) "e"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["PromiseLike", "arguments", "require"]
rebuilt        : ["a", "arguments", "b", "c", "d", "e", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/functionDeclarations/asyncFunctionDeclaration11_es6.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/functionDeclarations/asyncFunctionDeclaration14_es6.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/async/es6/functionDeclarations/asyncFunctionDeclaration1_es6.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments", "require"]
rebuilt        : ["arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/asyncGenerators/asyncGeneratorGenericNonWrappedReturn.ts
Unresolved references mismatch:
after transform: ["AsyncGenerator", "arguments"]
rebuilt        : ["arguments"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/asyncGenerators/asyncGeneratorPromiseNextType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7), ScopeId(8)]
Unresolved references mismatch:
after transform: ["AsyncGenerator", "Promise", "arguments", "console", "require"]
rebuilt        : ["Promise", "arguments", "console", "require"]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(1), ReferenceId(3), ReferenceId(5), ReferenceId(10), ReferenceId(19), ReferenceId(20), ReferenceId(22), ReferenceId(27)]
rebuilt        : [ReferenceId(10), ReferenceId(21), ReferenceId(30)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classAndInterfaceWithSameName.ts
Bindings mismatch:
after transform: ScopeId(0): ["M", "_defineProperty"]
rebuilt        : ScopeId(0): ["C", "M", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(3): ["_M"]
rebuilt        : ScopeId(3): ["D", "_M"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol redeclarations mismatch for "C":
after transform: SymbolId(0): [Span { start: 6, end: 7 }, Span { start: 35, end: 36 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "M":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(1): Span { start: 62, end: 63 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol flags mismatch for "D":
after transform: SymbolId(2): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol redeclarations mismatch for "D":
after transform: SymbolId(2): [Span { start: 76, end: 77 }, Span { start: 122, end: 123 }]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classBody/classWithEmptyBody.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(3): [ReferenceId(5)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classAppearsToHaveMembersOfObject.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/classExtendingClass.ts
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(2): [ReferenceId(8)]
Symbol reference IDs mismatch for "D2":
after transform: SymbolId(12): [ReferenceId(11), ReferenceId(15)]
rebuilt        : SymbolId(12): [ReferenceId(16)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/constructorFunctionTypeIsAssignableToBaseType.ts
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/constructorFunctionTypeIsAssignableToBaseType2.ts
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/classHeritageSpecification/derivedTypeDoesNotRequireExtendsClause.ts
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(8)]
rebuilt        : SymbolId(1): [ReferenceId(4)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(3)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/mergeClassInterfaceAndModule.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "C4"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Symbol flags mismatch for "C1":
after transform: SymbolId(0): SymbolFlags(Class | Interface | NamespaceModule | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol span mismatch for "C1":
after transform: SymbolId(0): Span { start: 10, end: 12 }
rebuilt        : SymbolId(0): Span { start: 30, end: 32 }
Symbol redeclarations mismatch for "C1":
after transform: SymbolId(0): [Span { start: 10, end: 12 }, Span { start: 30, end: 32 }, Span { start: 43, end: 45 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "C2":
after transform: SymbolId(1): SymbolFlags(Class | Interface | NamespaceModule | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol redeclarations mismatch for "C2":
after transform: SymbolId(1): [Span { start: 64, end: 66 }, Span { start: 80, end: 82 }, Span { start: 93, end: 95 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "C3":
after transform: SymbolId(2): SymbolFlags(Class | Interface | NamespaceModule | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol redeclarations mismatch for "C3":
after transform: SymbolId(2): [Span { start: 114, end: 116 }, Span { start: 127, end: 129 }, Span { start: 143, end: 145 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "C4":
after transform: SymbolId(3): SymbolFlags(Class | Interface | NamespaceModule | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol span mismatch for "C4":
after transform: SymbolId(3): Span { start: 157, end: 159 }
rebuilt        : SymbolId(3): Span { start: 177, end: 179 }
Symbol redeclarations mismatch for "C4":
after transform: SymbolId(3): [Span { start: 157, end: 159 }, Span { start: 177, end: 179 }, Span { start: 255, end: 257 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/mergedClassInterface.ts
Bindings mismatch:
after transform: ScopeId(0): ["_defineProperty", "c5"]
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "C4", "C5", "_defineProperty", "c5"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Symbol flags mismatch for "C1":
after transform: SymbolId(0): SymbolFlags(Class | Interface | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol redeclarations mismatch for "C1":
after transform: SymbolId(0): [Span { start: 14, end: 16 }, Span { start: 32, end: 34 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "C2":
after transform: SymbolId(1): SymbolFlags(Class | Interface | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol span mismatch for "C2":
after transform: SymbolId(1): Span { start: 50, end: 52 }
rebuilt        : SymbolId(2): Span { start: 72, end: 74 }
Symbol redeclarations mismatch for "C2":
after transform: SymbolId(1): [Span { start: 50, end: 52 }, Span { start: 72, end: 74 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "C3":
after transform: SymbolId(2): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol redeclarations mismatch for "C3":
after transform: SymbolId(2): [Span { start: 86, end: 88 }, Span { start: 104, end: 106 }]
rebuilt        : SymbolId(3): []
Symbol flags mismatch for "C4":
after transform: SymbolId(3): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol span mismatch for "C4":
after transform: SymbolId(3): Span { start: 122, end: 124 }
rebuilt        : SymbolId(4): Span { start: 136, end: 138 }
Symbol redeclarations mismatch for "C4":
after transform: SymbolId(3): [Span { start: 122, end: 124 }, Span { start: 136, end: 138 }]
rebuilt        : SymbolId(4): []
Symbol flags mismatch for "C5":
after transform: SymbolId(4): SymbolFlags(Class | Interface | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)
Symbol span mismatch for "C5":
after transform: SymbolId(4): Span { start: 154, end: 156 }
rebuilt        : SymbolId(5): Span { start: 192, end: 194 }
Symbol reference IDs mismatch for "C5":
after transform: SymbolId(4): [ReferenceId(0)]
rebuilt        : SymbolId(5): []
Symbol redeclarations mismatch for "C5":
after transform: SymbolId(4): [Span { start: 154, end: 156 }, Span { start: 192, end: 194 }, Span { start: 226, end: 228 }, Span { start: 260, end: 262 }]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classDeclarations/mergedInheritedClassInterface.ts
Bindings mismatch:
after transform: ScopeId(0): ["BaseClass", "Grandchild", "_defineProperty", "child", "grandchild"]
rebuilt        : ScopeId(0): ["BaseClass", "Child", "ChildNoBaseClass", "Grandchild", "_defineProperty", "child", "grandchild"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(10)]
Symbol flags mismatch for "Child":
after transform: SymbolId(2): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol span mismatch for "Child":
after transform: SymbolId(2): Span { start: 150, end: 155 }
rebuilt        : SymbolId(2): Span { start: 213, end: 218 }
Symbol reference IDs mismatch for "Child":
after transform: SymbolId(2): [ReferenceId(4)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "Child":
after transform: SymbolId(2): [Span { start: 150, end: 155 }, Span { start: 213, end: 218 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "ChildNoBaseClass":
after transform: SymbolId(3): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol span mismatch for "ChildNoBaseClass":
after transform: SymbolId(3): Span { start: 294, end: 310 }
rebuilt        : SymbolId(4): Span { start: 368, end: 384 }
Symbol redeclarations mismatch for "ChildNoBaseClass":
after transform: SymbolId(3): [Span { start: 294, end: 310 }, Span { start: 368, end: 384 }]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "Grandchild":
after transform: SymbolId(4): [ReferenceId(12)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classExpression.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(4): SymbolFlags(ValueModule)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(4): Span { start: 67, end: 68 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/classWithStaticFieldInParameterBindingPattern.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_defineProperty", "x"]
rebuilt        : ScopeId(0): ["C", "_Class", "_Class2", "_defineProperty", "x"]
Bindings mismatch:
after transform: ScopeId(2): ["C", "_Class", "b"]
rebuilt        : ScopeId(2): ["C", "b"]
Bindings mismatch:
after transform: ScopeId(4): ["_Class2", "b", "d", "x"]
rebuilt        : ScopeId(4): ["b", "d", "x"]
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(7): ScopeId(2)
rebuilt        : SymbolId(1): ScopeId(0)
Symbol scope ID mismatch for "_Class2":
after transform: SymbolId(9): ScopeId(4)
rebuilt        : SymbolId(2): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/classWithStaticFieldInParameterBindingPattern.ts
Bindings mismatch:
after transform: ScopeId(0): ["_defineProperty"]
rebuilt        : ScopeId(0): ["_Class", "_defineProperty"]
Bindings mismatch:
after transform: ScopeId(1): ["_Class", "b"]
rebuilt        : ScopeId(1): ["b"]
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(1): ScopeId(1)
rebuilt        : SymbolId(1): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/classWithStaticFieldInParameterInitializer.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_defineProperty", "x"]
rebuilt        : ScopeId(0): ["C", "_Class", "_Class2", "_defineProperty", "x"]
Bindings mismatch:
after transform: ScopeId(2): ["C", "_Class", "b"]
rebuilt        : ScopeId(2): ["C", "b"]
Bindings mismatch:
after transform: ScopeId(4): ["_Class2", "b", "d", "x"]
rebuilt        : ScopeId(4): ["b", "d", "x"]
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(7): ScopeId(2)
rebuilt        : SymbolId(1): ScopeId(0)
Symbol scope ID mismatch for "_Class2":
after transform: SymbolId(9): ScopeId(4)
rebuilt        : SymbolId(2): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classExpressions/classWithStaticFieldInParameterInitializer.ts
Bindings mismatch:
after transform: ScopeId(0): ["_defineProperty"]
rebuilt        : ScopeId(0): ["_Class", "_defineProperty"]
Bindings mismatch:
after transform: ScopeId(1): ["_Class", "b"]
rebuilt        : ScopeId(1): ["b"]
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(1): ScopeId(1)
rebuilt        : SymbolId(1): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classStaticBlock/classStaticBlock11.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(2)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/classStaticBlock/classStaticBlock17.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(9), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(4): [ReferenceId(0), ReferenceId(1), ReferenceId(7), ReferenceId(13)]
rebuilt        : SymbolId(5): [ReferenceId(24)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/classConstructorParametersAccessibility3.ts
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorImplementationWithDefaultValues.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/constructorDeclarations/constructorParameters/constructorOverloadsWithOptionalParameters.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(3): [ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/accessibility/classPropertyIsPublicByDefault.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(10)]
rebuilt        : SymbolId(1): [ReferenceId(3), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/accessibility/privateClassPropertyAccessibleWithinNestedClass.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(15)]
rebuilt        : SymbolId(1): [ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(16)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/accessibility/protectedClassPropertyAccessibleWithinNestedClass.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(15)]
rebuilt        : SymbolId(1): [ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(16)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/classTypes/genericSetterInClassType.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Generic":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Generic":
after transform: SymbolId(0): Span { start: 7, end: 14 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/classTypes/indexersInClassType.ts
Unresolved references mismatch:
after transform: ["Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/constructorFunctionTypes/constructorHasPrototypeProperty.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol flags mismatch for "NonGeneric":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "NonGeneric":
after transform: SymbolId(0): Span { start: 7, end: 17 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol flags mismatch for "Generic":
after transform: SymbolId(5): SymbolFlags(ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Generic":
after transform: SymbolId(5): Span { start: 198, end: 205 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassIncludesInheritedMembers.ts
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(4): [ReferenceId(1), ReferenceId(2), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10)]
rebuilt        : SymbolId(5): [ReferenceId(5), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(13)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(13): [ReferenceId(14)]
rebuilt        : SymbolId(14): []
Unresolved references mismatch:
after transform: ["Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesIndexersWithAssignmentCompatibility.ts
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(23)]
rebuilt        : SymbolId(1): [ReferenceId(1), ReferenceId(2), ReferenceId(12)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(1): [ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(19), ReferenceId(20), ReferenceId(21), ReferenceId(22)]
rebuilt        : SymbolId(2): [ReferenceId(10), ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesProtectedMembers2.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(42), ReferenceId(44)]
rebuilt        : SymbolId(1): [ReferenceId(1), ReferenceId(2)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(1): [ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(19), ReferenceId(20), ReferenceId(21), ReferenceId(22), ReferenceId(26), ReferenceId(29), ReferenceId(33), ReferenceId(36), ReferenceId(40), ReferenceId(45)]
rebuilt        : SymbolId(2): [ReferenceId(10), ReferenceId(11), ReferenceId(20), ReferenceId(23), ReferenceId(27), ReferenceId(30), ReferenceId(34)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(10): [ReferenceId(24), ReferenceId(25), ReferenceId(34), ReferenceId(35), ReferenceId(37), ReferenceId(38), ReferenceId(39), ReferenceId(57), ReferenceId(59)]
rebuilt        : SymbolId(9): [ReferenceId(16), ReferenceId(18), ReferenceId(19), ReferenceId(28), ReferenceId(29), ReferenceId(31), ReferenceId(32), ReferenceId(33)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(28): [ReferenceId(46)]
rebuilt        : SymbolId(25): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/inheritanceAndOverriding/derivedClassOverridesPublicMembers.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(23), ReferenceId(42), ReferenceId(44)]
rebuilt        : SymbolId(1): [ReferenceId(1), ReferenceId(2), ReferenceId(12)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(1): [ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(19), ReferenceId(20), ReferenceId(21), ReferenceId(22), ReferenceId(26), ReferenceId(29), ReferenceId(33), ReferenceId(36), ReferenceId(40), ReferenceId(45)]
rebuilt        : SymbolId(2): [ReferenceId(10), ReferenceId(11), ReferenceId(20), ReferenceId(23), ReferenceId(27), ReferenceId(30), ReferenceId(34)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(10): [ReferenceId(24), ReferenceId(25), ReferenceId(34), ReferenceId(35), ReferenceId(37), ReferenceId(38), ReferenceId(39), ReferenceId(57), ReferenceId(59)]
rebuilt        : SymbolId(9): [ReferenceId(16), ReferenceId(18), ReferenceId(19), ReferenceId(28), ReferenceId(29), ReferenceId(31), ReferenceId(32), ReferenceId(33)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(28): [ReferenceId(46)]
rebuilt        : SymbolId(25): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/thisAndSuperInStaticMembers1.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(4): ["_x"]
rebuilt        : ScopeId(3): []
Symbol flags mismatch for "B":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(13): SymbolFlags(Class)
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require", "undefined"]
rebuilt        : ["_x", "require", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/thisAndSuperInStaticMembers2.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(4): ["_x"]
rebuilt        : ScopeId(3): []
Symbol flags mismatch for "B":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(13): SymbolFlags(Class)
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Reference symbol mismatch for "_x":
after transform: SymbolId(6) "_x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require", "undefined"]
rebuilt        : ["_x", "require", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/thisAndSuperInStaticMembers3.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "B":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/thisAndSuperInStaticMembers4.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "B":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/instanceAndStaticMembers/typeOfThisInInstanceMember2.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(6)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameAccessorsCallExpression.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameComputedPropertyName1.ts
Unresolved references mismatch:
after transform: ["Record", "WeakMap", "console", "require"]
rebuilt        : ["WeakMap", "console", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameComputedPropertyName2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(1): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(3): Some(ScopeId(2))
rebuilt        : ScopeId(1): Some(ScopeId(0))
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(2): [ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(2): [ReferenceId(0), ReferenceId(2), ReferenceId(6)]
rebuilt        : SymbolId(6): [ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameConstructorSignature.ts
Bindings mismatch:
after transform: ScopeId(0): ["_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_x"]
rebuilt        : ScopeId(0): ["C", "_classPrivateFieldInitSpec", "_classPrivateFieldSet", "_x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "C":
after transform: SymbolId(1): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol redeclarations mismatch for "C":
after transform: SymbolId(1): [Span { start: 37, end: 38 }, Span { start: 185, end: 186 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameFieldDestructuredBinding.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3)]
rebuilt        : SymbolId(5): [ReferenceId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameInLhsReceiverExpression.ts
Symbol reference IDs mismatch for "Test":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameMethodAsync.ts
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(9): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameStaticAccessorsCallExpression.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameStaticFieldAssignment.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(26), ReferenceId(25), ReferenceId(24), ReferenceId(23), ReferenceId(22), ReferenceId(21), ReferenceId(20), ReferenceId(19), ReferenceId(18), ReferenceId(17), ReferenceId(16), ReferenceId(15), ReferenceId(14), ReferenceId(13), ReferenceId(54), ReferenceId(57), ReferenceId(58), ReferenceId(62), ReferenceId(66), ReferenceId(67), ReferenceId(71), ReferenceId(75), ReferenceId(76), ReferenceId(80), ReferenceId(84), ReferenceId(85), ReferenceId(89), ReferenceId(93), ReferenceId(94), ReferenceId(98), ReferenceId(105), ReferenceId(106), ReferenceId(110), ReferenceId(114), ReferenceId(115), ReferenceId(119), ReferenceId(123), ReferenceId(124), ReferenceId(128), ReferenceId(132), ReferenceId(133), ReferenceId(137), ReferenceId(141), ReferenceId(142), ReferenceId(146), ReferenceId(150), ReferenceId(151), ReferenceId(155), ReferenceId(159), ReferenceId(160), ReferenceId(164)]
rebuilt        : SymbolId(1): [ReferenceId(29), ReferenceId(30), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(42), ReferenceId(44), ReferenceId(46), ReferenceId(51), ReferenceId(53), ReferenceId(55), ReferenceId(60), ReferenceId(62), ReferenceId(64), ReferenceId(71), ReferenceId(73), ReferenceId(76), ReferenceId(81), ReferenceId(83), ReferenceId(85), ReferenceId(90), ReferenceId(92), ReferenceId(94), ReferenceId(99), ReferenceId(101), ReferenceId(103), ReferenceId(108), ReferenceId(110), ReferenceId(112), ReferenceId(117), ReferenceId(119), ReferenceId(121), ReferenceId(126), ReferenceId(128), ReferenceId(130), ReferenceId(135), ReferenceId(137), ReferenceId(139), ReferenceId(142)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameStaticFieldDestructuredBinding.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(12), ReferenceId(25), ReferenceId(28)]
rebuilt        : SymbolId(2): [ReferenceId(3), ReferenceId(16), ReferenceId(19)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNameStaticsAndStaticMethods.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNamesAndMethods.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/privateNamesAssertion.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(5), ScopeId(10)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(5)]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode)
rebuilt        : ScopeId(10): ScopeFlags(0x0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/members/privateNames/typeFromPrivatePropertyAssignment.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAbstractClasses.ts
Bindings mismatch:
after transform: ScopeId(0): ["AbstractBase", "ConcreteBase", "DerivedFromAbstract", "DerivedFromConcrete", "wasAbstract", "wasConcrete"]
rebuilt        : ScopeId(0): ["AbstractBase", "ConcreteBase", "DerivedFromAbstract", "DerivedFromConcrete", "Mixin", "wasAbstract", "wasConcrete"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(10): [ScopeId(11)]
rebuilt        : ScopeId(6): []
Symbol flags mismatch for "Mixin":
after transform: SymbolId(0): SymbolFlags(Function | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol span mismatch for "Mixin":
after transform: SymbolId(0): Span { start: 10, end: 15 }
rebuilt        : SymbolId(0): Span { start: 55, end: 60 }
Symbol reference IDs mismatch for "Mixin":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(11)]
rebuilt        : SymbolId(0): [ReferenceId(2), ReferenceId(7)]
Symbol redeclarations mismatch for "Mixin":
after transform: SymbolId(0): [Span { start: 10, end: 15 }, Span { start: 55, end: 60 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAbstractClassesReturnTypeInference.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(2): [ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAccessors1.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["HTMLElement", "document"]
rebuilt        : ["document"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAccessors2.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAccessors4.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinAccessors5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(7), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(2): []
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(3): []
Scope children mismatch:
after transform: ScopeId(8): [ScopeId(9)]
rebuilt        : ScopeId(4): []
Symbol flags mismatch for "GetterA":
after transform: SymbolId(5): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol flags mismatch for "GetterB":
after transform: SymbolId(7): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol flags mismatch for "TestB":
after transform: SymbolId(9): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)
Reference symbol mismatch for "basicMixin":
after transform: SymbolId(0) "basicMixin"
rebuilt        : SymbolId(0) "basicMixin"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinClassesAnnotated.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "Derived", "Thing1", "Thing2", "Thing3", "_defineProperty", "f1", "f2"]
rebuilt        : ScopeId(0): ["Base", "Derived", "Printable", "Tagged", "Thing1", "Thing2", "Thing3", "_defineProperty", "f1", "f2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(12), ScopeId(13), ScopeId(16), ScopeId(17), ScopeId(18)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(12), ScopeId(13)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(1): [ReferenceId(3)]
Symbol flags mismatch for "Printable":
after transform: SymbolId(10): SymbolFlags(BlockScopedVariable | ConstVariable | Interface)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable | ConstVariable)
Symbol span mismatch for "Printable":
after transform: SymbolId(10): Span { start: 247, end: 256 }
rebuilt        : SymbolId(8): Span { start: 287, end: 296 }
Symbol reference IDs mismatch for "Printable":
after transform: SymbolId(10): [ReferenceId(8), ReferenceId(22)]
rebuilt        : SymbolId(8): [ReferenceId(19)]
Symbol redeclarations mismatch for "Printable":
after transform: SymbolId(10): [Span { start: 247, end: 256 }, Span { start: 287, end: 296 }]
rebuilt        : SymbolId(8): []
Symbol flags mismatch for "Tagged":
after transform: SymbolId(14): SymbolFlags(Function | Interface)
rebuilt        : SymbolId(12): SymbolFlags(Function)
Symbol span mismatch for "Tagged":
after transform: SymbolId(14): Span { start: 557, end: 563 }
rebuilt        : SymbolId(12): Span { start: 596, end: 602 }
Symbol reference IDs mismatch for "Tagged":
after transform: SymbolId(14): [ReferenceId(14), ReferenceId(19), ReferenceId(21)]
rebuilt        : SymbolId(12): [ReferenceId(16), ReferenceId(18)]
Symbol redeclarations mismatch for "Tagged":
after transform: SymbolId(14): [Span { start: 557, end: 563 }, Span { start: 596, end: 602 }]
rebuilt        : SymbolId(12): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinClassesAnonymous.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(10), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(18)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(16)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(1): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/mixinClassesMembers.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C3", "M1", "M2", "Mixed1", "Mixed2", "Mixed3", "Mixed4", "Mixed5", "_defineProperty", "f1", "f2", "f3", "f4", "f5", "f6"]
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "M1", "M2", "_defineProperty", "f1", "f2", "f3", "f4", "f5", "f6"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(21)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(22)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(5): []
Symbol flags mismatch for "C1":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(6), ReferenceId(7)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "M1":
after transform: SymbolId(3): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol reference IDs mismatch for "M1":
after transform: SymbolId(3): [ReferenceId(0), ReferenceId(3), ReferenceId(5), ReferenceId(8), ReferenceId(10), ReferenceId(52)]
rebuilt        : SymbolId(2): [ReferenceId(6)]
Symbol flags mismatch for "M2":
after transform: SymbolId(5): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol reference IDs mismatch for "M2":
after transform: SymbolId(5): [ReferenceId(4), ReferenceId(9), ReferenceId(11)]
rebuilt        : SymbolId(3): []
Reference symbol mismatch for "Mixed1":
after transform: SymbolId(7) "Mixed1"
rebuilt        : <None>
Reference symbol mismatch for "Mixed1":
after transform: SymbolId(7) "Mixed1"
rebuilt        : <None>
Reference symbol mismatch for "Mixed2":
after transform: SymbolId(8) "Mixed2"
rebuilt        : <None>
Reference symbol mismatch for "Mixed2":
after transform: SymbolId(8) "Mixed2"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Reference symbol mismatch for "Mixed4":
after transform: SymbolId(10) "Mixed4"
rebuilt        : <None>
Reference symbol mismatch for "Mixed4":
after transform: SymbolId(10) "Mixed4"
rebuilt        : <None>
Reference symbol mismatch for "Mixed5":
after transform: SymbolId(11) "Mixed5"
rebuilt        : <None>
Reference symbol mismatch for "Mixed1":
after transform: SymbolId(7) "Mixed1"
rebuilt        : <None>
Reference symbol mismatch for "Mixed1":
after transform: SymbolId(7) "Mixed1"
rebuilt        : <None>
Reference symbol mismatch for "Mixed2":
after transform: SymbolId(8) "Mixed2"
rebuilt        : <None>
Reference symbol mismatch for "Mixed2":
after transform: SymbolId(8) "Mixed2"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Reference symbol mismatch for "Mixed4":
after transform: SymbolId(10) "Mixed4"
rebuilt        : <None>
Reference symbol mismatch for "Mixed4":
after transform: SymbolId(10) "Mixed4"
rebuilt        : <None>
Reference symbol mismatch for "Mixed4":
after transform: SymbolId(10) "Mixed4"
rebuilt        : <None>
Reference symbol mismatch for "Mixed5":
after transform: SymbolId(11) "Mixed5"
rebuilt        : <None>
Reference symbol mismatch for "Mixed5":
after transform: SymbolId(11) "Mixed5"
rebuilt        : <None>
Reference symbol mismatch for "Mixed5":
after transform: SymbolId(11) "Mixed5"
rebuilt        : <None>
Reference symbol mismatch for "Mixed1":
after transform: SymbolId(7) "Mixed1"
rebuilt        : <None>
Reference symbol mismatch for "Mixed3":
after transform: SymbolId(9) "Mixed3"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["Mixed1", "Mixed2", "Mixed3", "Mixed4", "Mixed5", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C"]
rebuilt        : ScopeId(0): ["B", "C"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol flags mismatch for "B":
after transform: SymbolId(1): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol span mismatch for "B":
after transform: SymbolId(1): Span { start: 40, end: 41 }
rebuilt        : SymbolId(0): Span { start: 62, end: 63 }
Symbol redeclarations mismatch for "B":
after transform: SymbolId(1): [Span { start: 40, end: 41 }, Span { start: 62, end: 63 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty8.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(6), SymbolId(11), SymbolId(13), SymbolId(14), SymbolId(15)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5), SymbolId(6), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "classWithProperties":
after transform: SymbolId(6) "classWithProperties"
rebuilt        : SymbolId(0) "classWithProperties"
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/accessorsOverrideProperty9.ts
Bindings mismatch:
after transform: ScopeId(0): ["ApiEnum", "ApiEnumMember", "ApiItem"]
rebuilt        : ScopeId(0): ["ApiEnum", "ApiEnumMember", "ApiItem", "ApiItemContainerMixin"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(10): [ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(4): [ScopeId(5)]
Symbol reference IDs mismatch for "ApiItem":
after transform: SymbolId(7): [ReferenceId(5), ReferenceId(7), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(13), ReferenceId(22), ReferenceId(25)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(5)]
Symbol reference IDs mismatch for "ApiEnumMember":
after transform: SymbolId(8): [ReferenceId(27)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "ApiItemContainerMixin":
after transform: SymbolId(9): SymbolFlags(Function | Interface)
rebuilt        : SymbolId(2): SymbolFlags(Function)
Symbol span mismatch for "ApiItemContainerMixin":
after transform: SymbolId(9): Span { start: 462, end: 483 }
rebuilt        : SymbolId(2): Span { start: 558, end: 579 }
Symbol reference IDs mismatch for "ApiItemContainerMixin":
after transform: SymbolId(9): [ReferenceId(17), ReferenceId(19), ReferenceId(24)]
rebuilt        : SymbolId(2): [ReferenceId(4)]
Symbol redeclarations mismatch for "ApiItemContainerMixin":
after transform: SymbolId(9): [Span { start: 462, end: 483 }, Span { start: 558, end: 579 }]
rebuilt        : SymbolId(2): []
Unresolved references mismatch:
after transform: ["ReadonlyArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/autoAccessor2.ts
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(12)]
rebuilt        : SymbolId(3): [ReferenceId(7)]
Reference symbol mismatch for "":
after transform: SymbolId(0) "C1"
rebuilt        : <None>
Reference symbol mismatch for "":
after transform: SymbolId(0) "C1"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/autoAccessor8.ts
Symbol flags mismatch for "C2":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/autoAccessorAllowedModifiers.ts
Symbol flags mismatch for "C3":
after transform: SymbolId(2): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/initializationOrdering1.ts
Symbol reference IDs mismatch for "Helper":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3)]
rebuilt        : SymbolId(1): [ReferenceId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/instanceMemberInitialization.ts
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberAccessorDeclarations/accessorsAreNotContextuallyTyped.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberAccessorDeclarations/ambientAccessors.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/memberFunctionsWithPublicOverloads.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(16): [ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/memberFunctionDeclarations/typeOfThisInMemberFunctions.ts
Unresolved references mismatch:
after transform: ["Date", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/overrideInterfaceProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Reference symbol mismatch for "Mup":
after transform: SymbolId(0) "Mup"
rebuilt        : <None>
Reference symbol mismatch for "Mup":
after transform: SymbolId(0) "Mup"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["Mup", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/staticAutoAccessorsWithDecorators.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(2): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(2): Some(ScopeId(1))
rebuilt        : ScopeId(2): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(3): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(3): Some(ScopeId(1))
rebuilt        : ScopeId(3): Some(ScopeId(0))

semantic Error: tasks/coverage/typescript/tests/cases/conformance/classes/propertyMemberDeclarations/staticPropertyNameConflicts.ts
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Classes may not have a static property named prototype
Symbol flags mismatch for "TestOnDefaultExportedClass_1":
after transform: SymbolId(41): SymbolFlags(ValueModule)
rebuilt        : SymbolId(82): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_1":
after transform: SymbolId(41): Span { start: 6217, end: 6245 }
rebuilt        : SymbolId(82): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_2":
after transform: SymbolId(44): SymbolFlags(ValueModule)
rebuilt        : SymbolId(86): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_2":
after transform: SymbolId(44): Span { start: 6560, end: 6588 }
rebuilt        : SymbolId(86): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_3":
after transform: SymbolId(47): SymbolFlags(ValueModule)
rebuilt        : SymbolId(90): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_3":
after transform: SymbolId(47): Span { start: 6901, end: 6929 }
rebuilt        : SymbolId(90): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_4":
after transform: SymbolId(50): SymbolFlags(ValueModule)
rebuilt        : SymbolId(94): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_4":
after transform: SymbolId(50): Span { start: 7271, end: 7299 }
rebuilt        : SymbolId(94): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_5":
after transform: SymbolId(53): SymbolFlags(ValueModule)
rebuilt        : SymbolId(98): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_5":
after transform: SymbolId(53): Span { start: 7642, end: 7670 }
rebuilt        : SymbolId(98): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_6":
after transform: SymbolId(56): SymbolFlags(ValueModule)
rebuilt        : SymbolId(102): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_6":
after transform: SymbolId(56): Span { start: 7986, end: 8014 }
rebuilt        : SymbolId(102): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_7":
after transform: SymbolId(59): SymbolFlags(ValueModule)
rebuilt        : SymbolId(106): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_7":
after transform: SymbolId(59): Span { start: 8328, end: 8356 }
rebuilt        : SymbolId(106): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_8":
after transform: SymbolId(62): SymbolFlags(ValueModule)
rebuilt        : SymbolId(110): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_8":
after transform: SymbolId(62): Span { start: 8698, end: 8726 }
rebuilt        : SymbolId(110): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_9":
after transform: SymbolId(65): SymbolFlags(ValueModule)
rebuilt        : SymbolId(114): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_9":
after transform: SymbolId(65): Span { start: 9069, end: 9097 }
rebuilt        : SymbolId(114): Span { start: 0, end: 0 }
Symbol flags mismatch for "TestOnDefaultExportedClass_10":
after transform: SymbolId(68): SymbolFlags(ValueModule)
rebuilt        : SymbolId(118): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TestOnDefaultExportedClass_10":
after transform: SymbolId(68): Span { start: 9457, end: 9486 }
rebuilt        : SymbolId(118): Span { start: 0, end: 0 }
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnum1.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b", "c", "d", "e", "f", "g", "h"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnum3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(1): ["TestType", "bar", "foo"]
rebuilt        : ScopeId(1): ["TestType"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "TestType":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "TestType":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(4), ReferenceId(6), ReferenceId(14)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(7), ReferenceId(9)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/constEnums/constEnumPropertyAccess3.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "D", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/constLocalsInFunctionExpressions.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(13)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(13)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14)]
Reference symbol mismatch for "getStringOrNumber":
after transform: SymbolId(0) "getStringOrNumber"
rebuilt        : SymbolId(0) "getStringOrNumber"
Reference symbol mismatch for "getStringOrNumber":
after transform: SymbolId(0) "getStringOrNumber"
rebuilt        : SymbolId(0) "getStringOrNumber"
Reference symbol mismatch for "getStringOrNumber":
after transform: SymbolId(0) "getStringOrNumber"
rebuilt        : SymbolId(0) "getStringOrNumber"
Reference symbol mismatch for "getStringOrNumber":
after transform: SymbolId(0) "getStringOrNumber"
rebuilt        : SymbolId(0) "getStringOrNumber"
Reference symbol mismatch for "getStringOrNumber":
after transform: SymbolId(0) "getStringOrNumber"
rebuilt        : SymbolId(0) "getStringOrNumber"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowAssignmentExpression.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "fn":
after transform: SymbolId(3) "fn"
rebuilt        : SymbolId(2) "fn"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowAssignmentPatternOrder.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowBinaryOrExpression.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(4), SymbolId(6), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "isNodeList":
after transform: SymbolId(4) "isNodeList"
rebuilt        : SymbolId(2) "isNodeList"
Reference symbol mismatch for "isHTMLCollection":
after transform: SymbolId(6) "isHTMLCollection"
rebuilt        : SymbolId(4) "isHTMLCollection"
Reference symbol mismatch for "isNodeList":
after transform: SymbolId(4) "isNodeList"
rebuilt        : SymbolId(2) "isNodeList"
Reference symbol mismatch for "isHTMLCollection":
after transform: SymbolId(6) "isHTMLCollection"
rebuilt        : SymbolId(4) "isHTMLCollection"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowBindingElement.ts
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(9): [ScopeId(10), ScopeId(11)]
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(12): [ScopeId(13), ScopeId(14)]
Scope children mismatch:
after transform: ScopeId(17): [ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21)]
rebuilt        : ScopeId(15): [ScopeId(16), ScopeId(17), ScopeId(18)]
Unresolved references mismatch:
after transform: ["Error", "console", "const", "undefined"]
rebuilt        : ["Error", "console", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowComputedPropertyNames.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(7), ScopeId(8), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(7), ScopeId(11)]
Unresolved references mismatch:
after transform: ["Record", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowDoWhileStatement.ts
Unresolved references mismatch:
after transform: ["Function", "RegExp", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowElementAccess2.ts
Bindings mismatch:
after transform: ScopeId(0): ["config"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Reference symbol mismatch for "config":
after transform: SymbolId(0) "config"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["config"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowElementAccessNoCrash1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowForInStatement.ts
Unresolved references mismatch:
after transform: ["Function", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowForInStatement2.ts
Bindings mismatch:
after transform: ScopeId(0): ["c", "keywordA", "keywordB", "stringB"]
rebuilt        : ScopeId(0): ["keywordA", "keywordB", "stringB"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "keywordA":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(6)]
rebuilt        : SymbolId(0): [ReferenceId(2)]
Symbol reference IDs mismatch for "keywordB":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["c"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowForOfStatement.ts
Unresolved references mismatch:
after transform: ["RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowIfStatement.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(15)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(15): [ReferenceId(29), ReferenceId(30)]
rebuilt        : SymbolId(11): [ReferenceId(23)]
Unresolved references mismatch:
after transform: ["Error", "JSON", "RegExp"]
rebuilt        : ["Error", "JSON"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowInOperator.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "c", "d", "uniqueID_54790", "uniqueID_54790_2", "uniqueID_54790_3"]
rebuilt        : ScopeId(0): ["a", "b", "d", "uniqueID_54790", "uniqueID_54790_2", "uniqueID_54790_3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(13), ScopeId(17)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(11), ScopeId(15)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(9), ReferenceId(13)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(9)]
Symbol reference IDs mismatch for "b":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(5) "c"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Error", "Number", "undefined"]
rebuilt        : ["Error", "Number", "c", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowInstanceOfGuardPrimitives.ts
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(0), ReferenceId(11)]
rebuilt        : [ReferenceId(10)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowInstanceofExtendsFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "X":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(7), ReferenceId(9)]
rebuilt        : SymbolId(0): [ReferenceId(2), ReferenceId(6), ReferenceId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowOptionalChain2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(13), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(25), ScopeId(28), ScopeId(31)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(23), ScopeId(26)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowStringIndex.ts
Bindings mismatch:
after transform: ScopeId(0): ["value"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "value":
after transform: SymbolId(1) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(1) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(1) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(1) "value"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["value"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowSuperPropertyAccess.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowTruthiness.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(12), SymbolId(15), SymbolId(17), SymbolId(20)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(12), SymbolId(15), SymbolId(17), SymbolId(19)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(23), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(23), ScopeId(26)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/controlFlowWithTemplateLiterals.ts
Bindings mismatch:
after transform: ScopeId(0): ["envVar", "obj"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "envVar":
after transform: SymbolId(0) "envVar"
rebuilt        : <None>
Reference symbol mismatch for "envVar":
after transform: SymbolId(0) "envVar"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["envVar", "obj"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/dependentDestructuredVariablesFromNestedPatterns.ts
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Unresolved references mismatch:
after transform: ["Awaited", "Error", "Math", "Promise", "String", "arguments", "const", "require", "undefined"]
rebuilt        : ["Error", "Math", "Promise", "String", "arguments", "require", "undefined"]
Unresolved reference IDs mismatch for "Error":
after transform: [ReferenceId(0), ReferenceId(4), ReferenceId(15), ReferenceId(22), ReferenceId(29)]
rebuilt        : [ReferenceId(17)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/dependentDestructuredVariablesWithExport.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "mutuallyEnabledPair":
after transform: SymbolId(0) "mutuallyEnabledPair"
rebuilt        : SymbolId(0) "mutuallyEnabledPair"
Reference symbol mismatch for "mutuallyEnabledPair":
after transform: SymbolId(0) "mutuallyEnabledPair"
rebuilt        : SymbolId(0) "mutuallyEnabledPair"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/typeGuardsNestedAssignments.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(8), SymbolId(10), SymbolId(12), SymbolId(13), SymbolId(15)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(9), SymbolId(11), SymbolId(13), SymbolId(14)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13)]
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(5), ReferenceId(6), ReferenceId(16)]
rebuilt        : SymbolId(1): [ReferenceId(13)]
Reference symbol mismatch for "getFooOrNull":
after transform: SymbolId(1) "getFooOrNull"
rebuilt        : SymbolId(2) "getFooOrNull"
Reference symbol mismatch for "getFooOrNull":
after transform: SymbolId(1) "getFooOrNull"
rebuilt        : SymbolId(2) "getFooOrNull"
Reference symbol mismatch for "getFooOrNull":
after transform: SymbolId(1) "getFooOrNull"
rebuilt        : SymbolId(2) "getFooOrNull"
Reference symbol mismatch for "getStringOrNumberOrNull":
after transform: SymbolId(2) "getStringOrNumberOrNull"
rebuilt        : SymbolId(3) "getStringOrNumberOrNull"
Unresolved references mismatch:
after transform: ["Object", "RegExpExecArray", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/controlFlow/typeGuardsTypeParameters.ts
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(5)]
rebuilt        : SymbolId(1): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/anonymousClassAccessorsDeclarationEmit1.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(4): [ReferenceId(3)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/classDoesNotDependOnPrivateMember.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/leaveOptionalParameterAsWritten.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/libReferenceDeclarationEmit.ts
Bindings mismatch:
after transform: ScopeId(0): ["elem"]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["HTMLElement"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/libReferenceDeclarationEmitBundle.ts
Bindings mismatch:
after transform: ScopeId(0): ["elem"]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["HTMLElement"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/libReferenceNoLib.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/libReferenceNoLibBundle.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typePredicates/declarationEmitIdentifierPredicatesWithPrivateName01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typePredicates/declarationEmitThisPredicates01.ts
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(1): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typePredicates/declarationEmitThisPredicates02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typePredicates/declarationEmitThisPredicatesWithPrivateName01.ts
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(1): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typePredicates/declarationEmitThisPredicatesWithPrivateName02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typeReferenceRelatedFiles.ts
Bindings mismatch:
after transform: ScopeId(0): ["FSWatcher", "f"]
rebuilt        : ScopeId(0): ["f"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/declarationEmit/typeofImportTypeOnlyExport.ts
Symbol reference IDs mismatch for "ClassMapDirective":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/1.0lib-noErrors.ts
Bindings mismatch:
after transform: ScopeId(0): ["Infinity", "NaN", "decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "eval", "isFinite", "isNaN", "parseFloat", "parseInt"]
rebuilt        : ScopeId(0): ["decodeURI", "decodeURIComponent", "encodeURI", "encodeURIComponent", "eval", "isFinite", "isNaN", "parseFloat", "parseInt"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(13), ScopeId(14), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(78), ScopeId(79), ScopeId(98), ScopeId(142), ScopeId(143), ScopeId(144), ScopeId(145), ScopeId(146), ScopeId(147), ScopeId(148), ScopeId(149), ScopeId(180), ScopeId(184), ScopeId(185), ScopeId(186), ScopeId(187), ScopeId(188), ScopeId(189), ScopeId(190), ScopeId(191), ScopeId(192), ScopeId(193), ScopeId(194), ScopeId(195), ScopeId(196), ScopeId(197), ScopeId(198), ScopeId(199), ScopeId(209), ScopeId(245), ScopeId(246), ScopeId(247), ScopeId(248)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/accessor/decoratorOnClassAccessor8.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(11), SymbolId(13), SymbolId(14), SymbolId(16), SymbolId(17)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6), SymbolId(8), SymbolId(10), SymbolId(12), SymbolId(14), SymbolId(15)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(16)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/decoratorOnClassConstructor3.ts
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/decoratorOnClassConstructor4.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "C", "_decorate", "_decorateMetadata", "dec"]
rebuilt        : ScopeId(0): ["A", "B", "C", "_decorate", "_decorateMetadata"]
Symbol span mismatch for "A":
after transform: SymbolId(1): Span { start: 34, end: 35 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "A":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 34, end: 35 }
Symbol span mismatch for "B":
after transform: SymbolId(2): Span { start: 52, end: 53 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "B":
after transform: SymbolId(8): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 52, end: 53 }
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 100, end: 101 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 100, end: 101 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Number", "require"]
rebuilt        : ["Number", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/parameter/decoratorOnClassConstructorParameter1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 107, end: 108 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 107, end: 108 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "require"]
rebuilt        : ["Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/constructor/parameter/decoratorOnClassConstructorParameter5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol span mismatch for "BulkEditPreviewProvider":
after transform: SymbolId(1): Span { start: 106, end: 129 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "BulkEditPreviewProvider":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14)]
rebuilt        : SymbolId(5): [ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(18)]
Symbol span mismatch for "BulkEditPreviewProvider":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 106, end: 129 }
Reference symbol mismatch for "IFoo":
after transform: SymbolId(0) "IFoo"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["IFoo", "Object", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedBlockScopedClass1.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []
Symbol span mismatch for "Foo":
after transform: SymbolId(3): Span { start: 100, end: 103 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(4): [ReferenceId(3), ReferenceId(7), ReferenceId(8)]
Symbol span mismatch for "Foo":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 100, end: 103 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedBlockScopedClass2.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []
Symbol span mismatch for "Foo":
after transform: SymbolId(3): Span { start: 114, end: 117 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(4): [ReferenceId(3), ReferenceId(7), ReferenceId(8)]
Symbol span mismatch for "Foo":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 114, end: 117 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedBlockScopedClass3.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []
Symbol span mismatch for "Foo":
after transform: SymbolId(3): Span { start: 100, end: 103 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(9), ReferenceId(11)]
rebuilt        : SymbolId(4): [ReferenceId(3), ReferenceId(7), ReferenceId(8)]
Symbol span mismatch for "Foo":
after transform: SymbolId(6): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 100, end: 103 }
Symbol span mismatch for "Foo":
after transform: SymbolId(4): Span { start: 218, end: 221 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(4): [ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(15), ReferenceId(17)]
rebuilt        : SymbolId(7): [ReferenceId(11), ReferenceId(15), ReferenceId(16)]
Symbol span mismatch for "Foo":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 218, end: 221 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsCommonJS1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Something", "Testing123", "_Testing", "_decorate", "_defineProperty", "forwardRef"]
rebuilt        : ScopeId(0): ["Testing123", "_Testing", "_decorate", "_defineProperty", "forwardRef"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(3): Span { start: 119, end: 129 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Testing123":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(13)]
rebuilt        : SymbolId(5): [ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(10), ReferenceId(11), ReferenceId(12)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 119, end: 129 }
Reference symbol mismatch for "Something":
after transform: SymbolId(2) "Something"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Something"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsCommonJS2.ts
Bindings mismatch:
after transform: ScopeId(0): ["Something", "Testing123", "_decorate", "forwardRef"]
rebuilt        : ScopeId(0): ["Testing123", "_decorate", "forwardRef"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(3): Span { start: 119, end: 129 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "Testing123":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 119, end: 129 }
Reference symbol mismatch for "Something":
after transform: SymbolId(2) "Something"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Something"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsSystem1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Something", "Testing123", "_Testing", "_decorate", "_defineProperty", "forwardRef"]
rebuilt        : ScopeId(0): ["Testing123", "_Testing", "_decorate", "_defineProperty", "forwardRef"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(3): Span { start: 119, end: 129 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Testing123":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(13)]
rebuilt        : SymbolId(5): [ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(10), ReferenceId(11), ReferenceId(12)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 119, end: 129 }
Reference symbol mismatch for "Something":
after transform: SymbolId(2) "Something"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Something"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassExportsSystem2.ts
Bindings mismatch:
after transform: ScopeId(0): ["Something", "Testing123", "_decorate", "forwardRef"]
rebuilt        : ScopeId(0): ["Testing123", "_decorate", "forwardRef"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol span mismatch for "Testing123":
after transform: SymbolId(3): Span { start: 119, end: 129 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "Testing123":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 119, end: 129 }
Reference symbol mismatch for "Something":
after transform: SymbolId(2) "Something"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Something"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratedClassFromExternalModule.ts
Symbol span mismatch for "Decorated":
after transform: SymbolId(2): Span { start: 67, end: 76 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "Decorated":
after transform: SymbolId(3): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 67, end: 76 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorInstantiateModulesInFunctionBodies.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Scope parent mismatch:
after transform: ScopeId(4): Some(ScopeId(3))
rebuilt        : ScopeId(5): Some(ScopeId(0))

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 51, end: 52 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 51, end: 52 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 58, end: 59 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 58, end: 59 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 58, end: 59 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 58, end: 59 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 59, end: 60 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 59, end: 60 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/decoratorOnClass9.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "_B", "_decorate", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["A", "B", "_B", "_decorate", "_defineProperty"]
Symbol span mismatch for "B":
after transform: SymbolId(2): Span { start: 102, end: 103 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(3), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12)]
rebuilt        : SymbolId(4): [ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(14)]
Symbol span mismatch for "B":
after transform: SymbolId(3): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 102, end: 103 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod13.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod14.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty", "decorator"]
rebuilt        : ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty"]
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "decorator", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod15.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty", "decorator"]
rebuilt        : ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty"]
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "decorator", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod16.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty", "decorator"]
rebuilt        : ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty"]
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "decorator", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod18.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty", "decorator"]
rebuilt        : ScopeId(0): ["Foo", "_decorate", "_decorateMetadata", "_defineProperty"]
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "decorator", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod19.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "_classPrivateFieldGet", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_decorateParam", "_x", "_x2", "decorator"]
rebuilt        : ScopeId(0): ["C1", "C2", "_classPrivateFieldGet", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_decorateParam", "_x", "_x2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(7)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3)]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(4): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(2): Some(ScopeId(1))
rebuilt        : ScopeId(4): Some(ScopeId(0))
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(7): []
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(8): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(6): Some(ScopeId(5))
rebuilt        : ScopeId(8): Some(ScopeId(0))
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(14)]
rebuilt        : SymbolId(6): [ReferenceId(17)]
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(3): [ReferenceId(4), ReferenceId(27)]
rebuilt        : SymbolId(9): [ReferenceId(32)]
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object", "WeakMap", "require"]
rebuilt        : ["Function", "Object", "WeakMap", "decorator", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethod7.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/decoratorOnClassMethodOverload2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(2): [ScopeId(3)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor", "require"]
rebuilt        : ["Function", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/parameter/decoratorOnClassMethodParameter1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "Object", "require"]
rebuilt        : ["Function", "Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/method/parameter/decoratorOnClassMethodParameter2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(1), ReferenceId(9)]
rebuilt        : SymbolId(7): [ReferenceId(11)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "Object", "require"]
rebuilt        : ["Function", "Number", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/property/decoratorOnClassProperty1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/property/decoratorOnClassProperty10.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/property/decoratorOnClassProperty12.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/property/decoratorOnClassProperty13.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Object", "PropertyDescriptor", "require"]
rebuilt        : ["Object", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/class/property/decoratorOnClassProperty2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorInAmbientContext.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol reference IDs mismatch for "_b":
after transform: SymbolId(7): [ReferenceId(11), ReferenceId(12)]
rebuilt        : SymbolId(2): [ReferenceId(13)]
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(6): []
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : SymbolId(3) "decorator"
Reference symbol mismatch for "decorator":
after transform: SymbolId(0) "decorator"
rebuilt        : SymbolId(3) "decorator"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadata.ts
Bindings mismatch:
after transform: ScopeId(0): ["MyComponent", "Service", "_decorate", "_decorateMetadata", "_ref", "decorator"]
rebuilt        : ScopeId(0): ["MyComponent", "Service", "_decorate", "_decorateMetadata", "_ref"]
Symbol reference IDs mismatch for "Service":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(14), ReferenceId(15)]
Symbol span mismatch for "MyComponent":
after transform: SymbolId(2): Span { start: 80, end: 91 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "MyComponent":
after transform: SymbolId(8): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 80, end: 91 }
Reference symbol mismatch for "decorator":
after transform: SymbolId(1) "decorator"
rebuilt        : <None>
Reference symbol mismatch for "decorator":
after transform: SymbolId(1) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object"]
rebuilt        : ["Function", "Object", "decorator"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadataWithTypeOnlyImport.ts
Bindings mismatch:
after transform: ScopeId(0): ["MyComponent", "Service", "_decorate", "_decorateMetadata", "decorator"]
rebuilt        : ScopeId(0): ["MyComponent", "_decorate", "_decorateMetadata"]
Symbol span mismatch for "MyComponent":
after transform: SymbolId(2): Span { start: 89, end: 100 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "MyComponent":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 89, end: 100 }
Reference symbol mismatch for "decorator":
after transform: SymbolId(1) "decorator"
rebuilt        : <None>
Reference symbol mismatch for "decorator":
after transform: SymbolId(1) "decorator"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object"]
rebuilt        : ["Function", "Object", "decorator"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/decoratorMetadataWithTypeOnlyImport2.ts
Symbol flags mismatch for "Services":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Services":
after transform: SymbolId(0): Span { start: 17, end: 25 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/decorators/legacyDecorators-contextualTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(2): []
Scope children mismatch:
after transform: ScopeId(19): [ScopeId(20)]
rebuilt        : ScopeId(9): []
Scope children mismatch:
after transform: ScopeId(21): [ScopeId(22)]
rebuilt        : ScopeId(10): []
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(11): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(5): Some(ScopeId(2))
rebuilt        : ScopeId(11): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(12): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(7): Some(ScopeId(2))
rebuilt        : ScopeId(12): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(13): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(10): Some(ScopeId(2))
rebuilt        : ScopeId(13): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(11): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(14): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(11): Some(ScopeId(2))
rebuilt        : ScopeId(14): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(15): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(12): Some(ScopeId(2))
rebuilt        : ScopeId(15): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(14): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(16): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(14): Some(ScopeId(2))
rebuilt        : ScopeId(16): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(17): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(17): Some(ScopeId(2))
rebuilt        : ScopeId(17): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(18): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(18): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(18): Some(ScopeId(2))
rebuilt        : ScopeId(18): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(20): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(19): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(20): Some(ScopeId(19))
rebuilt        : ScopeId(19): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(22): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(20): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(22): Some(ScopeId(21))
rebuilt        : ScopeId(20): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(22): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(4): Some(ScopeId(3))
rebuilt        : ScopeId(22): Some(ScopeId(0))
Symbol span mismatch for "C":
after transform: SymbolId(0): Span { start: 20, end: 21 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(42): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 20, end: 21 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpression2ES2020.ts
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpression4ES2020.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_asyncToGenerator", "_defineProperty", "console"]
rebuilt        : ScopeId(0): ["C", "_asyncToGenerator", "_defineProperty"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["arguments"]
rebuilt        : ["arguments", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionDeclarationEmit1.ts
Bindings mismatch:
after transform: ScopeId(0): ["directory", "getSpecifier", "moduleFile", "p0", "p1", "p2", "returnDynamicLoad", "whatToLoad"]
rebuilt        : ScopeId(0): ["getSpecifier", "p0", "p1", "p2", "returnDynamicLoad"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(0) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "directory":
after transform: SymbolId(2) "directory"
rebuilt        : <None>
Reference symbol mismatch for "moduleFile":
after transform: SymbolId(3) "moduleFile"
rebuilt        : <None>
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(0) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "whatToLoad":
after transform: SymbolId(1) "whatToLoad"
rebuilt        : <None>
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(0) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Unresolved references mismatch:
after transform: []
rebuilt        : ["directory", "moduleFile", "whatToLoad"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionDeclarationEmit3.ts
Bindings mismatch:
after transform: ScopeId(0): ["Zero", "getPath", "p0", "p1", "p2"]
rebuilt        : ScopeId(0): ["getPath", "p0", "p1", "p2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "getPath":
after transform: SymbolId(0) "getPath"
rebuilt        : SymbolId(0) "getPath"
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInAMD2.ts
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInAMD4.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty", "console"]
rebuilt        : ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["arguments"]
rebuilt        : ["arguments", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInCJS2.ts
Unresolved references mismatch:
after transform: ["Promise", "arguments"]
rebuilt        : ["arguments"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInCJS3.ts
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInCJS5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty", "console"]
rebuilt        : ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["arguments"]
rebuilt        : ["arguments", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInScriptContext1.ts
Cannot assign to 'arguments' in strict mode

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInSystem2.ts
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInSystem4.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty", "console"]
rebuilt        : ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["arguments"]
rebuilt        : ["arguments", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInUMD2.ts
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionInUMD4.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty", "console"]
rebuilt        : ScopeId(0): ["C", "D", "_asyncToGenerator", "_defineProperty"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["arguments"]
rebuilt        : ["arguments", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/dynamicImport/importCallExpressionReturnPromiseOfAny.ts
Bindings mismatch:
after transform: ScopeId(0): ["ValidSomeCondition", "defaultModule", "directory", "getSpecifier", "j", "loadModule", "moduleFile", "p1", "p11", "p2", "p3", "whatToLoad"]
rebuilt        : ScopeId(0): ["ValidSomeCondition", "getSpecifier", "j", "loadModule", "p1", "p11", "p2", "p3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "directory":
after transform: SymbolId(4) "directory"
rebuilt        : <None>
Reference symbol mismatch for "moduleFile":
after transform: SymbolId(5) "moduleFile"
rebuilt        : <None>
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(1) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "ValidSomeCondition":
after transform: SymbolId(2) "ValidSomeCondition"
rebuilt        : SymbolId(1) "ValidSomeCondition"
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(1) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(1) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "whatToLoad":
after transform: SymbolId(3) "whatToLoad"
rebuilt        : <None>
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(1) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Reference symbol mismatch for "getSpecifier":
after transform: SymbolId(1) "getSpecifier"
rebuilt        : SymbolId(0) "getSpecifier"
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : ["directory", "moduleFile", "whatToLoad"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumBasics.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "E1"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["A", "B", "C", "E2"]
rebuilt        : ScopeId(2): ["E2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(3): ["E3", "X", "Y", "Z"]
rebuilt        : ScopeId(3): ["E3"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["E4", "X", "Y", "Z"]
rebuilt        : ScopeId(4): ["E4"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["A", "B", "C", "E5"]
rebuilt        : ScopeId(5): ["E5"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(6): ["A", "B", "C", "E6"]
rebuilt        : ScopeId(6): ["E6"]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(0x0)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(7): ["A", "E7"]
rebuilt        : ScopeId(7): ["E7"]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(8): ["B", "E8"]
rebuilt        : ScopeId(8): ["E8"]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(0x0)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(9): ["A", "B", "E9"]
rebuilt        : ScopeId(9): ["E9"]
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(0x0)
rebuilt        : ScopeId(9): ScopeFlags(Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E1":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(30)]
rebuilt        : SymbolId(0): [ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10)]
Symbol flags mismatch for "E2":
after transform: SymbolId(7): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(5): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E3":
after transform: SymbolId(11): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(7): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E4":
after transform: SymbolId(15): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(9): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E5":
after transform: SymbolId(19): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(11): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E6":
after transform: SymbolId(23): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(13): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E7":
after transform: SymbolId(27): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(15): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E8":
after transform: SymbolId(29): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(17): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E9":
after transform: SymbolId(31): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(19): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumClassification.ts
Missing ReferenceId: "E20"
Bindings mismatch:
after transform: ScopeId(1): ["A", "E01"]
rebuilt        : ScopeId(1): ["E01"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["A", "E02"]
rebuilt        : ScopeId(2): ["E02"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(3): ["A", "E03"]
rebuilt        : ScopeId(3): ["E03"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["A", "B", "C", "E04"]
rebuilt        : ScopeId(4): ["E04"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["A", "B", "C", "E05"]
rebuilt        : ScopeId(5): ["E05"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(6): ["A", "B", "C", "E06"]
rebuilt        : ScopeId(6): ["E06"]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(0x0)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(7): ["A", "B", "C", "D", "E", "E07", "F"]
rebuilt        : ScopeId(7): ["E07"]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(8): ["A", "B", "C", "D", "E", "E08"]
rebuilt        : ScopeId(8): ["E08"]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(0x0)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(0x0)
rebuilt        : ScopeId(9): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(10): ["A", "B", "C", "E11"]
rebuilt        : ScopeId(10): ["E11"]
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(0x0)
rebuilt        : ScopeId(10): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(11): ["A", "B", "C", "E12"]
rebuilt        : ScopeId(11): ["E12"]
Scope flags mismatch:
after transform: ScopeId(11): ScopeFlags(0x0)
rebuilt        : ScopeId(11): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(12): ["A", "B", "C", "D", "E20"]
rebuilt        : ScopeId(12): ["E20"]
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(0x0)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Symbol flags mismatch for "E01":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E02":
after transform: SymbolId(2): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E03":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E04":
after transform: SymbolId(6): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(6): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E05":
after transform: SymbolId(10): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(8): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E06":
after transform: SymbolId(14): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(10): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E07":
after transform: SymbolId(18): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(12): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E08":
after transform: SymbolId(25): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(14): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E10":
after transform: SymbolId(31): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(16): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E11":
after transform: SymbolId(32): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(18): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E12":
after transform: SymbolId(36): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(20): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E20":
after transform: SymbolId(40): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(22): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E20":
after transform: SymbolId(56): [ReferenceId(77), ReferenceId(78), ReferenceId(79), ReferenceId(80), ReferenceId(81), ReferenceId(82), ReferenceId(83), ReferenceId(84)]
rebuilt        : SymbolId(23): [ReferenceId(72), ReferenceId(73), ReferenceId(74), ReferenceId(75), ReferenceId(76), ReferenceId(77), ReferenceId(78), ReferenceId(79), ReferenceId(81)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumConstantMemberWithStringEmitDeclaration.ts
Bindings mismatch:
after transform: ScopeId(0): ["T1", "T2", "T3", "T4", "T5", "T6"]
rebuilt        : ScopeId(0): ["T1", "T2", "T3", "T4", "T5"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Bindings mismatch:
after transform: ScopeId(1): ["T1", "a", "b", "c"]
rebuilt        : ScopeId(1): ["T1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["T2", "a", "b"]
rebuilt        : ScopeId(2): ["T2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(3): ["T3", "a", "b"]
rebuilt        : ScopeId(3): ["T3"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["T4", "a"]
rebuilt        : ScopeId(4): ["T4"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["T5", "a"]
rebuilt        : ScopeId(5): ["T5"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Symbol flags mismatch for "T1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T2":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T3":
after transform: SymbolId(7): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T4":
after transform: SymbolId(10): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(6): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T5":
after transform: SymbolId(12): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(8): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumConstantMemberWithTemplateLiteralsEmitDeclaration.ts
Bindings mismatch:
after transform: ScopeId(0): ["T1", "T2", "T3", "T4", "T5", "T6", "T7"]
rebuilt        : ScopeId(0): ["T1", "T2", "T3", "T4", "T5", "T6"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Bindings mismatch:
after transform: ScopeId(1): ["T1", "a"]
rebuilt        : ScopeId(1): ["T1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["T2", "a", "b", "c"]
rebuilt        : ScopeId(2): ["T2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(3): ["T3", "a"]
rebuilt        : ScopeId(3): ["T3"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["T4", "a", "b", "c", "d", "e"]
rebuilt        : ScopeId(4): ["T4"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["T5", "a", "b", "c", "d"]
rebuilt        : ScopeId(5): ["T5"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(6): ["T6", "a", "b"]
rebuilt        : ScopeId(6): ["T6"]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(0x0)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol flags mismatch for "T1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T2":
after transform: SymbolId(2): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T3":
after transform: SymbolId(6): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T4":
after transform: SymbolId(8): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(6): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T5":
after transform: SymbolId(14): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(8): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "T6":
after transform: SymbolId(19): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(10): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumExportMergingES6.ts
Bindings mismatch:
after transform: ScopeId(1): ["Animals", "Cat"]
rebuilt        : ScopeId(1): ["Animals"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(2): ["Animals", "Dog"]
rebuilt        : ScopeId(2): ["Animals"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(3): ["Animals", "CatDog"]
rebuilt        : ScopeId(3): ["Animals"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Animals":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "Animals":
after transform: SymbolId(0): [Span { start: 12, end: 19 }, Span { start: 45, end: 52 }, Span { start: 78, end: 85 }]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["Cat", "Dog"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/enums/enumMerging.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["A", "B", "C", "EImpl1"]
rebuilt        : ScopeId(2): ["EImpl1"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(3): ["D", "E", "EImpl1", "F"]
rebuilt        : ScopeId(3): ["EImpl1"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["A", "B", "C", "EConst1"]
rebuilt        : ScopeId(4): ["EConst1"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["D", "E", "EConst1", "F"]
rebuilt        : ScopeId(5): ["EConst1"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(7): ["A", "B", "C", "EComp2"]
rebuilt        : ScopeId(7): ["EComp2"]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(8): ["D", "E", "EComp2", "F"]
rebuilt        : ScopeId(8): ["EComp2"]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(0x0)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(9): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(10): ["A", "B", "EInit"]
rebuilt        : ScopeId(10): ["EInit"]
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(0x0)
rebuilt        : ScopeId(10): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(11): ["C", "D", "E", "EInit"]
rebuilt        : ScopeId(11): ["EInit"]
Scope flags mismatch:
after transform: ScopeId(11): ScopeFlags(0x0)
rebuilt        : ScopeId(11): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(13): ["Blue", "Color", "Green", "Red"]
rebuilt        : ScopeId(13): ["Color"]
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(0x0)
rebuilt        : ScopeId(13): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(14): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(14): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(15): ["Blue", "Color", "Green", "Red"]
rebuilt        : ScopeId(15): ["Color"]
Scope flags mismatch:
after transform: ScopeId(15): ScopeFlags(0x0)
rebuilt        : ScopeId(15): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(16): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(16): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(17): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(18): ["Blue", "Color", "Green", "Red"]
rebuilt        : ScopeId(18): ["Color"]
Scope flags mismatch:
after transform: ScopeId(18): ScopeFlags(0x0)
rebuilt        : ScopeId(18): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(19): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(19): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(20): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(20): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(21): ["Color", "Yellow"]
rebuilt        : ScopeId(21): ["Color"]
Scope flags mismatch:
after transform: ScopeId(21): ScopeFlags(0x0)
rebuilt        : ScopeId(21): ScopeFlags(Function)
Symbol flags mismatch for "M1":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M1":
after transform: SymbolId(0): Span { start: 183, end: 185 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol flags mismatch for "EImpl1":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "EImpl1":
after transform: SymbolId(1): [Span { start: 197, end: 203 }, Span { start: 238, end: 244 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "EConst1":
after transform: SymbolId(8): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "EConst1":
after transform: SymbolId(8): [Span { start: 290, end: 297 }, Span { start: 351, end: 358 }]
rebuilt        : SymbolId(5): []
Symbol flags mismatch for "M2":
after transform: SymbolId(16): SymbolFlags(ValueModule)
rebuilt        : SymbolId(9): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M2":
after transform: SymbolId(16): Span { start: 570, end: 572 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol flags mismatch for "EComp2":
after transform: SymbolId(17): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(11): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "EComp2":
after transform: SymbolId(17): [Span { start: 591, end: 597 }, Span { start: 684, end: 690 }]
rebuilt        : SymbolId(11): []
Symbol flags mismatch for "M3":
after transform: SymbolId(25): SymbolFlags(ValueModule)
rebuilt        : SymbolId(15): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(25): Span { start: 950, end: 952 }
rebuilt        : SymbolId(15): Span { start: 0, end: 0 }
Symbol flags mismatch for "EInit":
after transform: SymbolId(26): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(17): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "EInit":
after transform: SymbolId(26): [Span { start: 964, end: 969 }, Span { start: 1009, end: 1014 }]
rebuilt        : SymbolId(17): []
Symbol flags mismatch for "M4":
after transform: SymbolId(32): SymbolFlags(ValueModule)
rebuilt        : SymbolId(20): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M4":
after transform: SymbolId(32): Span { start: 1103, end: 1105 }
rebuilt        : SymbolId(20): Span { start: 0, end: 0 }
Symbol flags mismatch for "Color":
after transform: SymbolId(33): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(22): SymbolFlags(BlockScopedVariable)
Symbol flags mismatch for "M5":
after transform: SymbolId(37): SymbolFlags(ValueModule)
rebuilt        : SymbolId(24): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M5":
after transform: SymbolId(37): Span { start: 1160, end: 1162 }
rebuilt        : SymbolId(24): Span { start: 0, end: 0 }
Symbol flags mismatch for "Color":
after transform: SymbolId(38): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(26): SymbolFlags(BlockScopedVariable)
Symbol flags mismatch for "M6":
after transform: SymbolId(42): SymbolFlags(ValueModule)
rebuilt        : SymbolId(28): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M6":
after transform: SymbolId(42): Span { start: 1218, end: 1220 }
rebuilt        : SymbolId(28): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "M6":
after transform: SymbolId(42): [Span { start: 1218, end: 1220 }, Span { start: 1277, end: 1279 }]
rebuilt        : SymbolId(28): []
Symbol flags mismatch for "A":
after transform: SymbolId(43): SymbolFlags(ValueModule)
rebuilt        : SymbolId(30): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(43): Span { start: 1221, end: 1222 }
rebuilt        : SymbolId(30): Span { start: 0, end: 0 }
Symbol flags mismatch for "Color":
after transform: SymbolId(44): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(32): SymbolFlags(BlockScopedVariable)
Symbol flags mismatch for "A":
after transform: SymbolId(48): SymbolFlags(ValueModule)
rebuilt        : SymbolId(35): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(48): Span { start: 1300, end: 1301 }
rebuilt        : SymbolId(35): Span { start: 0, end: 0 }
Symbol flags mismatch for "Color":
after transform: SymbolId(49): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(37): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2017/useObjectValuesAndEntries1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(3): ["A", "B", "E"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(14): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(14): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2018/es2018IntlAPIs.ts
Unresolved references mismatch:
after transform: ["Intl", "console", "const"]
rebuilt        : ["Intl", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2019/globalThisTypeIndexAccess.ts
Bindings mismatch:
after transform: ScopeId(0): ["w_e"]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["globalThis"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2019/importMeta/importMeta.ts
The only valid meta property for import is import.meta

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2019/importMeta/importMetaNarrowing.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/bigintMissingES2019.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/bigintMissingES2020.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/bigintMissingESNext.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(0) "test"
rebuilt        : SymbolId(0) "test"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/intlNumberFormatES2020.ts
Unresolved reference IDs mismatch for "Intl":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7)]
rebuilt        : [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/localesObjectArgument.ts
Unresolved references mismatch:
after transform: ["Date", "Intl", "Readonly"]
rebuilt        : ["Date", "Intl"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2020/modules/exportAsNamespace5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol reference IDs mismatch for "ns":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment1.ts
Bindings mismatch:
after transform: ScopeId(0): ["_c", "_f", "_i", "a", "b", "c", "d", "e", "f", "g", "h", "i"]
rebuilt        : ScopeId(0): ["_c", "_f", "_i"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(3) "d"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(3) "d"
rebuilt        : <None>
Reference symbol mismatch for "e":
after transform: SymbolId(4) "e"
rebuilt        : <None>
Reference symbol mismatch for "e":
after transform: SymbolId(4) "e"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(5) "f"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(5) "f"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(6) "g"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(6) "g"
rebuilt        : <None>
Reference symbol mismatch for "h":
after transform: SymbolId(7) "h"
rebuilt        : <None>
Reference symbol mismatch for "h":
after transform: SymbolId(7) "h"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(8) "i"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(8) "i"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b", "c", "d", "e", "f", "g", "h", "i"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_a$foo", "_a$foo$bar", "_b$foo", "_b$foo$bar", "_c$baz", "_c$foo", "_c$foo$bar", "_c$foo$bar$baz", "_c$foo$baz", "a", "b", "c", "result"]
rebuilt        : ScopeId(0): ["_a$foo", "_a$foo$bar", "_b$foo", "_b$foo$bar", "_c$baz", "_c$foo", "_c$foo$bar", "_c$foo$bar$baz", "_c$foo$baz"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b", "c", "result"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment3.ts
Bindings mismatch:
after transform: ScopeId(0): ["_c$baz", "a", "b", "c", "result"]
rebuilt        : ScopeId(0): ["_c$baz"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "result":
after transform: SymbolId(1) "result"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b", "c", "result"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2021/logicalAssignment/logicalAssignment9.ts
Bindings mismatch:
after transform: ScopeId(0): ["_x$a", "x"]
rebuilt        : ScopeId(0): ["_x$a"]
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2022/arbitraryModuleNamespaceIdentifiers/arbitraryModuleNamespaceIdentifiers_module.ts
Bindings mismatch:
after transform: ScopeId(0): ["_Z", "importStarTestA", "importTest", "reimportTest", "someValue", "typeA", "typeB", "typeC", "valueX", "valueY", "valueZ"]
rebuilt        : ScopeId(0): ["_Z", "importStarTestA", "importTest", "reimportTest", "someValue", "valueX", "valueY", "valueZ"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es2022/es2022IntlAPIs.ts
Unresolved references mismatch:
after transform: ["Intl", "const"]
rebuilt        : ["Intl"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolDeclarationEmit3.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolDeclarationEmit5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolDeclarationEmit6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolDeclarationEmit7.ts
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty11.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(1)]
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty13.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(8), SymbolId(9), SymbolId(10)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(9)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(2): [ReferenceId(6)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(3) "foo"
Reference symbol mismatch for "bar":
after transform: SymbolId(5) "bar"
rebuilt        : SymbolId(6) "bar"
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty14.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(8), SymbolId(9), SymbolId(10)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(9)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(2): [ReferenceId(6)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(3) "foo"
Reference symbol mismatch for "bar":
after transform: SymbolId(5) "bar"
rebuilt        : SymbolId(6) "bar"
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty15.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(4), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(4), ReferenceId(6)]
rebuilt        : SymbolId(0): [ReferenceId(1)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(1) "foo"
Reference symbol mismatch for "bar":
after transform: SymbolId(5) "bar"
rebuilt        : SymbolId(4) "bar"
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty16.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(8), SymbolId(9), SymbolId(10)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(9)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(2): [ReferenceId(6)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(3) "foo"
Reference symbol mismatch for "bar":
after transform: SymbolId(5) "bar"
rebuilt        : SymbolId(6) "bar"
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty20.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(3), ReferenceId(5)]
rebuilt        : [ReferenceId(0), ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty22.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(3)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(3) "foo"
rebuilt        : SymbolId(0) "foo"
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(9)]
rebuilt        : [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty23.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(2)]
rebuilt        : [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty28.ts
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(1): [ReferenceId(2)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty29.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty31.ts
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty37.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty38.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty40.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(6), ReferenceId(8)]
rebuilt        : [ReferenceId(0), ReferenceId(4), ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty41.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(6), ReferenceId(8)]
rebuilt        : [ReferenceId(0), ReferenceId(4), ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty48.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty49.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty50.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty51.ts
Bindings mismatch:
after transform: ScopeId(1): ["C", "Symbol", "_M"]
rebuilt        : ScopeId(1): ["C", "_M"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty55.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(1): Span { start: 48, end: 49 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Unresolved references mismatch:
after transform: ["Symbol", "SymbolConstructor"]
rebuilt        : ["Symbol"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty56.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(1): Span { start: 48, end: 49 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty58.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty60.ts
Bindings mismatch:
after transform: ScopeId(0): ["mySymbol"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty61.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(8), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(3): []
Unresolved reference IDs mismatch for "Symbol":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(6), ReferenceId(11)]
rebuilt        : [ReferenceId(0), ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolProperty8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType16.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType17.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType18.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/Symbols/symbolType19.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(6)]
rebuilt        : SymbolId(0): [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/arrowFunction/emitArrowFunction.ts
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/arrowFunction/emitArrowFunctionES6.ts
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationOverloadInES6.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(3): [ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithConstructorInES6.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(4): [ScopeId(5), ScopeId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithExtensionAndTypeArgumentInES6.ts
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(4): [ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/emitClassDeclarationWithTypeArgumentAndOverloadInES6.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classDeclaration/superCallBeforeThisAccessing1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "D", "Factory", "_defineProperty"]
rebuilt        : ScopeId(0): ["Base", "D", "_defineProperty"]
Reference symbol mismatch for "Factory":
after transform: SymbolId(0) "Factory"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["Factory", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/classExpressions/typeArgumentInferenceWithClassExpression1.ts
Bindings mismatch:
after transform: ScopeId(0): ["_Class2", "_defineProperty", "foo"]
rebuilt        : ScopeId(0): ["_Class", "_Class2", "_defineProperty", "foo"]
Bindings mismatch:
after transform: ScopeId(1): ["_Class", "x"]
rebuilt        : ScopeId(1): ["x"]
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(3): ScopeId(1)
rebuilt        : SymbolId(1): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames37_ES5.ts
Symbol reference IDs mismatch for "Foo2":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames37_ES6.ts
Symbol reference IDs mismatch for "Foo2":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames41_ES5.ts
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Symbol reference IDs mismatch for "Foo2":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames41_ES6.ts
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Symbol reference IDs mismatch for "Foo2":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames47_ES5.ts
Bindings mismatch:
after transform: ScopeId(1): ["E1", "x"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["E2", "x"]
rebuilt        : ScopeId(2): ["E2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E2":
after transform: SymbolId(2): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames47_ES6.ts
Bindings mismatch:
after transform: ScopeId(1): ["E1", "x"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["E2", "x"]
rebuilt        : ScopeId(2): ["E2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "E2":
after transform: SymbolId(2): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames7_ES5.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "member"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNames7_ES6.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "member"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType1_ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType1_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType2_ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType2_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType3_ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType3_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType4_ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType4_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType5_ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType5_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType6_ES5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType6_ES6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType7_ES5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(4), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "foo":
after transform: SymbolId(4) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "g":
after transform: SymbolId(7) "g"
rebuilt        : SymbolId(2) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesContextualType7_ES6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(4), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "foo":
after transform: SymbolId(4) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "g":
after transform: SymbolId(7) "g"
rebuilt        : SymbolId(2) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesOnOverloads_ES5.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol reference IDs mismatch for "methodName":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/computedProperties/computedPropertyNamesOnOverloads_ES6.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol reference IDs mismatch for "methodName":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/accessor/decoratorOnClassAccessor1.es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "dec"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata", "_default", "dec"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(2): ["_default"]
rebuilt        : ScopeId(2): []
Symbol scope ID mismatch for "_default":
after transform: SymbolId(6): ScopeId(2)
rebuilt        : SymbolId(6): ScopeId(0)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor"]
rebuilt        : ["Function"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass1.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 51, end: 52 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 51, end: 52 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass2.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 58, end: 59 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 58, end: 59 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass3.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 66, end: 67 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 66, end: 67 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass4.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol flags mismatch for "_default":
after transform: SymbolId(3): SymbolFlags(Class)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(1) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass5.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 51, end: 52 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(3), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10)]
rebuilt        : SymbolId(5): [ReferenceId(5), ReferenceId(6), ReferenceId(10), ReferenceId(11)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 51, end: 52 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass6.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 58, end: 59 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(3), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(13)]
rebuilt        : SymbolId(5): [ReferenceId(3), ReferenceId(4), ReferenceId(8), ReferenceId(9), ReferenceId(10)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 58, end: 59 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass7.es6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 66, end: 67 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(3), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(13)]
rebuilt        : SymbolId(5): [ReferenceId(3), ReferenceId(4), ReferenceId(8), ReferenceId(9), ReferenceId(10)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 66, end: 67 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/decoratorOnClass8.es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_Class", "_decorate", "_default", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["_decorate", "_default", "_defineProperty", "dec"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(2): []
rebuilt        : ScopeId(2): ["_Class"]
Symbol flags mismatch for "_default":
after transform: SymbolId(4): SymbolFlags(Class)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol scope ID mismatch for "_Class":
after transform: SymbolId(3): ScopeId(0)
rebuilt        : SymbolId(5): ScopeId(2)
Symbol reference IDs mismatch for "_Class":
after transform: SymbolId(3): [ReferenceId(6)]
rebuilt        : SymbolId(5): []
Reference symbol mismatch for "_Class":
after transform: SymbolId(3) "_Class"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: []
rebuilt        : ["_Class"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/method/decoratorOnClassMethod1.es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "dec"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata", "_default", "dec"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(2): ["_default"]
rebuilt        : ScopeId(2): []
Symbol scope ID mismatch for "_default":
after transform: SymbolId(6): ScopeId(2)
rebuilt        : SymbolId(6): ScopeId(0)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(2) "dec"
Unresolved references mismatch:
after transform: ["Function", "TypedPropertyDescriptor"]
rebuilt        : ["Function"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/method/parameter/decoratorOnClassMethodParameter1.es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "_decorateParam", "dec"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata", "_decorateParam", "_default", "dec"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(2): ["_default"]
rebuilt        : ScopeId(2): []
Symbol scope ID mismatch for "_default":
after transform: SymbolId(7): ScopeId(2)
rebuilt        : SymbolId(7): ScopeId(0)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"
Unresolved references mismatch:
after transform: ["Function", "Number", "Object"]
rebuilt        : ["Function", "Number"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/decorators/class/property/decoratorOnClassProperty1.es6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata", "_default", "_defineProperty", "dec"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(2): ["_default"]
rebuilt        : ScopeId(2): []
Symbol scope ID mismatch for "_default":
after transform: SymbolId(5): ScopeId(2)
rebuilt        : SymbolId(6): ScopeId(0)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : SymbolId(3) "dec"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/declarationInAmbientContext.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "c", "d"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringArrayBindingPatternAndAssignment5SiblingInitializer.ts
Bindings mismatch:
after transform: ScopeId(0): ["f1", "f2", "f3", "f4", "yadda"]
rebuilt        : ScopeId(0): ["f1", "f2", "f3", "f4"]
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["yadda"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment1ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment1ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment7.ts
Bindings mismatch:
after transform: ScopeId(1): ["K", "a", "b"]
rebuilt        : ScopeId(1): ["K"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "K":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringObjectBindingPatternAndAssignment9SiblingInitializer.ts
Bindings mismatch:
after transform: ScopeId(0): ["f1", "f2", "f3", "f4", "yadda"]
rebuilt        : ScopeId(0): ["f1", "f2", "f3", "f4"]
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Reference symbol mismatch for "yadda":
after transform: SymbolId(15) "yadda"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["yadda"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration10.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Unresolved references mismatch:
after transform: ["Partial", "Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration7ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringParameterDeclaration7ES5iterable.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/destructuringVoid.ts
Bindings mismatch:
after transform: ScopeId(0): ["v"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "v":
after transform: SymbolId(0) "v"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["v"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/iterableArrayPattern15.ts
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3)]
rebuilt        : SymbolId(1): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/iterableArrayPattern20.ts
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5)]
rebuilt        : SymbolId(1): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/iterableArrayPattern3.ts
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(1): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/destructuring/iterableArrayPattern4.ts
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(1): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/for-ofStatements/for-of57.ts
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/for-ofStatements/for-of58.ts
Bindings mismatch:
after transform: ScopeId(0): ["arr"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "arr":
after transform: SymbolId(2) "arr"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["arr"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsAmd/decoratedDefaultExportsGetExportedAmd.ts
Symbol span mismatch for "Foo":
after transform: SymbolId(1): Span { start: 64, end: 67 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "Foo":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 64, end: 67 }
Unresolved references mismatch:
after transform: ["ClassDecorator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsCommonjs/decoratedDefaultExportsGetExportedCommonjs.ts
Symbol span mismatch for "Foo":
after transform: SymbolId(1): Span { start: 64, end: 67 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "Foo":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 64, end: 67 }
Unresolved references mismatch:
after transform: ["ClassDecorator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsSystem/decoratedDefaultExportsGetExportedSystem.ts
Symbol span mismatch for "Foo":
after transform: SymbolId(1): Span { start: 64, end: 67 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "Foo":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 64, end: 67 }
Unresolved references mismatch:
after transform: ["ClassDecorator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsSystem/topLevelVarHoistingCommonJS.ts
'with' statements are not allowed

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/moduleExportsUmd/decoratedDefaultExportsGetExportedUmd.ts
Symbol span mismatch for "Foo":
after transform: SymbolId(1): Span { start: 64, end: 67 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "Foo":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 64, end: 67 }
Unresolved references mismatch:
after transform: ["ClassDecorator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/defaultExportWithOverloads01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol span mismatch for "f":
after transform: SymbolId(0): Span { start: 24, end: 25 }
rebuilt        : SymbolId(0): Span { start: 91, end: 92 }
Symbol redeclarations mismatch for "f":
after transform: SymbolId(0): [Span { start: 24, end: 25 }, Span { start: 53, end: 54 }, Span { start: 91, end: 92 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1-amd.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1-es6.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports1.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3-amd.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3-es6.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports3.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImports5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImportsWithContextualKeywordNames02.ts
Bindings mismatch:
after transform: ScopeId(0): ["as"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/modules/exportsAndImportsWithUnderscores4.ts
Bindings mismatch:
after transform: ScopeId(0): ["_", "__", "___", "___hello", "__esmodule", "__proto", "_hi", "console"]
rebuilt        : ScopeId(0): ["_", "__", "___", "___hello", "__esmodule", "__proto", "_hi"]
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Reference symbol mismatch for "console":
after transform: SymbolId(0) "console"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/restParameters/emitRestParametersFunctionProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/restParameters/emitRestParametersFunctionPropertyES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesWithModule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/shorthandPropertyAssignment/objectLiteralShorthandPropertiesWithModuleES6.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/spread/iteratorSpreadInArray11.ts
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressions.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithManyCallAndMemberExpressionsES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithOverloadResolution2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Unresolved references mismatch:
after transform: ["TemplateStringsArray", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithOverloadResolution2_ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Unresolved references mismatch:
after transform: ["TemplateStringsArray", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithTypedTags.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateStringsWithTypedTagsES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplateUntypedTagCall01.ts
Unresolved references mismatch:
after transform: ["Function"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/templates/taggedTemplatesWithTypeArguments1.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "a", "b", "c", "f", "g", "obj"]
rebuilt        : ScopeId(0): ["_objectSpread", "a", "b", "c", "f", "g"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(1) "f"
Reference symbol mismatch for "g":
after transform: SymbolId(9) "g"
rebuilt        : SymbolId(8) "g"
Reference symbol mismatch for "obj":
after transform: SymbolId(22) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(22) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Array", "TemplateStringsArray"]
rebuilt        : ["obj"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorInAmbientContext6.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorOverloads4.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorOverloads5.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck1.ts
Unresolved references mismatch:
after transform: ["Iterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck10.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck11.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck12.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck13.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck17.ts
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Unresolved references mismatch:
after transform: ["IterableIterator", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck19.ts
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Unresolved references mismatch:
after transform: ["IterableIterator", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck2.ts
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck26.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck27.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck28.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["IterableIterator", "Symbol"]
rebuilt        : ["Symbol"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck29.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["Iterable", "Iterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck3.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck30.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Unresolved references mismatch:
after transform: ["Iterable", "Iterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck38.ts
Symbol reference IDs mismatch for "yield":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck45.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Unresolved references mismatch:
after transform: ["Iterator", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck46.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Unresolved references mismatch:
after transform: ["Iterable", "Symbol", "undefined"]
rebuilt        : ["Symbol", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es6/yieldExpressions/generatorTypeCheck61.ts
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 42, end: 43 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 42, end: 43 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(28)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(22), ReferenceId(25), ReferenceId(28), ReferenceId(29), ReferenceId(31), ReferenceId(34), ReferenceId(37), ReferenceId(39)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/es7/exponentiationOperator/exponentiationOperatorWithEnumUnion.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["F", "c", "d"]
rebuilt        : ScopeId(2): ["F"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(23), ReferenceId(29)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(28), ReferenceId(31), ReferenceId(34), ReferenceId(35), ReferenceId(37), ReferenceId(40), ReferenceId(43), ReferenceId(45)]
Symbol flags mismatch for "F":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "F":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(35)]
rebuilt        : SymbolId(2): [ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-nonStatic.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "_method2", "dec", "method3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "_method2", "method3"]
Reference flags mismatch for "_method":
after transform: ReferenceId(39): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference flags mismatch for "_method2":
after transform: ReferenceId(48): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(4): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object", "require"]
rebuilt        : ["Function", "Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-nonStaticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_C_brand", "_classPrivateMethodInitSpec", "_decorate", "_decorateMetadata", "_get_method", "_set_method", "dec"]
rebuilt        : ScopeId(0): ["C", "_C_brand", "_classPrivateMethodInitSpec", "_decorate", "_decorateMetadata", "_get_method", "_set_method"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object", "WeakSet", "require"]
rebuilt        : ["Function", "Object", "WeakSet", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-static.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "_method2", "dec", "method3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "_method2", "method3"]
Reference flags mismatch for "_method":
after transform: ReferenceId(39): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference flags mismatch for "_method2":
after transform: ReferenceId(48): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(4): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object", "require"]
rebuilt        : ["Function", "Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/accessors/esDecorators-classDeclaration-accessors-staticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata", "_get_method", "_get_method2", "_set_method", "_set_method2", "_toSetter", "dec"]
rebuilt        : ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata", "_get_method", "_get_method2", "_set_method", "_set_method2", "_toSetter"]
Symbol span mismatch for "D":
after transform: SymbolId(3): Span { start: 137, end: 138 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(3): [ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(9): [ReferenceId(20), ReferenceId(30), ReferenceId(33)]
Symbol span mismatch for "D":
after transform: SymbolId(14): Span { start: 0, end: 0 }
rebuilt        : SymbolId(10): Span { start: 137, end: 138 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(14): [ReferenceId(28)]
rebuilt        : SymbolId(10): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "D":
after transform: SymbolId(14) "D"
rebuilt        : SymbolId(9) "D"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Object", "require"]
rebuilt        : ["Function", "Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "C", "_C", "_decorate", "_superPropGet", "dec", "method"]
rebuilt        : ScopeId(0): ["Base", "C", "_C", "_decorate", "_superPropGet", "method"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 125, end: 126 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(4), ReferenceId(6)]
rebuilt        : SymbolId(5): [ReferenceId(4), ReferenceId(25), ReferenceId(28)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 125, end: 126 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(25)]
rebuilt        : SymbolId(6): []
Reference symbol mismatch for "C":
after transform: SymbolId(5) "C"
rebuilt        : SymbolId(5) "C"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C3", "_C", "_C2", "_C3", "_decorate", "_superPropGet", "dec"]
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "_C", "_C2", "_C3", "_decorate", "_superPropGet"]
Symbol span mismatch for "C1":
after transform: SymbolId(1): Span { start: 97, end: 99 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(5)]
rebuilt        : SymbolId(5): [ReferenceId(3), ReferenceId(7), ReferenceId(10)]
Symbol span mismatch for "C1":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 97, end: 99 }
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(4): [ReferenceId(9)]
rebuilt        : SymbolId(6): []
Symbol span mismatch for "C2":
after transform: SymbolId(2): Span { start: 239, end: 241 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(2): [ReferenceId(11), ReferenceId(13)]
rebuilt        : SymbolId(7): [ReferenceId(12), ReferenceId(16), ReferenceId(19)]
Symbol span mismatch for "C2":
after transform: SymbolId(8): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 239, end: 241 }
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(8): [ReferenceId(17)]
rebuilt        : SymbolId(8): []
Symbol span mismatch for "C3":
after transform: SymbolId(3): Span { start: 389, end: 391 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(3): [ReferenceId(19), ReferenceId(21)]
rebuilt        : SymbolId(9): [ReferenceId(21), ReferenceId(25), ReferenceId(28)]
Symbol span mismatch for "C3":
after transform: SymbolId(10): Span { start: 0, end: 0 }
rebuilt        : SymbolId(10): Span { start: 389, end: 391 }
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(10): [ReferenceId(25)]
rebuilt        : SymbolId(10): []
Reference symbol mismatch for "C1":
after transform: SymbolId(4) "C1"
rebuilt        : SymbolId(5) "C1"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "C2":
after transform: SymbolId(8) "C2"
rebuilt        : SymbolId(7) "C2"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "C3":
after transform: SymbolId(10) "C3"
rebuilt        : SymbolId(9) "C3"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "C", "_C", "_decorate", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "dec", "x"]
rebuilt        : ScopeId(0): ["Base", "C", "_C", "_decorate", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "x"]
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(23): SymbolFlags(Class)
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 96, end: 97 }
rebuilt        : SymbolId(25): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(13), ReferenceId(15)]
rebuilt        : SymbolId(25): [ReferenceId(8), ReferenceId(173), ReferenceId(176)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(26): Span { start: 96, end: 97 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(171)]
rebuilt        : SymbolId(26): []
Reference symbol mismatch for "C":
after transform: SymbolId(5) "C"
rebuilt        : SymbolId(25) "C"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.4.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "C", "_C", "_decorate", "_defineProperty", "_superPropGet", "dec", "method"]
rebuilt        : ScopeId(0): ["Base", "C", "_C", "_decorate", "_defineProperty", "_superPropGet", "method"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 127, end: 128 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(4), ReferenceId(6), ReferenceId(10), ReferenceId(15), ReferenceId(20), ReferenceId(25), ReferenceId(30), ReferenceId(35)]
rebuilt        : SymbolId(6): [ReferenceId(5), ReferenceId(7), ReferenceId(12), ReferenceId(17), ReferenceId(23), ReferenceId(28), ReferenceId(33), ReferenceId(38), ReferenceId(41)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 0, end: 0 }
rebuilt        : SymbolId(7): Span { start: 127, end: 128 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(37)]
rebuilt        : SymbolId(7): []
Reference symbol mismatch for "C":
after transform: SymbolId(5) "C"
rebuilt        : SymbolId(6) "C"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.5.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "C1", "C2", "C3", "_C", "_C2", "_C3", "_decorate", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "dec", "x"]
rebuilt        : ScopeId(0): ["Base", "C1", "C2", "C3", "_C", "_C2", "_C3", "_decorate", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "x"]
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(25): SymbolFlags(Class)
Symbol span mismatch for "C1":
after transform: SymbolId(3): Span { start: 96, end: 98 }
rebuilt        : SymbolId(27): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(3): [ReferenceId(17), ReferenceId(19), ReferenceId(23), ReferenceId(28), ReferenceId(36), ReferenceId(49), ReferenceId(62), ReferenceId(72), ReferenceId(82), ReferenceId(84), ReferenceId(86)]
rebuilt        : SymbolId(27): [ReferenceId(8), ReferenceId(10), ReferenceId(15), ReferenceId(20), ReferenceId(28), ReferenceId(41), ReferenceId(54), ReferenceId(64), ReferenceId(74), ReferenceId(76), ReferenceId(77), ReferenceId(80)]
Symbol span mismatch for "C1":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(28): Span { start: 96, end: 98 }
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(7): [ReferenceId(88)]
rebuilt        : SymbolId(28): []
Symbol span mismatch for "C2":
after transform: SymbolId(4): Span { start: 389, end: 391 }
rebuilt        : SymbolId(29): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(4): [ReferenceId(90), ReferenceId(92), ReferenceId(96), ReferenceId(101), ReferenceId(109), ReferenceId(122), ReferenceId(135), ReferenceId(145), ReferenceId(155), ReferenceId(157), ReferenceId(159)]
rebuilt        : SymbolId(29): [ReferenceId(83), ReferenceId(85), ReferenceId(90), ReferenceId(95), ReferenceId(103), ReferenceId(116), ReferenceId(129), ReferenceId(139), ReferenceId(149), ReferenceId(151), ReferenceId(152), ReferenceId(155)]
Symbol span mismatch for "C2":
after transform: SymbolId(18): Span { start: 0, end: 0 }
rebuilt        : SymbolId(30): Span { start: 389, end: 391 }
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(18): [ReferenceId(161)]
rebuilt        : SymbolId(30): []
Symbol span mismatch for "C3":
after transform: SymbolId(5): Span { start: 709, end: 711 }
rebuilt        : SymbolId(31): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(5): [ReferenceId(163), ReferenceId(165), ReferenceId(169), ReferenceId(174), ReferenceId(183), ReferenceId(197), ReferenceId(211), ReferenceId(222), ReferenceId(233), ReferenceId(235), ReferenceId(237)]
rebuilt        : SymbolId(31): [ReferenceId(158), ReferenceId(160), ReferenceId(166), ReferenceId(172), ReferenceId(182), ReferenceId(197), ReferenceId(212), ReferenceId(224), ReferenceId(236), ReferenceId(239), ReferenceId(241), ReferenceId(244)]
Symbol span mismatch for "C3":
after transform: SymbolId(26): Span { start: 0, end: 0 }
rebuilt        : SymbolId(32): Span { start: 709, end: 711 }
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(26): [ReferenceId(239)]
rebuilt        : SymbolId(32): []
Reference symbol mismatch for "C1":
after transform: SymbolId(7) "C1"
rebuilt        : SymbolId(27) "C1"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "C2":
after transform: SymbolId(18) "C2"
rebuilt        : SymbolId(29) "C2"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "C3":
after transform: SymbolId(26) "C3"
rebuilt        : SymbolId(31) "C3"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classSuper/esDecorators-classDeclaration-classSuper.6.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "C", "_decorate", "_decorateMetadata", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["Base", "C", "_decorate", "_decorateMetadata", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 195, end: 196 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 195, end: 196 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classThisReference/esDecorators-classDeclaration-classThisReference.es5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_C", "_decorate", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["C", "_C", "_decorate", "_defineProperty"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 34, end: 35 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(3), ReferenceId(6)]
rebuilt        : SymbolId(3): [ReferenceId(3), ReferenceId(6), ReferenceId(8), ReferenceId(11)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 34, end: 35 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(8)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "C":
after transform: SymbolId(2) "C"
rebuilt        : SymbolId(3) "C"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/classThisReference/esDecorators-classDeclaration-classThisReference.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_C", "_decorate", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["C", "_C", "_decorate", "_defineProperty"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 34, end: 35 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(3), ReferenceId(6)]
rebuilt        : SymbolId(3): [ReferenceId(3), ReferenceId(6), ReferenceId(8), ReferenceId(11)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 34, end: 35 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(8)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "C":
after transform: SymbolId(2) "C"
rebuilt        : SymbolId(3) "C"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commentPreservation.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y", "dec"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 57, end: 58 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(11): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 57, end: 58 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Number", "Object"]
rebuilt        : ["Function", "Number", "Object", "dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commonjs-classNamespaceMerge.ts
Bindings mismatch:
after transform: ScopeId(0): ["Example", "_decorate", "deco"]
rebuilt        : ScopeId(0): ["Example", "_decorate"]
Symbol span mismatch for "Example":
after transform: SymbolId(1): Span { start: 43, end: 50 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "Example":
after transform: SymbolId(1): [Span { start: 43, end: 50 }, Span { start: 93, end: 100 }]
rebuilt        : SymbolId(1): []
Symbol span mismatch for "Example":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 43, end: 50 }
Reference symbol mismatch for "deco":
after transform: SymbolId(0) "deco"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["deco"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-commonjs.ts
Bindings mismatch:
after transform: ScopeId(0): ["Example", "_decorate", "deco"]
rebuilt        : ScopeId(0): ["Example", "_decorate"]
Symbol span mismatch for "Example":
after transform: SymbolId(1): Span { start: 43, end: 50 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "Example":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 43, end: 50 }
Reference symbol mismatch for "deco":
after transform: SymbolId(0) "deco"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["deco"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-multipleDecorators.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "dec1", "dec2"]
rebuilt        : ScopeId(0): ["C", "_decorate"]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 53, end: 54 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(3): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 53, end: 54 }
Reference symbol mismatch for "dec1":
after transform: SymbolId(0) "dec1"
rebuilt        : <None>
Reference symbol mismatch for "dec2":
after transform: SymbolId(1) "dec2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec1", "dec2", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-outerThisReference.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "C", "_a", "_classPrivateFieldGet", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_defineProperty", "_f", "_f2", "dec", "f"]
rebuilt        : ScopeId(0): ["A", "B", "C", "_a", "_classPrivateFieldGet", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_defineProperty", "_f", "_f2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(7)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(7): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(4): Some(ScopeId(3))
rebuilt        : ScopeId(7): Some(ScopeId(0))
Symbol span mismatch for "A":
after transform: SymbolId(2): Span { start: 119, end: 120 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "A":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 119, end: 120 }
Symbol span mismatch for "B":
after transform: SymbolId(3): Span { start: 300, end: 301 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol span mismatch for "B":
after transform: SymbolId(12): Span { start: 0, end: 0 }
rebuilt        : SymbolId(10): Span { start: 300, end: 301 }
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 551, end: 552 }
rebuilt        : SymbolId(12): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(8), ReferenceId(39), ReferenceId(41), ReferenceId(43)]
rebuilt        : SymbolId(12): [ReferenceId(44), ReferenceId(45), ReferenceId(48)]
Symbol span mismatch for "C":
after transform: SymbolId(16): Span { start: 0, end: 0 }
rebuilt        : SymbolId(13): Span { start: 551, end: 552 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "WeakMap", "require"]
rebuilt        : ["Object", "WeakMap", "dec", "f", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-parameterProperties.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "bound"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata"]
Reference symbol mismatch for "bound":
after transform: SymbolId(0) "bound"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "bound", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-setFunctionName.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "dec"]
rebuilt        : ScopeId(0): ["C", "_decorate"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 34, end: 35 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 34, end: 35 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-simpleTransformation.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "dec"]
rebuilt        : ScopeId(0): ["C", "_decorate"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 34, end: 35 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 34, end: 35 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/esDecorators-classDeclaration-sourceMap.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y", "dec"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 39, end: 40 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(11): Span { start: 0, end: 0 }
rebuilt        : SymbolId(4): Span { start: 39, end: 40 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Number", "Object", "require"]
rebuilt        : ["Function", "Number", "Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStatic.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "dec", "field3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "field3"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticAccessor.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_field", "dec", "field3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_field", "field3"]
Reference flags mismatch for "_field":
after transform: ReferenceId(15): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_field", "dec"]
rebuilt        : ScopeId(0): ["C", "_classPrivateFieldInitSpec", "_decorate", "_decorateMetadata", "_field"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "WeakMap", "require"]
rebuilt        : ["Object", "WeakMap", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-nonStaticPrivateAccessor.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "dec"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-static.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_field", "_field2", "dec", "field3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_defineProperty", "_field", "_field2", "field3"]
Reference flags mismatch for "_field":
after transform: ReferenceId(15): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(4): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticAccessor.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_D", "_decorate", "_decorateMetadata", "_field", "dec", "field3"]
rebuilt        : ScopeId(0): ["C", "D", "_D", "_decorate", "_decorateMetadata", "_field", "field3"]
Symbol span mismatch for "D":
after transform: SymbolId(3): Span { start: 199, end: 200 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(3): [ReferenceId(19), ReferenceId(21)]
rebuilt        : SymbolId(6): [ReferenceId(21), ReferenceId(24), ReferenceId(27)]
Symbol span mismatch for "D":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(7): Span { start: 199, end: 200 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(7): [ReferenceId(24)]
rebuilt        : SymbolId(7): []
Reference flags mismatch for "_field":
after transform: ReferenceId(16): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "D":
after transform: SymbolId(7) "D"
rebuilt        : SymbolId(6) "D"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata", "_field", "_field2", "dec"]
rebuilt        : ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata", "_field", "_field2"]
Symbol span mismatch for "D":
after transform: SymbolId(2): Span { start: 76, end: 77 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(12), ReferenceId(14)]
rebuilt        : SymbolId(6): [ReferenceId(9), ReferenceId(18), ReferenceId(21)]
Symbol span mismatch for "D":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(7): Span { start: 76, end: 77 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(9): [ReferenceId(17)]
rebuilt        : SymbolId(7): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "D":
after transform: SymbolId(9) "D"
rebuilt        : SymbolId(6) "D"
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/fields/esDecorators-classDeclaration-fields-staticPrivateAccessor.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata", "dec"]
rebuilt        : ScopeId(0): ["C", "D", "_D", "_assertClassBrand", "_decorate", "_decorateMetadata"]
Symbol span mismatch for "D":
after transform: SymbolId(2): Span { start: 85, end: 86 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(12), ReferenceId(14)]
rebuilt        : SymbolId(5): [ReferenceId(9), ReferenceId(18), ReferenceId(21)]
Symbol span mismatch for "D":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 85, end: 86 }
Symbol reference IDs mismatch for "D":
after transform: SymbolId(7): [ReferenceId(17)]
rebuilt        : SymbolId(6): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "D":
after transform: SymbolId(7) "D"
rebuilt        : SymbolId(5) "D"
Reference symbol mismatch for "":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["", "Object", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-nonStatic.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "dec", "method3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "method3"]
Reference flags mismatch for "_method":
after transform: ReferenceId(21): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-nonStaticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_C_brand", "_classPrivateMethodInitSpec", "_decorate", "_decorateMetadata", "_method", "dec"]
rebuilt        : ScopeId(0): ["C", "_C_brand", "_classPrivateMethodInitSpec", "_decorate", "_decorateMetadata", "_method"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "WeakSet", "require"]
rebuilt        : ["Function", "WeakSet", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-static.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "dec", "method3"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata", "_method", "method3"]
Reference flags mismatch for "_method":
after transform: ReferenceId(21): ReferenceFlags(Read | Write)
rebuilt        : ReferenceId(2): ReferenceFlags(Write)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classDeclaration/methods/esDecorators-classDeclaration-methods-staticPrivate.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "_decorate", "_decorateMetadata", "_method", "_method2", "dec"]
rebuilt        : ScopeId(0): ["C", "D", "_decorate", "_decorateMetadata", "_method", "_method2"]
Symbol span mismatch for "D":
after transform: SymbolId(2): Span { start: 77, end: 78 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(7): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 77, end: 78 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "_C", "_superPropGet", "dec", "method"]
rebuilt        : ScopeId(0): ["Base", "_C", "_superPropGet", "method"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_C", "_C2", "_C3", "_superPropGet", "dec"]
rebuilt        : ScopeId(0): ["_C", "_C2", "_C3", "_superPropGet"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "_C", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "dec", "x"]
rebuilt        : ScopeId(0): ["Base", "_C", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "x"]
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(22): SymbolFlags(Class)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.4.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "_C", "_defineProperty", "_superPropGet", "dec", "method"]
rebuilt        : ScopeId(0): ["Base", "_C", "_defineProperty", "_superPropGet", "method"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.5.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "_C", "_C2", "_C3", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "dec", "x"]
rebuilt        : ScopeId(0): ["Base", "_C", "_C2", "_C3", "_defineProperty", "_super$x", "_super$x10", "_super$x11", "_super$x12", "_super$x13", "_super$x14", "_super$x15", "_super$x16", "_super$x17", "_super$x18", "_super$x2", "_super$x3", "_super$x4", "_super$x5", "_super$x6", "_super$x7", "_super$x8", "_super$x9", "_superPropGet", "_superPropSet", "x"]
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(24): SymbolFlags(Class)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/classSuper/esDecorators-classExpression-classSuper.6.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["Base", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/esDecorators-classExpression-commentPreservation.ts
Bindings mismatch:
after transform: ScopeId(0): ["_C", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y", "dec"]
rebuilt        : ScopeId(0): ["_C", "_decorateMetadata", "_defineProperty", "_get_x", "_method", "_set_x", "_y"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(10): [ReferenceId(24), ReferenceId(25), ReferenceId(26), ReferenceId(28), ReferenceId(29), ReferenceId(30), ReferenceId(32), ReferenceId(34), ReferenceId(35), ReferenceId(37), ReferenceId(39), ReferenceId(41), ReferenceId(42), ReferenceId(43), ReferenceId(45), ReferenceId(46), ReferenceId(47), ReferenceId(49), ReferenceId(51), ReferenceId(52), ReferenceId(54), ReferenceId(56)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "Number", "Object", "require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "_x", "_x2", "dec", "x"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty", "_x", "_x2", "x"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(3): [ReferenceId(18), ReferenceId(23), ReferenceId(28), ReferenceId(39)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.10.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "_defineProperty", "dec", "f"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(21): [ReferenceId(40), ReferenceId(45), ReferenceId(50), ReferenceId(55), ReferenceId(60), ReferenceId(69), ReferenceId(74), ReferenceId(78)]
rebuilt        : SymbolId(1): [ReferenceId(62)]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["Object", "dec", "f", "require"]
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(39), ReferenceId(44), ReferenceId(49), ReferenceId(54), ReferenceId(59), ReferenceId(68), ReferenceId(73), ReferenceId(77)]
rebuilt        : [ReferenceId(63)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.11.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(4): [ReferenceId(6), ReferenceId(9)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "f", "x"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty", "f", "x"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(4): [ReferenceId(19), ReferenceId(22), ReferenceId(25), ReferenceId(28), ReferenceId(31), ReferenceId(34)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "x1", "x2"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty", "x1", "x2"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(8): [ReferenceId(8), ReferenceId(11), ReferenceId(14)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.4.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "obj"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(9): [ReferenceId(14), ReferenceId(17), ReferenceId(20)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "obj", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.5.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "obj", "x"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(4): [ReferenceId(8)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "obj", "require", "x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.6.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "obj", "x"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(4): [ReferenceId(8)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "obj", "require", "x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.7.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorateMetadata", "_defineProperty", "dec", "obj", "x"]
rebuilt        : ScopeId(0): ["_decorateMetadata", "_defineProperty"]
Symbol reference IDs mismatch for "_decorateMetadata":
after transform: SymbolId(4): [ReferenceId(8)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(2) "x"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(1) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["dec", "obj", "require", "x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.8.ts
Bindings mismatch:
after transform: ScopeId(0): ["dec"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/classExpression/namedEvaluation/esDecorators-classExpression-namedEvaluation.9.ts
Bindings mismatch:
after transform: ScopeId(0): ["dec"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["module"]
rebuilt        : ["dec", "module"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-contextualTypes.2.ts
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(11)]
rebuilt        : ScopeId(5): [ScopeId(6), ScopeId(8)]
Unresolved references mismatch:
after transform: ["ClassMethodDecoratorContext", "Function", "console"]
rebuilt        : ["Function", "console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-contextualTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(12), ScopeId(14), ScopeId(22), ScopeId(28), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(29), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(15): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(3): Some(ScopeId(2))
rebuilt        : ScopeId(15): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(16): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(5): Some(ScopeId(2))
rebuilt        : ScopeId(16): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(17): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(7): Some(ScopeId(2))
rebuilt        : ScopeId(17): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(18): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(9): Some(ScopeId(2))
rebuilt        : ScopeId(18): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(11): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(19): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(11): Some(ScopeId(2))
rebuilt        : ScopeId(19): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(20): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(13): Some(ScopeId(2))
rebuilt        : ScopeId(20): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(15): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(21): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(15): Some(ScopeId(2))
rebuilt        : ScopeId(21): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(16): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(22): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(16): Some(ScopeId(2))
rebuilt        : ScopeId(22): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(23): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(17): Some(ScopeId(2))
rebuilt        : ScopeId(23): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(18): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(24): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(18): Some(ScopeId(2))
rebuilt        : ScopeId(24): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(19): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(25): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(19): Some(ScopeId(2))
rebuilt        : ScopeId(25): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(21): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(26): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(21): Some(ScopeId(2))
rebuilt        : ScopeId(26): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(23): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(27): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(23): Some(ScopeId(2))
rebuilt        : ScopeId(27): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(25): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(28): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(25): Some(ScopeId(2))
rebuilt        : ScopeId(28): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(27): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(29): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(27): Some(ScopeId(2))
rebuilt        : ScopeId(29): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(29): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(30): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(29): Some(ScopeId(2))
rebuilt        : ScopeId(30): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(31): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(31): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(31): Some(ScopeId(2))
rebuilt        : ScopeId(31): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(32): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(32): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(32): Some(ScopeId(2))
rebuilt        : ScopeId(32): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(33): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(33): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(33): Some(ScopeId(2))
rebuilt        : ScopeId(33): Some(ScopeId(0))
Scope flags mismatch:
after transform: ScopeId(34): ScopeFlags(StrictMode | Function | Arrow)
rebuilt        : ScopeId(34): ScopeFlags(Function | Arrow)
Scope parent mismatch:
after transform: ScopeId(34): Some(ScopeId(2))
rebuilt        : ScopeId(34): Some(ScopeId(0))
Symbol span mismatch for "C":
after transform: SymbolId(0): Span { start: 23, end: 24 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(61): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 23, end: 24 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-decoratorExpression.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_decorate", "_decorateMetadata", "g", "h", "x"]
rebuilt        : ScopeId(0): ["_decorate", "_decorateMetadata"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(26), ScopeId(28), ScopeId(30), ScopeId(33), ScopeId(36), ScopeId(39), ScopeId(42), ScopeId(45), ScopeId(48), ScopeId(51), ScopeId(54), ScopeId(57), ScopeId(60), ScopeId(63), ScopeId(66)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(21), ScopeId(23), ScopeId(25), ScopeId(27), ScopeId(30), ScopeId(33), ScopeId(36), ScopeId(39), ScopeId(42), ScopeId(45), ScopeId(48), ScopeId(51), ScopeId(54), ScopeId(57), ScopeId(60), ScopeId(63)]
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 121, end: 122 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(31): Span { start: 0, end: 0 }
rebuilt        : SymbolId(3): Span { start: 121, end: 122 }
Symbol span mismatch for "C":
after transform: SymbolId(6): Span { start: 143, end: 144 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(33): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 143, end: 144 }
Symbol span mismatch for "C":
after transform: SymbolId(7): Span { start: 165, end: 166 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(34): Span { start: 0, end: 0 }
rebuilt        : SymbolId(7): Span { start: 165, end: 166 }
Symbol span mismatch for "C":
after transform: SymbolId(8): Span { start: 194, end: 195 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(35): Span { start: 0, end: 0 }
rebuilt        : SymbolId(9): Span { start: 194, end: 195 }
Symbol span mismatch for "C":
after transform: SymbolId(9): Span { start: 223, end: 224 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(36): Span { start: 0, end: 0 }
rebuilt        : SymbolId(11): Span { start: 223, end: 224 }
Symbol span mismatch for "C":
after transform: SymbolId(10): Span { start: 254, end: 255 }
rebuilt        : SymbolId(12): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(37): Span { start: 0, end: 0 }
rebuilt        : SymbolId(13): Span { start: 254, end: 255 }
Symbol span mismatch for "C":
after transform: SymbolId(11): Span { start: 279, end: 280 }
rebuilt        : SymbolId(14): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(38): Span { start: 0, end: 0 }
rebuilt        : SymbolId(15): Span { start: 279, end: 280 }
Symbol span mismatch for "C":
after transform: SymbolId(12): Span { start: 306, end: 307 }
rebuilt        : SymbolId(16): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(39): Span { start: 0, end: 0 }
rebuilt        : SymbolId(17): Span { start: 306, end: 307 }
Symbol span mismatch for "C":
after transform: SymbolId(13): Span { start: 329, end: 330 }
rebuilt        : SymbolId(18): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(40): Span { start: 0, end: 0 }
rebuilt        : SymbolId(19): Span { start: 329, end: 330 }
Symbol span mismatch for "C":
after transform: SymbolId(14): Span { start: 354, end: 355 }
rebuilt        : SymbolId(20): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(41): Span { start: 0, end: 0 }
rebuilt        : SymbolId(21): Span { start: 354, end: 355 }
Symbol span mismatch for "C":
after transform: SymbolId(15): Span { start: 379, end: 380 }
rebuilt        : SymbolId(22): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(42): Span { start: 0, end: 0 }
rebuilt        : SymbolId(23): Span { start: 379, end: 380 }
Symbol span mismatch for "C":
after transform: SymbolId(16): Span { start: 405, end: 406 }
rebuilt        : SymbolId(24): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(43): Span { start: 0, end: 0 }
rebuilt        : SymbolId(25): Span { start: 405, end: 406 }
Symbol span mismatch for "C":
after transform: SymbolId(17): Span { start: 433, end: 434 }
rebuilt        : SymbolId(26): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(44): Span { start: 0, end: 0 }
rebuilt        : SymbolId(27): Span { start: 433, end: 434 }
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(1) "g"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(1) "g"
rebuilt        : <None>
Reference symbol mismatch for "h":
after transform: SymbolId(3) "h"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(1) "g"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(1) "g"
rebuilt        : <None>
Reference symbol mismatch for "h":
after transform: SymbolId(3) "h"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "g", "h", "require", "x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/esDecorators-preservesThis.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "DecoratorProvider", "_decorate", "_decorateMetadata", "instance"]
rebuilt        : ScopeId(0): ["C", "D", "DecoratorProvider", "_decorate", "_decorateMetadata"]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "DecoratorProvider":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol reference IDs mismatch for "DecoratorProvider":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(4), ReferenceId(8)]
rebuilt        : SymbolId(2): [ReferenceId(23)]
Reference symbol mismatch for "instance":
after transform: SymbolId(4) "instance"
rebuilt        : <None>
Reference symbol mismatch for "instance":
after transform: SymbolId(4) "instance"
rebuilt        : <None>
Reference symbol mismatch for "instance":
after transform: SymbolId(4) "instance"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["DecoratorContext", "Function", "require"]
rebuilt        : ["Function", "instance", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata1.ts
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 144, end: 145 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(8): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 144, end: 145 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata2.ts
Symbol span mismatch for "C":
after transform: SymbolId(5): Span { start: 144, end: 145 }
rebuilt        : SymbolId(7): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(8): Span { start: 144, end: 145 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata3.ts
Symbol span mismatch for "C":
after transform: SymbolId(6): Span { start: 225, end: 226 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(9): Span { start: 0, end: 0 }
rebuilt        : SymbolId(9): Span { start: 225, end: 226 }
Symbol span mismatch for "D":
after transform: SymbolId(7): Span { start: 260, end: 261 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(11): Span { start: 0, end: 0 }
rebuilt        : SymbolId(11): Span { start: 260, end: 261 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata4.ts
Symbol span mismatch for "C":
after transform: SymbolId(7): Span { start: 366, end: 367 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(10): Span { start: 0, end: 0 }
rebuilt        : SymbolId(10): Span { start: 366, end: 367 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/esDecorators/metadata/esDecoratorsMetadata5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_decorate", "_decorateMetadata", "metadata"]
rebuilt        : ScopeId(0): ["C", "_decorate", "_decorateMetadata"]
Reference symbol mismatch for "metadata":
after transform: SymbolId(0) "metadata"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Function", "require"]
rebuilt        : ["Function", "metadata", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiteralInference.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(10), SymbolId(16), SymbolId(17), SymbolId(20), SymbolId(21)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(5), SymbolId(7), SymbolId(8)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(1): ["AdvancedList", "AppType", "Composite", "HeaderDetail", "HeaderMultiDetail", "ListOnly", "ModuleSettings", "Relationship", "Report", "Standard"]
rebuilt        : ScopeId(1): ["AppType"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(2): ["AppStyle", "MiniApp", "PivotTable", "Standard", "Tree", "TreeEntity"]
rebuilt        : ScopeId(2): ["AppStyle"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "AppType":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "AppType":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(5), ReferenceId(8), ReferenceId(12)]
rebuilt        : SymbolId(0): [ReferenceId(22), ReferenceId(25), ReferenceId(29)]
Symbol flags mismatch for "AppStyle":
after transform: SymbolId(10): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "AppStyle":
after transform: SymbolId(10): [ReferenceId(3), ReferenceId(6), ReferenceId(7), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(13), ReferenceId(14)]
rebuilt        : SymbolId(2): [ReferenceId(23), ReferenceId(24), ReferenceId(26), ReferenceId(27), ReferenceId(28), ReferenceId(30), ReferenceId(31)]
Reference symbol mismatch for "foo":
after transform: SymbolId(17) "foo"
rebuilt        : SymbolId(5) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(17) "foo"
rebuilt        : SymbolId(5) "foo"
Unresolved references mismatch:
after transform: ["Array", "Map"]
rebuilt        : ["Map"]
Unresolved reference IDs mismatch for "Map":
after transform: [ReferenceId(0), ReferenceId(4)]
rebuilt        : [ReferenceId(21)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiterals2ES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Array", "Number", "String", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/arrayLiterals/arrayLiterals2ES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Array", "Number", "String", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/asOperator/asOpEmitParens.ts
Bindings mismatch:
after transform: ScopeId(0): ["x"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/asOperator/asOperator3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "tag":
after transform: SymbolId(0) "tag"
rebuilt        : SymbolId(0) "tag"
Reference symbol mismatch for "tag":
after transform: SymbolId(0) "tag"
rebuilt        : SymbolId(0) "tag"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/asOperator/asOperatorASI.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "as":
after transform: SymbolId(1) "as"
rebuilt        : SymbolId(1) "as"
Reference symbol mismatch for "as":
after transform: SymbolId(1) "as"
rebuilt        : SymbolId(1) "as"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/assignmentOperator/assignmentGenericLookupTypeNarrowing.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : SymbolId(1) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/assignmentOperator/assignmentTypeNarrowing.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithAnyAndEveryType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithConstrainedTypeParameter.ts
Unresolved references mismatch:
after transform: ["Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithNumberAndEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["F", "c", "d"]
rebuilt        : ScopeId(2): ["F"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(34)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(24), ReferenceId(25), ReferenceId(26)]
Symbol flags mismatch for "F":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "F":
after transform: SymbolId(3): [ReferenceId(2), ReferenceId(18), ReferenceId(40)]
rebuilt        : SymbolId(2): [ReferenceId(11), ReferenceId(27)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/additionOperator/additionOperatorWithStringAndEveryType.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b", "c"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(31), ReferenceId(33), ReferenceId(45)]
rebuilt        : SymbolId(0): [ReferenceId(7), ReferenceId(37), ReferenceId(39)]
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(38), ReferenceId(39), ReferenceId(41), ReferenceId(43), ReferenceId(44), ReferenceId(55), ReferenceId(57), ReferenceId(59), ReferenceId(60), ReferenceId(61), ReferenceId(63), ReferenceId(65), ReferenceId(66), ReferenceId(77), ReferenceId(79), ReferenceId(81), ReferenceId(82), ReferenceId(83), ReferenceId(85), ReferenceId(87), ReferenceId(88), ReferenceId(99), ReferenceId(101), ReferenceId(103), ReferenceId(104), ReferenceId(105), ReferenceId(107), ReferenceId(109), ReferenceId(110), ReferenceId(121), ReferenceId(123), ReferenceId(125), ReferenceId(126), ReferenceId(127), ReferenceId(129), ReferenceId(131), ReferenceId(132), ReferenceId(143), ReferenceId(145), ReferenceId(147), ReferenceId(148), ReferenceId(149), ReferenceId(151), ReferenceId(153), ReferenceId(154), ReferenceId(165), ReferenceId(167), ReferenceId(169), ReferenceId(170), ReferenceId(171), ReferenceId(173), ReferenceId(175), ReferenceId(176), ReferenceId(187), ReferenceId(189), ReferenceId(191), ReferenceId(192), ReferenceId(193), ReferenceId(195), ReferenceId(197), ReferenceId(198), ReferenceId(209), ReferenceId(211), ReferenceId(213), ReferenceId(214), ReferenceId(215), ReferenceId(217), ReferenceId(219), ReferenceId(220), ReferenceId(226)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(21), ReferenceId(22), ReferenceId(24), ReferenceId(26), ReferenceId(27), ReferenceId(38), ReferenceId(40), ReferenceId(42), ReferenceId(43), ReferenceId(44), ReferenceId(46), ReferenceId(48), ReferenceId(49), ReferenceId(60), ReferenceId(62), ReferenceId(64), ReferenceId(65), ReferenceId(66), ReferenceId(68), ReferenceId(70), ReferenceId(71), ReferenceId(82), ReferenceId(84), ReferenceId(86), ReferenceId(87), ReferenceId(88), ReferenceId(90), ReferenceId(92), ReferenceId(93), ReferenceId(104), ReferenceId(106), ReferenceId(108), ReferenceId(109), ReferenceId(110), ReferenceId(112), ReferenceId(114), ReferenceId(115), ReferenceId(126), ReferenceId(128), ReferenceId(130), ReferenceId(131), ReferenceId(132), ReferenceId(134), ReferenceId(136), ReferenceId(137), ReferenceId(148), ReferenceId(150), ReferenceId(152), ReferenceId(153), ReferenceId(154), ReferenceId(156), ReferenceId(158), ReferenceId(159), ReferenceId(170), ReferenceId(172), ReferenceId(174), ReferenceId(175), ReferenceId(176), ReferenceId(178), ReferenceId(180), ReferenceId(181), ReferenceId(192), ReferenceId(194), ReferenceId(196), ReferenceId(197), ReferenceId(198), ReferenceId(200), ReferenceId(202), ReferenceId(203), ReferenceId(214), ReferenceId(216), ReferenceId(218), ReferenceId(219), ReferenceId(220), ReferenceId(222), ReferenceId(224), ReferenceId(225)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/arithmeticOperator/arithmeticOperatorWithEnumUnion.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["F", "c", "d"]
rebuilt        : ScopeId(2): ["F"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(23), ReferenceId(34), ReferenceId(36), ReferenceId(38), ReferenceId(39), ReferenceId(40), ReferenceId(42), ReferenceId(44), ReferenceId(45), ReferenceId(56), ReferenceId(58), ReferenceId(60), ReferenceId(61), ReferenceId(62), ReferenceId(64), ReferenceId(66), ReferenceId(67), ReferenceId(78), ReferenceId(80), ReferenceId(82), ReferenceId(83), ReferenceId(84), ReferenceId(86), ReferenceId(88), ReferenceId(89), ReferenceId(100), ReferenceId(102), ReferenceId(104), ReferenceId(105), ReferenceId(106), ReferenceId(108), ReferenceId(110), ReferenceId(111), ReferenceId(122), ReferenceId(124), ReferenceId(126), ReferenceId(127), ReferenceId(128), ReferenceId(130), ReferenceId(132), ReferenceId(133), ReferenceId(144), ReferenceId(146), ReferenceId(148), ReferenceId(149), ReferenceId(150), ReferenceId(152), ReferenceId(154), ReferenceId(155), ReferenceId(166), ReferenceId(168), ReferenceId(170), ReferenceId(171), ReferenceId(172), ReferenceId(174), ReferenceId(176), ReferenceId(177), ReferenceId(188), ReferenceId(190), ReferenceId(192), ReferenceId(193), ReferenceId(194), ReferenceId(196), ReferenceId(198), ReferenceId(199), ReferenceId(210), ReferenceId(212), ReferenceId(214), ReferenceId(215), ReferenceId(216), ReferenceId(218), ReferenceId(220), ReferenceId(221), ReferenceId(227)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(22), ReferenceId(24), ReferenceId(26), ReferenceId(27), ReferenceId(28), ReferenceId(30), ReferenceId(32), ReferenceId(33), ReferenceId(44), ReferenceId(46), ReferenceId(48), ReferenceId(49), ReferenceId(50), ReferenceId(52), ReferenceId(54), ReferenceId(55), ReferenceId(66), ReferenceId(68), ReferenceId(70), ReferenceId(71), ReferenceId(72), ReferenceId(74), ReferenceId(76), ReferenceId(77), ReferenceId(88), ReferenceId(90), ReferenceId(92), ReferenceId(93), ReferenceId(94), ReferenceId(96), ReferenceId(98), ReferenceId(99), ReferenceId(110), ReferenceId(112), ReferenceId(114), ReferenceId(115), ReferenceId(116), ReferenceId(118), ReferenceId(120), ReferenceId(121), ReferenceId(132), ReferenceId(134), ReferenceId(136), ReferenceId(137), ReferenceId(138), ReferenceId(140), ReferenceId(142), ReferenceId(143), ReferenceId(154), ReferenceId(156), ReferenceId(158), ReferenceId(159), ReferenceId(160), ReferenceId(162), ReferenceId(164), ReferenceId(165), ReferenceId(176), ReferenceId(178), ReferenceId(180), ReferenceId(181), ReferenceId(182), ReferenceId(184), ReferenceId(186), ReferenceId(187), ReferenceId(198), ReferenceId(200), ReferenceId(202), ReferenceId(203), ReferenceId(204), ReferenceId(206), ReferenceId(208), ReferenceId(209), ReferenceId(220), ReferenceId(222), ReferenceId(224), ReferenceId(225), ReferenceId(226), ReferenceId(228), ReferenceId(230), ReferenceId(231)]
Symbol flags mismatch for "F":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "F":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(233)]
rebuilt        : SymbolId(2): [ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithIdenticalObjects.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(10), ScopeId(11)]
Symbol reference IDs mismatch for "A1":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(6)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B1":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(12)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(4): [ReferenceId(2), ReferenceId(3), ReferenceId(18), ReferenceId(19)]
rebuilt        : SymbolId(5): [ReferenceId(12), ReferenceId(13)]
Symbol reference IDs mismatch for "A2":
after transform: SymbolId(6): [ReferenceId(7)]
rebuilt        : SymbolId(7): []
Symbol reference IDs mismatch for "B2":
after transform: SymbolId(7): [ReferenceId(13)]
rebuilt        : SymbolId(8): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnInstantiatedCallSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(16), ReferenceId(18)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(17)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNoRelationshipObjectsOnInstantiatedConstructorSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(16), ReferenceId(18)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(17)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithNumericLiteral.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithOneOperandIsAny.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b", "c"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(1): [ReferenceId(33), ReferenceId(265)]
rebuilt        : SymbolId(1): [ReferenceId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithOneOperandIsUndefined.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b", "c"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(1): [ReferenceId(34), ReferenceId(266)]
rebuilt        : SymbolId(1): [ReferenceId(7)]
Unresolved references mismatch:
after transform: ["undefined"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeEnumAndNumber.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b", "c"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(15), ReferenceId(18), ReferenceId(19), ReferenceId(20), ReferenceId(25), ReferenceId(28), ReferenceId(29), ReferenceId(30), ReferenceId(35), ReferenceId(38), ReferenceId(39), ReferenceId(40), ReferenceId(45), ReferenceId(48), ReferenceId(49), ReferenceId(50), ReferenceId(55), ReferenceId(58), ReferenceId(59), ReferenceId(60), ReferenceId(65), ReferenceId(68), ReferenceId(69), ReferenceId(70), ReferenceId(75), ReferenceId(78), ReferenceId(79), ReferenceId(80), ReferenceId(88)]
rebuilt        : SymbolId(0): [ReferenceId(7), ReferenceId(12), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(22), ReferenceId(25), ReferenceId(26), ReferenceId(27), ReferenceId(32), ReferenceId(35), ReferenceId(36), ReferenceId(37), ReferenceId(42), ReferenceId(45), ReferenceId(46), ReferenceId(47), ReferenceId(52), ReferenceId(55), ReferenceId(56), ReferenceId(57), ReferenceId(62), ReferenceId(65), ReferenceId(66), ReferenceId(67), ReferenceId(72), ReferenceId(75), ReferenceId(76), ReferenceId(77), ReferenceId(82), ReferenceId(85), ReferenceId(86), ReferenceId(87)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnCallSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(4), ReferenceId(5), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(12), ReferenceId(14)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(3), ReferenceId(6), ReferenceId(11), ReferenceId(13), ReferenceId(15)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnConstructorSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(18), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(24), ReferenceId(25), ReferenceId(26), ReferenceId(28)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(11), ReferenceId(13), ReferenceId(17), ReferenceId(20), ReferenceId(23), ReferenceId(27)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnIndexSignature.ts
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(3)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(4)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnInstantiatedCallSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(15), ReferenceId(17)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(16)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnInstantiatedConstructorSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(15), ReferenceId(17)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(16)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnOptionalProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/comparisonOperator/comparisonOperatorWithSubtypeObjectOnProperty.ts
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(4)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "A1":
after transform: SymbolId(2): [ReferenceId(6)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "B1":
after transform: SymbolId(3): [ReferenceId(8)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "A2":
after transform: SymbolId(4): [ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(6): [ReferenceId(10)]
Symbol reference IDs mismatch for "B2":
after transform: SymbolId(5): [ReferenceId(9)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithInvalidStaticToString.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5)]
rebuilt        : ScopeId(3): []
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8)]
rebuilt        : ScopeId(5): []
Symbol flags mismatch for "StaticToString":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol reference IDs mismatch for "StaticToString":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(0): [ReferenceId(1)]
Symbol flags mismatch for "StaticToNumber":
after transform: SymbolId(3): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol reference IDs mismatch for "StaticToNumber":
after transform: SymbolId(3): [ReferenceId(3), ReferenceId(5)]
rebuilt        : SymbolId(3): [ReferenceId(3)]
Symbol flags mismatch for "NormalToString":
after transform: SymbolId(6): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(6): SymbolFlags(Class)
Symbol reference IDs mismatch for "NormalToString":
after transform: SymbolId(6): [ReferenceId(6), ReferenceId(8)]
rebuilt        : SymbolId(6): [ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithLHSIsObject.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["Function", "Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithRHSHasSymbolHasInstance.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "Rhs10", "Rhs11", "Rhs12", "Rhs13", "Rhs7", "Rhs8", "Rhs9", "_classPrivateFieldInitSpec", "_x", "_y", "lhs0", "lhs1", "lhs2", "lhs3", "lhs4", "obj", "rhs0", "rhs1", "rhs14", "rhs15", "rhs2", "rhs3", "rhs4", "rhs5", "rhs6"]
rebuilt        : ScopeId(0): ["A", "B", "Rhs10", "Rhs11", "Rhs12", "Rhs13", "Rhs7", "Rhs8", "Rhs9", "_classPrivateFieldInitSpec", "_x", "_y"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(26), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(38), ScopeId(39), ScopeId(41), ScopeId(43)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(13)]
Scope children mismatch:
after transform: ScopeId(12): [ScopeId(13)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(14): [ScopeId(15)]
rebuilt        : ScopeId(2): []
Scope children mismatch:
after transform: ScopeId(16): [ScopeId(17)]
rebuilt        : ScopeId(3): []
Scope children mismatch:
after transform: ScopeId(18): [ScopeId(19)]
rebuilt        : ScopeId(4): []
Scope children mismatch:
after transform: ScopeId(20): [ScopeId(21)]
rebuilt        : ScopeId(5): []
Scope children mismatch:
after transform: ScopeId(22): [ScopeId(23)]
rebuilt        : ScopeId(6): []
Scope children mismatch:
after transform: ScopeId(24): [ScopeId(25)]
rebuilt        : ScopeId(7): []
Scope children mismatch:
after transform: ScopeId(26): [ScopeId(27), ScopeId(44)]
rebuilt        : ScopeId(8): [ScopeId(9)]
Symbol flags mismatch for "Rhs7":
after transform: SymbolId(11): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol flags mismatch for "Rhs8":
after transform: SymbolId(13): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol flags mismatch for "Rhs9":
after transform: SymbolId(15): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol flags mismatch for "Rhs10":
after transform: SymbolId(17): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol flags mismatch for "Rhs11":
after transform: SymbolId(19): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)
Symbol flags mismatch for "Rhs12":
after transform: SymbolId(21): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(6): SymbolFlags(Class)
Symbol flags mismatch for "Rhs13":
after transform: SymbolId(23): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(7): SymbolFlags(Class)
Symbol flags mismatch for "A":
after transform: SymbolId(30): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(9): SymbolFlags(Class)
Symbol flags mismatch for "B":
after transform: SymbolId(35): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(11): SymbolFlags(Class)
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs0":
after transform: SymbolId(4) "rhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs1":
after transform: SymbolId(5) "rhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs2":
after transform: SymbolId(6) "rhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs3":
after transform: SymbolId(7) "rhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs4":
after transform: SymbolId(8) "rhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs5":
after transform: SymbolId(9) "rhs5"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs6":
after transform: SymbolId(10) "rhs6"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "rhs0":
after transform: SymbolId(4) "rhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "rhs1":
after transform: SymbolId(5) "rhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "rhs2":
after transform: SymbolId(6) "rhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs1":
after transform: SymbolId(26) "lhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs0":
after transform: SymbolId(4) "rhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs1":
after transform: SymbolId(5) "rhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs2":
after transform: SymbolId(6) "rhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs3":
after transform: SymbolId(7) "rhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs4":
after transform: SymbolId(8) "rhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "rhs5":
after transform: SymbolId(9) "rhs5"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs2":
after transform: SymbolId(27) "lhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs0":
after transform: SymbolId(4) "rhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs1":
after transform: SymbolId(5) "rhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs2":
after transform: SymbolId(6) "rhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs3":
after transform: SymbolId(7) "rhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs4":
after transform: SymbolId(8) "rhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs5":
after transform: SymbolId(9) "rhs5"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "rhs6":
after transform: SymbolId(10) "rhs6"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs3":
after transform: SymbolId(28) "lhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs0":
after transform: SymbolId(4) "rhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs1":
after transform: SymbolId(5) "rhs1"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs2":
after transform: SymbolId(6) "rhs2"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs3":
after transform: SymbolId(7) "rhs3"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs4":
after transform: SymbolId(8) "rhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "rhs5":
after transform: SymbolId(9) "rhs5"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "lhs4":
after transform: SymbolId(29) "lhs4"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(36) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(36) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(36) "obj"
rebuilt        : <None>
Reference symbol mismatch for "obj":
after transform: SymbolId(36) "obj"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs14":
after transform: SymbolId(39) "rhs14"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Reference symbol mismatch for "rhs15":
after transform: SymbolId(43) "rhs15"
rebuilt        : <None>
Reference symbol mismatch for "lhs0":
after transform: SymbolId(25) "lhs0"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Symbol", "WeakMap", "globalThis", "require"]
rebuilt        : ["WeakMap", "lhs0", "lhs1", "lhs2", "lhs3", "lhs4", "obj", "require", "rhs0", "rhs1", "rhs14", "rhs15", "rhs2", "rhs3", "rhs4", "rhs5", "rhs6"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/instanceofOperator/instanceofOperatorWithRHSIsSubtypeOfFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Function", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/binaryOperators/logicalOrOperator/logicalOrExpressionIsNotContextuallyTyped.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorWithSecondOperandAnyType.ts
Unresolved references mismatch:
after transform: ["Object", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorWithSecondOperandBooleanType.ts
Unresolved references mismatch:
after transform: ["Object", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorWithSecondOperandNumberType.ts
Unresolved references mismatch:
after transform: ["Object", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorWithSecondOperandObjectType.ts
Unresolved references mismatch:
after transform: ["Date", "Object", "require"]
rebuilt        : ["Date", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorWithSecondOperandStringType.ts
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(0), ReferenceId(29), ReferenceId(38)]
rebuilt        : [ReferenceId(28), ReferenceId(37)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/commaOperator/commaOperatorsMultipleOperators.ts
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(0), ReferenceId(33), ReferenceId(36)]
rebuilt        : [ReferenceId(32), ReferenceId(35)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/conditonalOperator/conditionalOperatorConditionIsBooleanType.ts
Unresolved references mismatch:
after transform: ["Object", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/conditonalOperator/conditionalOperatorWithIdenticalBCT.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
Symbol reference IDs mismatch for "X":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(9), ReferenceId(19), ReferenceId(25), ReferenceId(28)]
rebuilt        : SymbolId(1): [ReferenceId(4), ReferenceId(7)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(12), ReferenceId(22)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(4)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/functionExpressionContextualTyping1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
Bindings mismatch:
after transform: ScopeId(1): ["E", "blue", "red"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(28): [ScopeId(29), ScopeId(30), ScopeId(31)]
rebuilt        : ScopeId(16): [ScopeId(17)]
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(10), ReferenceId(29)]
rebuilt        : SymbolId(0): [ReferenceId(5)]
Symbol reference IDs mismatch for "a0":
after transform: SymbolId(3): [ReferenceId(5)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "Class":
after transform: SymbolId(8): [ReferenceId(1)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Number"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/functionExpressionContextualTyping3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/iterableContextualTyping1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/parenthesizedContexualTyping3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7)]
rebuilt        : ScopeId(3): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/superCallParameterContextualTyping1.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/superCallParameterContextualTyping3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/taggedTemplateContextualTyping1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12)]
rebuilt        : ScopeId(8): []
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14)]
rebuilt        : ScopeId(9): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/contextualTyping/taggedTemplateContextualTyping2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Unresolved references mismatch:
after transform: ["TemplateStringsArray", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/elementAccess/stringEnumInElementAccess01.ts
Bindings mismatch:
after transform: ScopeId(0): ["E", "e", "item", "snb"]
rebuilt        : ScopeId(0): ["E", "snb"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(8)]
rebuilt        : SymbolId(0): [ReferenceId(4)]
Reference symbol mismatch for "item":
after transform: SymbolId(5) "item"
rebuilt        : <None>
Reference symbol mismatch for "e":
after transform: SymbolId(6) "e"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["e", "item"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/callWithSpread.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Unresolved references mismatch:
after transform: ["Function"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/callWithSpreadES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5)]
Unresolved references mismatch:
after transform: ["Function"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpread.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(10): [ReferenceId(0), ReferenceId(1), ReferenceId(45), ReferenceId(46), ReferenceId(48)]
rebuilt        : SymbolId(6): [ReferenceId(36), ReferenceId(37), ReferenceId(39)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpreadES5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(10): [ReferenceId(0), ReferenceId(1), ReferenceId(45), ReferenceId(46), ReferenceId(48)]
rebuilt        : SymbolId(6): [ReferenceId(36), ReferenceId(37), ReferenceId(39)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/newWithSpreadES6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(10): [ReferenceId(0), ReferenceId(1), ReferenceId(45), ReferenceId(46), ReferenceId(48)]
rebuilt        : SymbolId(6): [ReferenceId(36), ReferenceId(37), ReferenceId(39)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functionCalls/typeArgumentInferenceTransitiveConstraints.ts
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(0), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(13)]
rebuilt        : [ReferenceId(4), ReferenceId(5), ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functions/arrowFunctionExpressions.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(24), ScopeId(28), ScopeId(31), ScopeId(33), ScopeId(36), ScopeId(39), ScopeId(43)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(24), ScopeId(28), ScopeId(31), ScopeId(33), ScopeId(36), ScopeId(39), ScopeId(43)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functions/contextuallyTypedFunctionExpressionsAndReturnAnnotations.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5)]
rebuilt        : ScopeId(2): []
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functions/typeOfThisInFunctionExpression.ts
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(11): SymbolFlags(ValueModule)
rebuilt        : SymbolId(12): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(11): Span { start: 383, end: 384 }
rebuilt        : SymbolId(12): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/functions/voidParamAssignmentCompatibility.ts
Bindings mismatch:
after transform: ScopeId(0): ["g", "gg", "o"]
rebuilt        : ScopeId(0): ["g", "gg"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "g":
after transform: SymbolId(0) "g"
rebuilt        : SymbolId(0) "g"
Reference symbol mismatch for "o":
after transform: SymbolId(5) "o"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/newOperator/newOperatorConformance.ts
Bindings mismatch:
after transform: ScopeId(0): ["C0", "C1", "T", "a", "anyCtor", "anyCtor1", "c1", "d", "fnVoid", "n", "nested", "newFn1", "newFn2", "t"]
rebuilt        : ScopeId(0): ["C0", "C1", "T", "a", "anyCtor", "anyCtor1", "c1", "d", "fnVoid", "n", "nested", "nestedCtor", "newFn1", "newFn2", "t"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(10): [ScopeId(11)]
rebuilt        : ScopeId(6): []
Scope children mismatch:
after transform: ScopeId(12): [ScopeId(13)]
rebuilt        : ScopeId(7): []
Symbol reference IDs mismatch for "C0":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "T":
after transform: SymbolId(4): [ReferenceId(5), ReferenceId(6)]
rebuilt        : SymbolId(4): [ReferenceId(1)]
Symbol flags mismatch for "nestedCtor":
after transform: SymbolId(10): SymbolFlags(FunctionScopedVariable | Interface)
rebuilt        : SymbolId(8): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "nestedCtor":
after transform: SymbolId(10): Span { start: 197, end: 207 }
rebuilt        : SymbolId(8): Span { start: 240, end: 262 }
Symbol reference IDs mismatch for "nestedCtor":
after transform: SymbolId(10): [ReferenceId(1), ReferenceId(2), ReferenceId(15)]
rebuilt        : SymbolId(8): [ReferenceId(8)]
Symbol redeclarations mismatch for "nestedCtor":
after transform: SymbolId(10): [Span { start: 197, end: 207 }, Span { start: 240, end: 262 }]
rebuilt        : SymbolId(8): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator10.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(1) "f"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator2.ts
Bindings mismatch:
after transform: ScopeId(0): ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
rebuilt        : ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator3.ts
Bindings mismatch:
after transform: ScopeId(0): ["_ref", "_ref2", "_ref3", "_ref4", "_ref5", "a1", "a2", "a3", "a4", "a5", "a6", "aa1"]
rebuilt        : ScopeId(0): ["_ref", "_ref2", "_ref3", "_ref4", "_ref5", "aa1"]
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a1", "a2", "a3", "a4", "a5", "a6"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator7.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "c", "f", "foo1", "foo2", "foo3"]
rebuilt        : ScopeId(0): ["f", "foo1", "foo2", "foo3"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(2) "c"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b", "c"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator8.ts
Bindings mismatch:
after transform: ScopeId(0): ["_a$m", "_a$m2", "_a$p", "_ref", "_ref2", "a", "b", "n1", "n2", "n3"]
rebuilt        : ScopeId(0): ["_a$m", "_a$m2", "_a$p", "_ref", "_ref2", "n1", "n2", "n3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator9.ts
Bindings mismatch:
after transform: ScopeId(0): ["f", "g", "gg"]
rebuilt        : ScopeId(0): ["g", "gg"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["f"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperatorInParameterBindingPattern.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): ["_a", "a"]
Bindings mismatch:
after transform: ScopeId(2): ["_a", "c"]
rebuilt        : ScopeId(2): ["c"]
Symbol scope ID mismatch for "_a":
after transform: SymbolId(2): ScopeId(2)
rebuilt        : SymbolId(0): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator_es2020.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9", "b", "c", "x1", "x2", "x3", "x4", "x5", "x6", "y1", "y2", "y3", "y4", "y5", "y6"]
rebuilt        : ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9", "x1", "x2", "x3", "x4", "x5", "x6", "y1", "y2", "y3", "y4", "y5", "y6"]
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(20) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(18) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(19) "b"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "b", "c"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/nullishCoalescingOperator/nullishCoalescingOperator_not_strict.ts
Bindings mismatch:
after transform: ScopeId(0): ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9", "aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
rebuilt        : ScopeId(0): ["aa1", "aa2", "aa3", "aa4", "aa5", "aa6", "aa7", "aa8", "aa9"]
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a1":
after transform: SymbolId(0) "a1"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a2":
after transform: SymbolId(1) "a2"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a3":
after transform: SymbolId(2) "a3"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a4":
after transform: SymbolId(3) "a4"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a5":
after transform: SymbolId(4) "a5"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a6":
after transform: SymbolId(5) "a6"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a7":
after transform: SymbolId(6) "a7"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a8":
after transform: SymbolId(7) "a8"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Reference symbol mismatch for "a9":
after transform: SymbolId(8) "a9"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a1", "a2", "a3", "a4", "a5", "a6", "a7", "a8", "a9"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/objectLiterals/objectLiteralGettersAndSetters.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(33), ScopeId(35), ScopeId(37), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(31), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39)]
Scope children mismatch:
after transform: ScopeId(31): [ScopeId(32)]
rebuilt        : ScopeId(28): []
Scope children mismatch:
after transform: ScopeId(37): [ScopeId(38)]
rebuilt        : ScopeId(33): []
Symbol reference IDs mismatch for "anyVar":
after transform: SymbolId(33): [ReferenceId(11)]
rebuilt        : SymbolId(30): []
Unresolved references mismatch:
after transform: ["Array", "Date", "undefined"]
rebuilt        : ["undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChain.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o3$b", "o1", "o2", "o3"]
rebuilt        : ScopeId(0): ["_o3$b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChain.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o", "_o3$b", "_o3$b10", "_o3$b11", "_o3$b12", "_o3$b2", "_o3$b3", "_o3$b4", "_o3$b5", "_o3$b6", "_o3$b7", "_o3$b8", "_o3$b9", "incr", "o1", "o2", "o3", "o4", "o5", "v"]
rebuilt        : ScopeId(0): ["_o", "_o3$b", "_o3$b10", "_o3$b11", "_o3$b12", "_o3$b2", "_o3$b3", "_o3$b4", "_o3$b5", "_o3$b6", "_o3$b7", "_o3$b8", "_o3$b9", "incr", "v"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "incr":
after transform: SymbolId(5) "incr"
rebuilt        : SymbolId(13) "incr"
Reference symbol mismatch for "o5":
after transform: SymbolId(8) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3", "o4", "o5"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/callChainInference.ts
Bindings mismatch:
after transform: ScopeId(0): ["value"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Reference symbol mismatch for "value":
after transform: SymbolId(2) "value"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["value"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/callChain/parentheses.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o4$b", "o1", "o2", "o3", "o4"]
rebuilt        : ScopeId(0): ["_o4$b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3", "o4"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/elementAccessChain/elementAccessChain.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o3$b", "_o3$b2", "o1", "o2", "o3"]
rebuilt        : ScopeId(0): ["_o3$b", "_o3$b2"]
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/elementAccessChain/elementAccessChain.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o", "_o3$b", "_o3$b2", "_o4$b", "_o4$b2", "_o5$b", "_o5$b2", "_o5$b3", "_o5$b4", "o1", "o2", "o3", "o4", "o5", "o6"]
rebuilt        : ScopeId(0): ["_o", "_o3$b", "_o3$b2", "_o4$b", "_o4$b2", "_o5$b", "_o5$b2", "_o5$b3", "_o5$b4"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o6":
after transform: SymbolId(5) "o6"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3", "o4", "o5", "o6"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/optionalChainingInference.ts
Bindings mismatch:
after transform: ScopeId(0): ["b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "fnu", "ofnu", "osu", "su", "unbox", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8"]
rebuilt        : ScopeId(0): ["b1", "b2", "b3", "b4", "b5", "b6", "b7", "b8", "unbox", "v1", "v2", "v3", "v4", "v5", "v6", "v7", "v8"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "fnu":
after transform: SymbolId(4) "fnu"
rebuilt        : <None>
Reference symbol mismatch for "fnu":
after transform: SymbolId(4) "fnu"
rebuilt        : <None>
Reference symbol mismatch for "fnu":
after transform: SymbolId(4) "fnu"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "su":
after transform: SymbolId(3) "su"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "osu":
after transform: SymbolId(5) "osu"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Reference symbol mismatch for "ofnu":
after transform: SymbolId(6) "ofnu"
rebuilt        : <None>
Reference symbol mismatch for "ofnu":
after transform: SymbolId(6) "ofnu"
rebuilt        : <None>
Reference symbol mismatch for "ofnu":
after transform: SymbolId(6) "ofnu"
rebuilt        : <None>
Reference symbol mismatch for "unbox":
after transform: SymbolId(0) "unbox"
rebuilt        : SymbolId(0) "unbox"
Unresolved references mismatch:
after transform: []
rebuilt        : ["fnu", "ofnu", "osu", "su"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/propertyAccessChain/propertyAccessChain.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o3$b", "o1", "o2", "o3"]
rebuilt        : ScopeId(0): ["_o3$b"]
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/optionalChaining/propertyAccessChain/propertyAccessChain.ts
Bindings mismatch:
after transform: ScopeId(0): ["_o", "_o3$b", "_o4$b", "_o5$b", "o1", "o2", "o3", "o4", "o5", "o6"]
rebuilt        : ScopeId(0): ["_o", "_o3$b", "_o4$b", "_o5$b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o3":
after transform: SymbolId(2) "o3"
rebuilt        : <None>
Reference symbol mismatch for "o4":
after transform: SymbolId(3) "o4"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o5":
after transform: SymbolId(4) "o5"
rebuilt        : <None>
Reference symbol mismatch for "o6":
after transform: SymbolId(5) "o6"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o1":
after transform: SymbolId(0) "o1"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Reference symbol mismatch for "o2":
after transform: SymbolId(1) "o2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["o1", "o2", "o3", "o4", "o5", "o6"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeAssertions/constAssertionOnEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "Foo"]
rebuilt        : ScopeId(1): ["Foo"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/TypeGuardWithArrayUnion.ts
Symbol reference IDs mismatch for "Message":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/TypeGuardWithEnumUnion.ts
Bindings mismatch:
after transform: ScopeId(1): ["B", "Color", "G", "R"]
rebuilt        : ScopeId(1): ["Color"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Color":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Color":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(5), ReferenceId(10), ReferenceId(15), ReferenceId(23)]
rebuilt        : SymbolId(0): [ReferenceId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardEnums.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(9)]
rebuilt        : SymbolId(0): [ReferenceId(1)]
Symbol flags mismatch for "V":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "V":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(11)]
rebuilt        : SymbolId(2): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardFunction.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(15), SymbolId(18), SymbolId(19), SymbolId(21), SymbolId(23), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(31), SymbolId(32)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(16), SymbolId(19), SymbolId(20), SymbolId(22), SymbolId(24), SymbolId(27), SymbolId(29), SymbolId(31), SymbolId(32)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(20), ScopeId(21), ScopeId(22)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(5), ReferenceId(14), ReferenceId(19), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(34), ReferenceId(39)]
rebuilt        : SymbolId(1): [ReferenceId(3)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(6), ReferenceId(15), ReferenceId(43), ReferenceId(44)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(4), ReferenceId(10), ReferenceId(20), ReferenceId(21), ReferenceId(26), ReferenceId(28), ReferenceId(30), ReferenceId(32), ReferenceId(35), ReferenceId(42)]
rebuilt        : SymbolId(3): []
Reference symbol mismatch for "isC":
after transform: SymbolId(7) "isC"
rebuilt        : SymbolId(9) "isC"
Reference symbol mismatch for "isA":
after transform: SymbolId(3) "isA"
rebuilt        : SymbolId(5) "isA"
Reference symbol mismatch for "isA":
after transform: SymbolId(3) "isA"
rebuilt        : SymbolId(5) "isA"
Reference symbol mismatch for "isC_multipleParams":
after transform: SymbolId(15) "isC_multipleParams"
rebuilt        : SymbolId(16) "isC_multipleParams"
Reference symbol mismatch for "f2":
after transform: SymbolId(23) "f2"
rebuilt        : SymbolId(24) "f2"
Reference symbol mismatch for "acceptingBoolean":
after transform: SymbolId(26) "acceptingBoolean"
rebuilt        : SymbolId(27) "acceptingBoolean"
Reference symbol mismatch for "isA":
after transform: SymbolId(3) "isA"
rebuilt        : SymbolId(5) "isA"
Reference symbol mismatch for "acceptingTypeGuardFunction":
after transform: SymbolId(28) "acceptingTypeGuardFunction"
rebuilt        : SymbolId(29) "acceptingTypeGuardFunction"
Reference symbol mismatch for "isA":
after transform: SymbolId(3) "isA"
rebuilt        : SymbolId(5) "isA"
Reference symbol mismatch for "isA":
after transform: SymbolId(3) "isA"
rebuilt        : SymbolId(5) "isA"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardFunctionGenerics.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(12), SymbolId(16), SymbolId(19), SymbolId(23), SymbolId(28), SymbolId(29), SymbolId(30), SymbolId(31), SymbolId(32)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(11), SymbolId(13), SymbolId(16), SymbolId(18), SymbolId(21), SymbolId(24), SymbolId(25), SymbolId(26), SymbolId(27)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(18)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(15)]
rebuilt        : SymbolId(1): [ReferenceId(3)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(22), ReferenceId(29)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(3): []
Reference symbol mismatch for "funA":
after transform: SymbolId(9) "funA"
rebuilt        : SymbolId(11) "funA"
Reference symbol mismatch for "isB":
after transform: SymbolId(3) "isB"
rebuilt        : SymbolId(5) "isB"
Reference symbol mismatch for "funB":
after transform: SymbolId(12) "funB"
rebuilt        : SymbolId(13) "funB"
Reference symbol mismatch for "retC":
after transform: SymbolId(7) "retC"
rebuilt        : SymbolId(9) "retC"
Reference symbol mismatch for "funC":
after transform: SymbolId(16) "funC"
rebuilt        : SymbolId(16) "funC"
Reference symbol mismatch for "isB":
after transform: SymbolId(3) "isB"
rebuilt        : SymbolId(5) "isB"
Reference symbol mismatch for "funD":
after transform: SymbolId(19) "funD"
rebuilt        : SymbolId(18) "funD"
Reference symbol mismatch for "isC":
after transform: SymbolId(5) "isC"
rebuilt        : SymbolId(7) "isC"
Reference symbol mismatch for "funE":
after transform: SymbolId(23) "funE"
rebuilt        : SymbolId(21) "funE"
Reference symbol mismatch for "isB":
after transform: SymbolId(3) "isB"
rebuilt        : SymbolId(5) "isB"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardFunctionOfFormThis.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(39)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(29), ScopeId(31), ScopeId(33)]
Symbol reference IDs mismatch for "RoyalGuard":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(12)]
rebuilt        : SymbolId(1): [ReferenceId(3), ReferenceId(4)]
Symbol reference IDs mismatch for "LeadGuard":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1), ReferenceId(62)]
rebuilt        : SymbolId(2): [ReferenceId(1)]
Symbol reference IDs mismatch for "FollowerGuard":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(3), ReferenceId(7), ReferenceId(63)]
rebuilt        : SymbolId(3): [ReferenceId(2), ReferenceId(5)]
Symbol reference IDs mismatch for "ArrowElite":
after transform: SymbolId(8): [ReferenceId(22), ReferenceId(23)]
rebuilt        : SymbolId(8): [ReferenceId(19)]
Symbol reference IDs mismatch for "ArrowMedic":
after transform: SymbolId(9): [ReferenceId(24), ReferenceId(25)]
rebuilt        : SymbolId(9): [ReferenceId(21)]
Symbol reference IDs mismatch for "MimicLeader":
after transform: SymbolId(17): [ReferenceId(47), ReferenceId(48)]
rebuilt        : SymbolId(13): [ReferenceId(37)]
Symbol reference IDs mismatch for "MimicFollower":
after transform: SymbolId(18): [ReferenceId(49), ReferenceId(50)]
rebuilt        : SymbolId(14): [ReferenceId(38)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardIntersectionTypes.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(13), SymbolId(15), SymbolId(17), SymbolId(22), SymbolId(24), SymbolId(26), SymbolId(28)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(10), SymbolId(12), SymbolId(14), SymbolId(16), SymbolId(18), SymbolId(20)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(32)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(7), ScopeId(8), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(24)]
Reference symbol mismatch for "isX":
after transform: SymbolId(3) "isX"
rebuilt        : SymbolId(0) "isX"
Reference symbol mismatch for "isY":
after transform: SymbolId(5) "isY"
rebuilt        : SymbolId(2) "isY"
Reference symbol mismatch for "isZ":
after transform: SymbolId(7) "isZ"
rebuilt        : SymbolId(4) "isZ"
Reference symbol mismatch for "isX":
after transform: SymbolId(3) "isX"
rebuilt        : SymbolId(0) "isX"
Reference symbol mismatch for "isY":
after transform: SymbolId(5) "isY"
rebuilt        : SymbolId(2) "isY"
Reference symbol mismatch for "isZ":
after transform: SymbolId(7) "isZ"
rebuilt        : SymbolId(4) "isZ"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Reference symbol mismatch for "log":
after transform: SymbolId(17) "log"
rebuilt        : SymbolId(12) "log"
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsPrimitiveIntersection.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(11), SymbolId(13)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(9), SymbolId(11), SymbolId(13)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(0x0)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol flags mismatch for "Tag2":
after transform: SymbolId(8): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(7): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Tag2":
after transform: SymbolId(8): [ReferenceId(8), ReferenceId(9), ReferenceId(17)]
rebuilt        : SymbolId(7): [ReferenceId(7)]
Reference symbol mismatch for "isNonBlank":
after transform: SymbolId(1) "isNonBlank"
rebuilt        : SymbolId(0) "isNonBlank"
Reference symbol mismatch for "doThis":
after transform: SymbolId(3) "doThis"
rebuilt        : SymbolId(2) "doThis"
Reference symbol mismatch for "doThat":
after transform: SymbolId(5) "doThat"
rebuilt        : SymbolId(4) "doThat"
Reference symbol mismatch for "isNonBlank2":
after transform: SymbolId(9) "isNonBlank2"
rebuilt        : SymbolId(9) "isNonBlank2"
Reference symbol mismatch for "doThis2":
after transform: SymbolId(11) "doThis2"
rebuilt        : SymbolId(11) "doThis2"
Reference symbol mismatch for "doThat2":
after transform: SymbolId(13) "doThat2"
rebuilt        : SymbolId(13) "doThat2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsToLiteralType.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "isFoo":
after transform: SymbolId(0) "isFoo"
rebuilt        : SymbolId(0) "isFoo"
Reference symbol mismatch for "doThis":
after transform: SymbolId(2) "doThis"
rebuilt        : SymbolId(2) "doThis"
Reference symbol mismatch for "doThat":
after transform: SymbolId(4) "doThat"
rebuilt        : SymbolId(4) "doThat"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardNarrowsToLiteralTypeUnion.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "isFoo":
after transform: SymbolId(0) "isFoo"
rebuilt        : SymbolId(0) "isFoo"
Reference symbol mismatch for "doThis":
after transform: SymbolId(2) "doThis"
rebuilt        : SymbolId(2) "doThis"
Reference symbol mismatch for "doThat":
after transform: SymbolId(4) "doThat"
rebuilt        : SymbolId(4) "doThat"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormExpr1AndExpr2.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(23)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormExpr1OrExpr2.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(19)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormFunctionEquality.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(5), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "isString1":
after transform: SymbolId(0) "isString1"
rebuilt        : SymbolId(0) "isString1"
Reference symbol mismatch for "isString2":
after transform: SymbolId(3) "isString2"
rebuilt        : SymbolId(3) "isString2"
Reference symbol mismatch for "isString1":
after transform: SymbolId(0) "isString1"
rebuilt        : SymbolId(0) "isString1"
Reference symbol mismatch for "isString2":
after transform: SymbolId(3) "isString2"
rebuilt        : SymbolId(3) "isString2"
Reference symbol mismatch for "isString1":
after transform: SymbolId(0) "isString1"
rebuilt        : SymbolId(0) "isString1"
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOf.ts
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(5), ReferenceId(36), ReferenceId(38), ReferenceId(41), ReferenceId(44), ReferenceId(48), ReferenceId(54), ReferenceId(58), ReferenceId(61), ReferenceId(65)]
rebuilt        : SymbolId(1): [ReferenceId(3), ReferenceId(9), ReferenceId(36), ReferenceId(39), ReferenceId(43), ReferenceId(50), ReferenceId(54)]
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(9), ReferenceId(19), ReferenceId(23), ReferenceId(34), ReferenceId(39), ReferenceId(45), ReferenceId(51), ReferenceId(56), ReferenceId(62), ReferenceId(67)]
rebuilt        : SymbolId(2): [ReferenceId(13), ReferenceId(25), ReferenceId(46), ReferenceId(56)]
Symbol reference IDs mismatch for "D1":
after transform: SymbolId(2): [ReferenceId(13), ReferenceId(17), ReferenceId(20), ReferenceId(27), ReferenceId(31), ReferenceId(33), ReferenceId(55)]
rebuilt        : SymbolId(3): [ReferenceId(17), ReferenceId(21), ReferenceId(29), ReferenceId(33)]
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(3): [ReferenceId(46), ReferenceId(63)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormInstanceOfOnInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormIsType.ts
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(4)]
rebuilt        : SymbolId(1): [ReferenceId(3)]
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(22), ReferenceId(36)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "D1":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(23), ReferenceId(37)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormIsTypeOnInterfaces.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfBoolean.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfFunction.ts
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(11): [ScopeId(12)]
Scope children mismatch:
after transform: ScopeId(14): [ScopeId(15), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(13): [ScopeId(14), ScopeId(15)]
Scope children mismatch:
after transform: ScopeId(18): [ScopeId(19), ScopeId(20), ScopeId(21)]
rebuilt        : ScopeId(16): [ScopeId(17), ScopeId(18)]
Scope children mismatch:
after transform: ScopeId(28): [ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32)]
rebuilt        : ScopeId(25): [ScopeId(26)]
Unresolved references mismatch:
after transform: ["Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfIsOrderIndependent.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfNumber.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfPrimitiveSubtype.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFormTypeOfString.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardOfFromPropNameInUnionType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(23), ScopeId(26), ScopeId(27), ScopeId(30), ScopeId(34), ScopeId(38), ScopeId(39)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(12), ScopeId(15), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(25), ScopeId(28), ScopeId(30), ScopeId(33), ScopeId(35), ScopeId(38), ScopeId(43), ScopeId(48)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(7), ReferenceId(27), ReferenceId(32), ReferenceId(43)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(8), ReferenceId(28), ReferenceId(33), ReferenceId(44)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(9)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(3): [ReferenceId(10)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "AWithOptionalProp":
after transform: SymbolId(14): [ReferenceId(19), ReferenceId(24)]
rebuilt        : SymbolId(15): [ReferenceId(19)]
Symbol reference IDs mismatch for "BWithOptionalProp":
after transform: SymbolId(15): [ReferenceId(20)]
rebuilt        : SymbolId(16): []
Symbol reference IDs mismatch for "ClassWithUnionProp":
after transform: SymbolId(23): [ReferenceId(34), ReferenceId(38)]
rebuilt        : SymbolId(24): []
Symbol reference IDs mismatch for "NestedClassWithProp":
after transform: SymbolId(28): [ReferenceId(39)]
rebuilt        : SymbolId(29): []
Unresolved references mismatch:
after transform: ["Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardsInFunctionAndModuleBlock.ts
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(13): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(16): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(16): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(17): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(18): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(18): ScopeFlags(Function)
Symbol flags mismatch for "m":
after transform: SymbolId(21): SymbolFlags(ValueModule)
rebuilt        : SymbolId(21): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "m":
after transform: SymbolId(21): Span { start: 1652, end: 1653 }
rebuilt        : SymbolId(21): Span { start: 0, end: 0 }
Symbol flags mismatch for "m2":
after transform: SymbolId(23): SymbolFlags(ValueModule)
rebuilt        : SymbolId(24): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "m2":
after transform: SymbolId(23): Span { start: 1705, end: 1707 }
rebuilt        : SymbolId(24): Span { start: 0, end: 0 }
Symbol flags mismatch for "m1":
after transform: SymbolId(26): SymbolFlags(ValueModule)
rebuilt        : SymbolId(28): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "m1":
after transform: SymbolId(26): Span { start: 2016, end: 2018 }
rebuilt        : SymbolId(28): Span { start: 0, end: 0 }
Symbol flags mismatch for "m2":
after transform: SymbolId(28): SymbolFlags(ValueModule)
rebuilt        : SymbolId(31): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "m2":
after transform: SymbolId(28): Span { start: 2070, end: 2072 }
rebuilt        : SymbolId(31): Span { start: 0, end: 0 }
Symbol flags mismatch for "m3":
after transform: SymbolId(29): SymbolFlags(ValueModule)
rebuilt        : SymbolId(33): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "m3":
after transform: SymbolId(29): Span { start: 2073, end: 2075 }
rebuilt        : SymbolId(33): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardsInModule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typeGuardsInProperties.ts
Symbol reference IDs mismatch for "C1":
after transform: SymbolId(2): [ReferenceId(4)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeGuards/typePredicateASI.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_asConstArrays.ts
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_contextualTyping1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_contextualTyping3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Unresolved references mismatch:
after transform: ["Function"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_ensureInterfaceImpl.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Unresolved references mismatch:
after transform: ["Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(6), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(5), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(5): [ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(7), ReferenceId(8)]
rebuilt        : SymbolId(4): [ReferenceId(1), ReferenceId(3), ReferenceId(5), ReferenceId(6)]
Reference symbol mismatch for "checkTruths":
after transform: SymbolId(1) "checkTruths"
rebuilt        : SymbolId(0) "checkTruths"
Reference symbol mismatch for "checkM":
after transform: SymbolId(3) "checkM"
rebuilt        : SymbolId(2) "checkM"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/typeSatisfaction/typeSatisfaction_propertyValueConformance2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(6), SymbolId(8)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(5), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(5): [ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(7), ReferenceId(8)]
rebuilt        : SymbolId(4): [ReferenceId(1), ReferenceId(3), ReferenceId(5), ReferenceId(6)]
Reference symbol mismatch for "checkTruths":
after transform: SymbolId(1) "checkTruths"
rebuilt        : SymbolId(0) "checkTruths"
Reference symbol mismatch for "checkM":
after transform: SymbolId(3) "checkM"
rebuilt        : SymbolId(2) "checkM"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithBooleanType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithEnumType.ts
Bindings mismatch:
after transform: ScopeId(1): ["", "A", "B", "ENUM1"]
rebuilt        : ScopeId(1): ["ENUM1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "ENUM1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithNumberType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/bitwiseNotOperator/bitwiseNotOperatorWithStringType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/decrementOperator/decrementOperatorWithAnyOtherType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/decrementOperator/decrementOperatorWithNumberType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/incrementOperator/incrementOperatorWithAnyOtherType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/incrementOperator/incrementOperatorWithNumberType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithBooleanType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithEnumType.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["", "A", "B", "ENUM1"]
rebuilt        : ScopeId(2): ["ENUM1"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "ENUM":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol flags mismatch for "ENUM1":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithNumberType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/expressions/unaryOperators/voidOperator/voidOperatorWithStringType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/amdImportAsPrimaryExpression.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "E1"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/amdImportNotAsPrimaryExpression.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "E1", "M1", "_defineProperty"]
rebuilt        : ScopeId(0): ["C1", "E1", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(5): ["A", "B", "C", "E1"]
rebuilt        : ScopeId(3): ["E1"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/asiPreventsParsingAsAmbientExternalModule02.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "container":
after transform: SymbolId(2): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "container":
after transform: SymbolId(2): Span { start: 49, end: 58 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/commonJSImportNotAsPrimaryExpression.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "E1", "M1", "_defineProperty"]
rebuilt        : ScopeId(0): ["C1", "E1", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(5): ["A", "B", "C", "E1"]
rebuilt        : ScopeId(3): ["E1"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(8)]
Symbol span mismatch for "D":
after transform: SymbolId(3): Span { start: 147, end: 148 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(6): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 147, end: 148 }
Reference symbol mismatch for "foo":
after transform: SymbolId(1) "foo"
rebuilt        : SymbolId(3) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target11.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 69, end: 70 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(11)]
rebuilt        : SymbolId(5): [ReferenceId(4), ReferenceId(5), ReferenceId(9), ReferenceId(10)]
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 69, end: 70 }
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(3) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target12.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
Bindings mismatch:
after transform: ScopeId(3): ["E", "w"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(4): ["E", "x"]
rebuilt        : ScopeId(4): ["E"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode)
rebuilt        : ScopeId(4): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol redeclarations mismatch for "C":
after transform: SymbolId(0): [Span { start: 13, end: 14 }, Span { start: 37, end: 38 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "E":
after transform: SymbolId(2): SymbolFlags(RegularEnum | ValueModule)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "E":
after transform: SymbolId(2): [Span { start: 80, end: 81 }, Span { start: 109, end: 110 }, Span { start: 143, end: 144 }, Span { start: 191, end: 192 }]
rebuilt        : SymbolId(3): []
Symbol flags mismatch for "N":
after transform: SymbolId(7): SymbolFlags(NamespaceModule | ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(7): Span { start: 239, end: 240 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "N":
after transform: SymbolId(7): [Span { start: 239, end: 240 }, Span { start: 263, end: 264 }]
rebuilt        : SymbolId(10): []
Symbol flags mismatch for "F":
after transform: SymbolId(9): SymbolFlags(Function | ValueModule)
rebuilt        : SymbolId(13): SymbolFlags(Function)
Symbol redeclarations mismatch for "F":
after transform: SymbolId(9): [Span { start: 310, end: 311 }, Span { start: 336, end: 337 }]
rebuilt        : SymbolId(13): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "D":
after transform: SymbolId(2): Span { start: 69, end: 70 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 69, end: 70 }
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(2) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target5.ts
Bindings mismatch:
after transform: ScopeId(1): ["E1", "value1"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(2): ["E2", "value1"]
rebuilt        : ScopeId(2): ["E2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol flags mismatch for "E2":
after transform: SymbolId(2): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/es6/es6modulekindWithES5Target7.ts
Bindings mismatch:
after transform: ScopeId(0): ["N", "N2"]
rebuilt        : ScopeId(0): ["N"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "N":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(0): Span { start: 17, end: 18 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(8)]
Symbol span mismatch for "D":
after transform: SymbolId(3): Span { start: 147, end: 148 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(6): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 147, end: 148 }
Reference symbol mismatch for "foo":
after transform: SymbolId(1) "foo"
rebuilt        : SymbolId(3) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target11.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 69, end: 70 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(11)]
rebuilt        : SymbolId(5): [ReferenceId(4), ReferenceId(5), ReferenceId(9), ReferenceId(10)]
Symbol span mismatch for "C":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(6): Span { start: 69, end: 70 }
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(3) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target12.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
Bindings mismatch:
after transform: ScopeId(3): ["E", "w"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(4): ["E", "x"]
rebuilt        : ScopeId(4): ["E"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode)
rebuilt        : ScopeId(4): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol redeclarations mismatch for "C":
after transform: SymbolId(0): [Span { start: 13, end: 14 }, Span { start: 37, end: 38 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "E":
after transform: SymbolId(2): SymbolFlags(RegularEnum | ValueModule)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "E":
after transform: SymbolId(2): [Span { start: 80, end: 81 }, Span { start: 109, end: 110 }, Span { start: 143, end: 144 }, Span { start: 191, end: 192 }]
rebuilt        : SymbolId(3): []
Symbol flags mismatch for "N":
after transform: SymbolId(7): SymbolFlags(NamespaceModule | ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(7): Span { start: 239, end: 240 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "N":
after transform: SymbolId(7): [Span { start: 239, end: 240 }, Span { start: 263, end: 264 }]
rebuilt        : SymbolId(10): []
Symbol flags mismatch for "F":
after transform: SymbolId(9): SymbolFlags(Function | ValueModule)
rebuilt        : SymbolId(13): SymbolFlags(Function)
Symbol redeclarations mismatch for "F":
after transform: SymbolId(9): [Span { start: 310, end: 311 }, Span { start: 336, end: 337 }]
rebuilt        : SymbolId(13): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol span mismatch for "D":
after transform: SymbolId(2): Span { start: 69, end: 70 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol span mismatch for "D":
after transform: SymbolId(4): Span { start: 0, end: 0 }
rebuilt        : SymbolId(5): Span { start: 69, end: 70 }
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(2) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target5.ts
Bindings mismatch:
after transform: ScopeId(1): ["E1", "value1"]
rebuilt        : ScopeId(1): ["E1"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(2): ["E2", "value1"]
rebuilt        : ScopeId(2): ["E2"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E1":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol flags mismatch for "E2":
after transform: SymbolId(2): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/esnext/esnextmodulekindWithES5Target7.ts
Bindings mismatch:
after transform: ScopeId(0): ["N", "N2"]
rebuilt        : ScopeId(0): ["N"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "N":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(0): Span { start: 17, end: 18 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAmbientClassNameWithObject.ts
Symbol flags mismatch for "Object":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Array", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentCircularModules.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentMergedInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "Foo":
after transform: SymbolId(0) "Foo"
rebuilt        : <None>
Reference flags mismatch for "Foo":
after transform: ReferenceId(0): ReferenceFlags(Type)
rebuilt        : ReferenceId(1): ReferenceFlags(Read)
Unresolved references mismatch:
after transform: ["module"]
rebuilt        : ["Foo", "module"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentMergedModule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelClodule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelEnumdule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelFundule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportAssignmentTopLevelIdentifier.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportDeclaredModule.ts
Bindings mismatch:
after transform: ScopeId(0): ["M1"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "M1":
after transform: SymbolId(0) "M1"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["module"]
rebuilt        : ["M1", "module"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportNonVisibleType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/exportTypeMergedWithExportStarAsNamespace.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol reference IDs mismatch for "Something":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/globalAugmentationModuleResolution.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/moduleResolutionWithExtensions.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/nameWithRelativePaths.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/rewriteRelativeImportExtensions/nodeModulesTsFiles.ts
Bindings mismatch:
after transform: ScopeId(0): ["add"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAmbientModule.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAwait.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "C1", "C2", "C3", "_await", "_decorate", "_defineProperty", "dec", "f", "x", "y"]
rebuilt        : ScopeId(0): ["C", "C1", "C2", "C3", "_decorate", "_defineProperty", "f", "x", "y"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
Symbol span mismatch for "C":
after transform: SymbolId(8): Span { start: 665, end: 666 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(12): Span { start: 0, end: 0 }
rebuilt        : SymbolId(10): Span { start: 665, end: 666 }
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : SymbolId(3) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(1) "f"
rebuilt        : SymbolId(3) "f"
Reference symbol mismatch for "dec":
after transform: SymbolId(7) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAwait.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/topLevelAwait.3.ts
The keyword 'await' is reserved
The keyword 'await' is reserved

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeAndNamespaceExportMerge.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/ambient.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "ns"]
rebuilt        : ScopeId(0): ["B"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "B":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Unresolved reference IDs mismatch for "A":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/cjsImportInES2015.ts
Unresolved references mismatch:
after transform: ["Error"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/exportDeclaration.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/exportDeclaration_moduleSpecifier-isolatedModules.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/exportDeclaration_value.ts
Unresolved references mismatch:
after transform: ["A"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/implementsClause.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType.ts
Bindings mismatch:
after transform: ScopeId(0): ["type"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType2.ts
Bindings mismatch:
after transform: ScopeId(0): ["from"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/importDefaultNamedType3.ts
Bindings mismatch:
after transform: ScopeId(0): ["from"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/mergedWithLocalValue.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/namespaceImportTypeQuery2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/nestedNamespace.ts
Symbol flags mismatch for "types":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "types":
after transform: SymbolId(0): Span { start: 17, end: 22 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/preserveValueImports.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/preserveValueImports_errors.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnly/typeQuery.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "AConstructor"]
rebuilt        : ScopeId(0): ["AConstructor"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeOnlyMerge1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/typeValueMerge1.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A", "B"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Function | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 12, end: 13 }
rebuilt        : SymbolId(0): Span { start: 33, end: 34 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 12, end: 13 }, Span { start: 33, end: 34 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "B":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | TypeAlias)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "B":
after transform: SymbolId(1): Span { start: 67, end: 68 }
rebuilt        : SymbolId(1): Span { start: 83, end: 84 }
Symbol redeclarations mismatch for "B":
after transform: SymbolId(1): [Span { start: 67, end: 68 }, Span { start: 83, end: 84 }]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd-augmentation-1.ts
Symbol reference IDs mismatch for "m":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(3)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd-augmentation-2.ts
Unresolved reference IDs mismatch for "Math2d":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(3)]
rebuilt        : [ReferenceId(0), ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd-augmentation-3.ts
Symbol reference IDs mismatch for "m":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(3)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd-augmentation-4.ts
Unresolved reference IDs mismatch for "Math2d":
after transform: [ReferenceId(0), ReferenceId(1), ReferenceId(3)]
rebuilt        : [ReferenceId(0), ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd1.ts
Unresolved reference IDs mismatch for "Foo":
after transform: [ReferenceId(0), ReferenceId(1)]
rebuilt        : [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd3.ts
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/umd4.ts
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxConstEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxConstEnumUsage.ts
Bindings mismatch:
after transform: ScopeId(1): ["Foo", "a", "b", "c"]
rebuilt        : ScopeId(1): ["Foo"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/externalModules/verbatimModuleSyntaxRestrictionsESM.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/functions/functionOverloadCompatibilityWithVoid02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/functions/functionOverloadCompatibilityWithVoid03.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/functions/functionParameterObjectRestAndInitializers.ts
Symbol reference IDs mismatch for "a":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(6): []
Reference symbol mismatch for "a":
after transform: SymbolId(1) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["a", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/functions/strictBindCallApply2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "fn":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Unresolved references mismatch:
after transform: ["ThisParameterType"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/generators/generatorReturnTypeFallback.5.ts
Unresolved references mismatch:
after transform: ["IterableIterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/generators/generatorReturnTypeIndirectReferenceToGlobalType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Iterator"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/generators/generatorYieldContextualType.ts
Bindings mismatch:
after transform: ScopeId(0): ["Directive", "_wrapAsyncGenerator", "canPickStepContinue", "createPickStep", "f1", "f2", "showStep"]
rebuilt        : ScopeId(0): ["Directive", "StepResult", "_wrapAsyncGenerator", "canPickStepContinue", "createPickStep", "f1", "f2", "showStep"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
Bindings mismatch:
after transform: ScopeId(7): ["Back", "Cancel", "Directive", "LoadMore", "Noop"]
rebuilt        : ScopeId(5): ["Directive"]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(0x0)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Symbol flags mismatch for "Directive":
after transform: SymbolId(12): SymbolFlags(RegularEnum | ValueModule)
rebuilt        : SymbolId(7): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Directive":
after transform: SymbolId(12): [ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(51), ReferenceId(54), ReferenceId(64), ReferenceId(93), ReferenceId(94), ReferenceId(108)]
rebuilt        : SymbolId(7): [ReferenceId(13), ReferenceId(15), ReferenceId(19), ReferenceId(20)]
Symbol redeclarations mismatch for "Directive":
after transform: SymbolId(12): [Span { start: 318, end: 327 }, Span { start: 381, end: 390 }]
rebuilt        : SymbolId(7): []
Symbol flags mismatch for "StepResult":
after transform: SymbolId(28): SymbolFlags(TypeAlias | ValueModule)
rebuilt        : SymbolId(12): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "StepResult":
after transform: SymbolId(28): Span { start: 1257, end: 1267 }
rebuilt        : SymbolId(12): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "StepResult":
after transform: SymbolId(28): [ReferenceId(25), ReferenceId(29), ReferenceId(36), ReferenceId(41), ReferenceId(46), ReferenceId(90), ReferenceId(96), ReferenceId(97)]
rebuilt        : SymbolId(12): [ReferenceId(23), ReferenceId(24), ReferenceId(33)]
Symbol redeclarations mismatch for "StepResult":
after transform: SymbolId(28): [Span { start: 1257, end: 1267 }, Span { start: 1321, end: 1331 }]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "step":
after transform: SymbolId(53): [ReferenceId(83), ReferenceId(84), ReferenceId(86)]
rebuilt        : SymbolId(24): [ReferenceId(27), ReferenceId(29)]
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(1) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(6) "f2"
rebuilt        : SymbolId(4) "f2"
Unresolved references mismatch:
after transform: ["AsyncGenerator", "Generator", "Partial", "Record", "Symbol", "require"]
rebuilt        : ["Symbol", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/generators/yieldStatementNoAsiAfterTransform.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
rebuilt        : ScopeId(0): ["t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importAttributes/importAttributes7.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_f", "a", "f"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_f", "f"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importAttributes/importAttributes8.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importDefer/importBindingDefer.ts
Bindings mismatch:
after transform: ScopeId(0): ["defer"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importDefer/importBindingDefer2.ts
Bindings mismatch:
after transform: ScopeId(0): ["defer"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importDefer/importDeferComments.ts
Bindings mismatch:
after transform: ScopeId(0): ["aNs"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/importDefer/importDeferDeclaration.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/inferFromBindingPattern.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(11), SymbolId(19), SymbolId(22), SymbolId(23), SymbolId(24), SymbolId(25), SymbolId(26), SymbolId(27), SymbolId(28), SymbolId(31), SymbolId(34), SymbolId(35)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(16), SymbolId(18), SymbolId(20), SymbolId(21)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(2) "f2"
rebuilt        : SymbolId(1) "f2"
Reference symbol mismatch for "f3":
after transform: SymbolId(4) "f3"
rebuilt        : SymbolId(2) "f3"
Reference symbol mismatch for "selectJohn":
after transform: SymbolId(19) "selectJohn"
rebuilt        : SymbolId(8) "selectJohn"
Reference symbol mismatch for "selectJohn":
after transform: SymbolId(19) "selectJohn"
rebuilt        : SymbolId(8) "selectJohn"
Reference symbol mismatch for "selectJohn":
after transform: SymbolId(19) "selectJohn"
rebuilt        : SymbolId(8) "selectJohn"
Reference symbol mismatch for "makeTuple":
after transform: SymbolId(28) "makeTuple"
rebuilt        : SymbolId(16) "makeTuple"
Reference symbol mismatch for "stringy":
after transform: SymbolId(31) "stringy"
rebuilt        : SymbolId(18) "stringy"
Reference symbol mismatch for "makeTuple":
after transform: SymbolId(28) "makeTuple"
rebuilt        : SymbolId(16) "makeTuple"
Reference symbol mismatch for "stringy":
after transform: SymbolId(31) "stringy"
rebuilt        : SymbolId(18) "stringy"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/genericAndNonGenericInterfaceWithTheSameName2.ts
Bindings mismatch:
after transform: ScopeId(0): ["M", "M2", "N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeThreeInterfaces.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "M":
after transform: SymbolId(13): SymbolFlags(ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(13): Span { start: 474, end: 475 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeThreeInterfaces2.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(2): []
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8)]
rebuilt        : ScopeId(4): []
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(10): [ScopeId(11)]
rebuilt        : ScopeId(6): []
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14)]
rebuilt        : ScopeId(8): []
Symbol flags mismatch for "M2":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M2":
after transform: SymbolId(0): Span { start: 113, end: 115 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "M2":
after transform: SymbolId(0): [Span { start: 113, end: 115 }, Span { start: 235, end: 237 }, Span { start: 518, end: 520 }, Span { start: 693, end: 695 }, Span { start: 892, end: 894 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "M3":
after transform: SymbolId(10): SymbolFlags(ValueModule)
rebuilt        : SymbolId(11): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(10): Span { start: 541, end: 543 }
rebuilt        : SymbolId(11): Span { start: 0, end: 0 }
Symbol flags mismatch for "M3":
after transform: SymbolId(15): SymbolFlags(ValueModule)
rebuilt        : SymbolId(17): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(15): Span { start: 716, end: 718 }
rebuilt        : SymbolId(17): Span { start: 0, end: 0 }
Symbol flags mismatch for "M3":
after transform: SymbolId(21): SymbolFlags(ValueModule)
rebuilt        : SymbolId(24): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(21): Span { start: 915, end: 917 }
rebuilt        : SymbolId(24): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeTwoInterfaces.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "M":
after transform: SymbolId(10): SymbolFlags(ValueModule)
rebuilt        : SymbolId(6): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(10): Span { start: 396, end: 397 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergeTwoInterfaces2.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(2): []
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7)]
rebuilt        : ScopeId(4): []
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10)]
rebuilt        : ScopeId(6): []
Symbol flags mismatch for "M2":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M2":
after transform: SymbolId(0): Span { start: 113, end: 115 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol redeclarations mismatch for "M2":
after transform: SymbolId(0): [Span { start: 113, end: 115 }, Span { start: 234, end: 236 }, Span { start: 412, end: 414 }, Span { start: 586, end: 588 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "M3":
after transform: SymbolId(9): SymbolFlags(ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(9): Span { start: 435, end: 437 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol flags mismatch for "M3":
after transform: SymbolId(14): SymbolFlags(ValueModule)
rebuilt        : SymbolId(16): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M3":
after transform: SymbolId(14): Span { start: 609, end: 611 }
rebuilt        : SymbolId(16): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithConflictingPropertyNames2.ts
Bindings mismatch:
after transform: ScopeId(0): ["M", "M2", "M3"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithIndexers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(7): [ScopeId(8), ScopeId(10), ScopeId(12)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "M":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(6): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(6): Span { start: 412, end: 413 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(7): [ReferenceId(7)]
rebuilt        : SymbolId(8): []
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(9): [ReferenceId(10)]
rebuilt        : SymbolId(9): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11)]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(11): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(8): [ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(11): [ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(1): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(2): [ReferenceId(1)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C4":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(4): []
Symbol flags mismatch for "M":
after transform: SymbolId(8): SymbolFlags(ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(8): Span { start: 509, end: 510 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "C":
after transform: SymbolId(9): [ReferenceId(11)]
rebuilt        : SymbolId(10): []
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(11): [ReferenceId(16)]
rebuilt        : SymbolId(11): []
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(13): [ReferenceId(13)]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "C4":
after transform: SymbolId(15): [ReferenceId(17)]
rebuilt        : SymbolId(13): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/mergedInterfacesWithMultipleBases3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(7)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "C3":
after transform: SymbolId(4): [ReferenceId(5)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C4":
after transform: SymbolId(6): [ReferenceId(8)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Date", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/twoMergedInterfacesWithDifferingOverloads.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(15), ScopeId(17), ScopeId(19)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/declarationMerging/twoMergedInterfacesWithDifferingOverloads2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(10)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "G":
after transform: SymbolId(8): SymbolFlags(ValueModule)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "G":
after transform: SymbolId(8): Span { start: 176, end: 177 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/asiPreventsParsingAsInterface03.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "n":
after transform: SymbolId(2): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "n":
after transform: SymbolId(2): Span { start: 45, end: 46 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/derivedInterfaceDoesNotHideBaseSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceExtendsObjectIntersection.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C20", "C21", "C22", "C23", "C3", "C4", "C5", "C6", "C7", "CX", "EX", "NX", "_defineProperty", "fx"]
rebuilt        : ScopeId(0): ["C1", "C2", "C20", "C21", "C22", "C23", "C3", "C4", "C5", "C6", "C7", "CX", "Constructor", "_defineProperty", "fx"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(19), ScopeId(21), ScopeId(23), ScopeId(25)]
Symbol flags mismatch for "CX":
after transform: SymbolId(27): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(18): SymbolFlags(Class)
Symbol reference IDs mismatch for "CX":
after transform: SymbolId(27): [ReferenceId(26)]
rebuilt        : SymbolId(18): []
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Reference symbol mismatch for "Constructor":
after transform: SymbolId(15) "Constructor"
rebuilt        : SymbolId(1) "Constructor"
Unresolved references mismatch:
after transform: ["Partial", "Readonly", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceThatHidesBaseProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallAndConstructSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallSignaturesThatHidesBaseSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithCallSignaturesThatHidesBaseSignature2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithConstructSignaturesThatHidesBaseSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithConstructSignaturesThatHidesBaseSignature2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithOverloadedCallAndConstructSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithPropertyOfEveryType.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfaceDeclarations/interfaceWithSpecializedCallAndConstructSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/interfaces/interfacesExtendingClasses/interfaceExtendingClass.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(6)]
rebuilt        : SymbolId(1): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/AmbientModuleAndNonAmbientClassWithSameNameAndCommonRoot.ts
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticFunctionAndNonExportedFunctionThatShareAName.ts
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(10): ScopeFlags(Function)
Symbol flags mismatch for "Point":
after transform: SymbolId(0): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(0): [ReferenceId(2), ReferenceId(3)]
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(0): [Span { start: 6, end: 11 }, Span { start: 135, end: 140 }]
rebuilt        : SymbolId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(4): SymbolFlags(ValueModule)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(4): Span { start: 226, end: 227 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol flags mismatch for "Point":
after transform: SymbolId(5): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(7): SymbolFlags(Class)
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(5): [ReferenceId(1), ReferenceId(5), ReferenceId(6), ReferenceId(8)]
rebuilt        : SymbolId(7): [ReferenceId(7), ReferenceId(8), ReferenceId(9)]
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(5): [Span { start: 247, end: 252 }, Span { start: 399, end: 404 }]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ClassAndModuleThatMergeWithStaticVariableAndNonExportedVarThatShareAName.ts
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Symbol flags mismatch for "Point":
after transform: SymbolId(0): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(14)]
rebuilt        : SymbolId(1): [ReferenceId(4), ReferenceId(5), ReferenceId(6)]
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(0): [Span { start: 6, end: 11 }, Span { start: 124, end: 129 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "A":
after transform: SymbolId(4): SymbolFlags(ValueModule)
rebuilt        : SymbolId(6): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(4): Span { start: 200, end: 201 }
rebuilt        : SymbolId(6): Span { start: 0, end: 0 }
Symbol flags mismatch for "Point":
after transform: SymbolId(5): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(Class)
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(5): [ReferenceId(1), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(18)]
rebuilt        : SymbolId(8): [ReferenceId(10), ReferenceId(12), ReferenceId(13), ReferenceId(14)]
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(5): [Span { start: 221, end: 226 }, Span { start: 362, end: 367 }]
rebuilt        : SymbolId(8): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/EnumAndModuleWithSameNameAndCommonRoot.ts
Bindings mismatch:
after transform: ScopeId(1): ["Blue", "Red", "enumdule"]
rebuilt        : ScopeId(1): ["enumdule"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "enumdule":
after transform: SymbolId(0): SymbolFlags(RegularEnum | ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "enumdule":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(12)]
rebuilt        : SymbolId(0): [ReferenceId(5), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(13)]
Symbol redeclarations mismatch for "enumdule":
after transform: SymbolId(0): [Span { start: 5, end: 13 }, Span { start: 40, end: 48 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/FunctionAndModuleWithSameNameAndDifferentCommonRoot.ts
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/ModuleAndEnumWithSameNameAndCommonRoot.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(4): ["Blue", "Red", "enumdule"]
rebuilt        : ScopeId(4): ["enumdule"]
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(0x0)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Symbol flags mismatch for "enumdule":
after transform: SymbolId(0): SymbolFlags(RegularEnum | ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "enumdule":
after transform: SymbolId(0): Span { start: 7, end: 15 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "enumdule":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(14), ReferenceId(15)]
rebuilt        : SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(12), ReferenceId(13), ReferenceId(14)]
Symbol redeclarations mismatch for "enumdule":
after transform: SymbolId(0): [Span { start: 7, end: 15 }, Span { start: 118, end: 126 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedClassesOfTheSameName.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(9): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(11): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(13): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(14): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10)]
rebuilt        : SymbolId(1): [ReferenceId(5), ReferenceId(6), ReferenceId(9), ReferenceId(10)]
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 7, end: 8 }, Span { start: 90, end: 91 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "X":
after transform: SymbolId(5): SymbolFlags(ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "X":
after transform: SymbolId(5): Span { start: 294, end: 295 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "X":
after transform: SymbolId(5): [ReferenceId(4), ReferenceId(21), ReferenceId(22), ReferenceId(31), ReferenceId(32)]
rebuilt        : SymbolId(8): [ReferenceId(22), ReferenceId(23), ReferenceId(33), ReferenceId(34)]
Symbol redeclarations mismatch for "X":
after transform: SymbolId(5): [Span { start: 294, end: 295 }, Span { start: 366, end: 367 }]
rebuilt        : SymbolId(8): []
Symbol flags mismatch for "Y":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Y":
after transform: SymbolId(6): Span { start: 296, end: 297 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }
Symbol flags mismatch for "Z":
after transform: SymbolId(7): SymbolFlags(ValueModule)
rebuilt        : SymbolId(12): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Z":
after transform: SymbolId(7): Span { start: 298, end: 299 }
rebuilt        : SymbolId(12): Span { start: 0, end: 0 }
Symbol flags mismatch for "Y":
after transform: SymbolId(9): SymbolFlags(ValueModule)
rebuilt        : SymbolId(16): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Y":
after transform: SymbolId(9): Span { start: 388, end: 389 }
rebuilt        : SymbolId(16): Span { start: 0, end: 0 }
Symbol flags mismatch for "Z":
after transform: SymbolId(10): SymbolFlags(ValueModule)
rebuilt        : SymbolId(18): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Z":
after transform: SymbolId(10): Span { start: 414, end: 415 }
rebuilt        : SymbolId(18): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedInterfacesOfTheSameName.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "X", "l", "p"]
rebuilt        : ScopeId(0): ["l", "p"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(8), ScopeId(13), ScopeId(17)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedAndNonExportedLocalVarsOfTheSameName.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedInterfacesOfTheSameName.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "X", "l", "p"]
rebuilt        : ScopeId(0): ["l", "p"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(14), ScopeId(18)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesThatMergeEachWithExportedModulesOfTheSameName.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesWithTheSameNameAndDifferentCommonRoot.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(2): [ScopeId(3)]
Symbol flags mismatch for "Root":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Root":
after transform: SymbolId(0): Span { start: 7, end: 11 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol flags mismatch for "A":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(1): Span { start: 32, end: 33 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Symbol flags mismatch for "Utils":
after transform: SymbolId(3): SymbolFlags(ValueModule)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Utils":
after transform: SymbolId(3): Span { start: 148, end: 153 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/DeclarationMerging/TwoInternalModulesWithTheSameNameAndSameCommonRoot.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol flags mismatch for "Utils":
after transform: SymbolId(2): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Utils":
after transform: SymbolId(2): Span { start: 103, end: 108 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/exportCodeGen.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/importStatements.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/codeGeneration/nameCollision.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWhichExtendsInterfaceWithInaccessibleType.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithInaccessibleTypeInIndexerTypeAnnotations.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportClassWithInaccessibleTypeInTypeParameterConstraint.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithAccessibleTypesInParameterAndReturnTypeAnnotation.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(7)]
rebuilt        : SymbolId(3): [ReferenceId(4)]
Symbol reference IDs mismatch for "Line":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(4), ReferenceId(9)]
rebuilt        : SymbolId(4): [ReferenceId(8), ReferenceId(9)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithInaccessibleTypesInParameterTypeAnnotation.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "Line":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(4), ReferenceId(7)]
rebuilt        : SymbolId(4): [ReferenceId(6), ReferenceId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportFunctionWithInaccessibleTypesInReturnTypeAnnotation.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(7)]
rebuilt        : SymbolId(3): [ReferenceId(4)]
Symbol reference IDs mismatch for "Line":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(4)]
rebuilt        : SymbolId(4): [ReferenceId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithAccessibleTypesInTypeParameterConstraintsClassHeritageListMemberTypeAnnotations.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithInaccessibleTypeInIndexerTypeAnnotations.ts
Bindings mismatch:
after transform: ScopeId(0): ["A"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportInterfaceWithInaccessibleTypeInTypeParameterConstraint.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportModuleWithAccessibleTypesOnItsExportedMembers.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInMemberTypeAnnotations.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportObjectLiteralAndObjectTypeLiteralWithAccessibleTypesInNestedMemberTypeAnnotations.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableOfGenericTypeWithInaccessibleTypeAsTypeArgument.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableWithAccessibleTypeInTypeAnnotation.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/exportDeclarations/ExportVariableWithInaccessibleTypeInTypeAnnotation.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/importDeclarations/exportImportAlias.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/importDeclarations/importAliasIdentifiers.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(5): ["_clodule"]
rebuilt        : ScopeId(6): ["Point", "_clodule"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(6): []
Bindings mismatch:
after transform: ScopeId(8): ["_fundule"]
rebuilt        : ScopeId(8): ["Point", "_fundule"]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(8): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(8): [ScopeId(9)]
rebuilt        : ScopeId(8): []
Symbol flags mismatch for "moduleA":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "moduleA":
after transform: SymbolId(0): Span { start: 7, end: 14 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "moduleA":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(13), ReferenceId(14)]
rebuilt        : SymbolId(1): [ReferenceId(5), ReferenceId(6)]
Symbol flags mismatch for "clodule":
after transform: SymbolId(6): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(7): SymbolFlags(Class)
Symbol reference IDs mismatch for "clodule":
after transform: SymbolId(6): [ReferenceId(4), ReferenceId(6), ReferenceId(15), ReferenceId(16)]
rebuilt        : SymbolId(7): [ReferenceId(8), ReferenceId(9)]
Symbol redeclarations mismatch for "clodule":
after transform: SymbolId(6): [Span { start: 219, end: 226 }, Span { start: 257, end: 264 }]
rebuilt        : SymbolId(7): []
Symbol flags mismatch for "Point":
after transform: SymbolId(7): SymbolFlags(FunctionScopedVariable | Interface)
rebuilt        : SymbolId(9): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Point":
after transform: SymbolId(7): Span { start: 288, end: 293 }
rebuilt        : SymbolId(9): Span { start: 340, end: 352 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(7): [ReferenceId(3)]
rebuilt        : SymbolId(9): []
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(7): [Span { start: 288, end: 293 }, Span { start: 340, end: 352 }]
rebuilt        : SymbolId(9): []
Symbol flags mismatch for "fundule":
after transform: SymbolId(9): SymbolFlags(Function | ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(Function)
Symbol reference IDs mismatch for "fundule":
after transform: SymbolId(9): [ReferenceId(8), ReferenceId(10), ReferenceId(17), ReferenceId(18)]
rebuilt        : SymbolId(10): [ReferenceId(10), ReferenceId(11)]
Symbol redeclarations mismatch for "fundule":
after transform: SymbolId(9): [Span { start: 490, end: 497 }, Span { start: 539, end: 546 }]
rebuilt        : SymbolId(10): []
Symbol flags mismatch for "Point":
after transform: SymbolId(10): SymbolFlags(FunctionScopedVariable | Interface)
rebuilt        : SymbolId(12): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Point":
after transform: SymbolId(10): Span { start: 570, end: 575 }
rebuilt        : SymbolId(12): Span { start: 622, end: 634 }
Symbol reference IDs mismatch for "Point":
after transform: SymbolId(10): [ReferenceId(7)]
rebuilt        : SymbolId(12): []
Symbol redeclarations mismatch for "Point":
after transform: SymbolId(10): [Span { start: 570, end: 575 }, Span { start: 622, end: 634 }]
rebuilt        : SymbolId(12): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleBody/moduleWithStatementsOfEveryKind.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/asiPreventsParsingAsNamespace03.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "container":
after transform: SymbolId(2): SymbolFlags(ValueModule)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "container":
after transform: SymbolId(2): Span { start: 49, end: 58 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/asiPreventsParsingAsNamespace05.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/instantiatedModule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/nestedModules.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/nonInstantiatedModule.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/internalModules/moduleDeclarations/reExportAliasMakesInstantiated.ts
Bindings mismatch:
after transform: ScopeId(0): ["mod1", "mod2", "pack1", "pack2", "test1", "test2"]
rebuilt        : ScopeId(0): ["test1", "test2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "pack2":
after transform: SymbolId(2) "pack2"
rebuilt        : <None>
Reference symbol mismatch for "mod2":
after transform: SymbolId(7) "mod2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["mod1"]
rebuilt        : ["mod2", "pack2"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/declarations/jsDeclarationsClassImplementsGenericsSerialization.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Uint8Array"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag16.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag18.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag19.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag20.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag7.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/importTag9.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocLinkTag9.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocTwoLineTypedef.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/jsdocTypeTag.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Function", "Promise"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/seeTag1.ts
Bindings mismatch:
after transform: ScopeId(0): ["NS", "a", "b", "c"]
rebuilt        : ScopeId(0): ["a", "b", "c"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/tsNoCheckForTypescript.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/tsNoCheckForTypescriptComments1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/tsNoCheckForTypescriptComments2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsdoc/typeParameterExtendsUnionConstraintDistributed.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty1.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty10.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Button", "JSX", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
rebuilt        : ScopeId(0): ["Button", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty11.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Button", "JSX", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
rebuilt        : ScopeId(0): ["Button", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "k1", "k2", "k3", "k4"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty12.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(5)]
Symbol reference IDs mismatch for "Button":
after transform: SymbolId(2): [ReferenceId(0)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty16.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "Test", "_Fragment", "_jsx", "_jsxFileName", "_jsxs"]
rebuilt        : ScopeId(0): ["Test", "_Fragment", "_jsx", "_jsxFileName", "_jsxs"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "Foo":
after transform: SymbolId(4) "Foo"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(4) "Foo"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(4) "Foo"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(4) "Foo"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["JSX"]
rebuilt        : ["Foo"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty3.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty6.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxChildrenProperty8.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxIntersectionElementPropsType.tsx
Bindings mismatch:
after transform: ScopeId(0): ["C", "Component", "JSX", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "x", "y"]
rebuilt        : ScopeId(0): ["C", "Component", "_defineProperty", "_jsxFileName", "_reactJsxRuntime", "x", "y"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Symbol flags mismatch for "Component":
after transform: SymbolId(2): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Unresolved references mismatch:
after transform: ["Readonly", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxSubtleSkipContextSensitiveBug.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(6)]
Unresolved references mismatch:
after transform: ["Exclude", "Promise", "arguments"]
rebuilt        : ["arguments"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/checkJsxUnionSFXContextualTypeInferredCorrectly.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/inline/inlineJsxAndJsxFragPragmaOverridesCompilerOptions.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Fragment", "_jsxFileName", "createElement"]
rebuilt        : ScopeId(0): ["_jsxFileName"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/inline/inlineJsxFactoryOverridesCompilerOption.tsx
Bindings mismatch:
after transform: ScopeId(0): ["_jsxFileName", "p"]
rebuilt        : ScopeId(0): ["_jsxFileName"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/jsxParsingError4.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName", "a", "b"]
rebuilt        : ScopeId(0): ["_jsxFileName", "a", "b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/jsxReactTestSuite.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Child", "Component", "Composite", "Composite2", "Namespace", "React", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "bar", "foo", "hasOwnProperty", "x", "y", "z"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
Symbol flags mismatch for "x":
after transform: SymbolId(9): SymbolFlags(FunctionScopedVariable | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "x":
after transform: SymbolId(9): Span { start: 231, end: 236 }
rebuilt        : SymbolId(3): Span { start: 537, end: 538 }
Symbol redeclarations mismatch for "x":
after transform: SymbolId(9): [Span { start: 231, end: 236 }, Span { start: 537, end: 538 }]
rebuilt        : SymbolId(3): []
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "foo":
after transform: SymbolId(6) "foo"
rebuilt        : <None>
Reference symbol mismatch for "bar":
after transform: SymbolId(7) "bar"
rebuilt        : <None>
Reference symbol mismatch for "Composite":
after transform: SymbolId(2) "Composite"
rebuilt        : <None>
Reference symbol mismatch for "Composite":
after transform: SymbolId(2) "Composite"
rebuilt        : <None>
Reference symbol mismatch for "Composite2":
after transform: SymbolId(3) "Composite2"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Namespace":
after transform: SymbolId(5) "Namespace"
rebuilt        : <None>
Reference symbol mismatch for "Namespace":
after transform: SymbolId(5) "Namespace"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "y":
after transform: SymbolId(8) "y"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "y":
after transform: SymbolId(8) "y"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "z":
after transform: SymbolId(10) "z"
rebuilt        : <None>
Reference symbol mismatch for "z":
after transform: SymbolId(10) "z"
rebuilt        : <None>
Reference symbol mismatch for "Child":
after transform: SymbolId(4) "Child"
rebuilt        : <None>
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : <None>
Reference symbol mismatch for "z":
after transform: SymbolId(10) "z"
rebuilt        : <None>
Reference symbol mismatch for "z":
after transform: SymbolId(10) "z"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["Child", "Component", "Composite", "Composite2", "Namespace", "bar", "foo", "require", "y", "z"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/jsxs/jsxJsxsCjsTransformNestedSelfClosingChild.tsx
Bindings mismatch:
after transform: ScopeId(0): ["React", "_jsx", "_jsxFileName", "_jsxs"]
rebuilt        : ScopeId(0): ["_jsx", "_jsxFileName", "_jsxs"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution16.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxAttributeResolution8.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxCorrectlyParseLessThanComparison1.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "ShortDetails", "_jsxFileName"]
rebuilt        : ScopeId(0): ["ShortDetails", "_jsxFileName"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDefaultAttributesResolution1.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDefaultAttributesResolution2.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDynamicTagName4.tsx
Bindings mismatch:
after transform: ScopeId(0): ["CustomTag", "JSX", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["CustomTag", "_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxDynamicTagName6.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "foo", "t"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "foo", "t"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Dotted", "JSX", "Other", "_jsxFileName", "_reactJsxRuntime", "a", "b", "d", "e", "foundFirst"]
rebuilt        : ScopeId(0): ["Dotted", "Other", "_jsxFileName", "_reactJsxRuntime", "a", "b", "d", "e", "foundFirst"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol flags mismatch for "Dotted":
after transform: SymbolId(4): SymbolFlags(ValueModule)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Dotted":
after transform: SymbolId(4): Span { start: 161, end: 167 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution13.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "obj1"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "obj1"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution14.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "obj1"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "obj1"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution17.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution19.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "MyClass"]
rebuilt        : ScopeId(0): ["MyClass"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxElementResolution5.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmit1.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "SomeClass", "_jsxFileName", "_reactJsxRuntime", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
rebuilt        : ScopeId(0): ["SomeClass", "_jsxFileName", "_reactJsxRuntime", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmit2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_objectSpread", "_reactJsxRuntime", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxEmitSpreadAttribute.ts
Bindings mismatch:
after transform: ScopeId(0): ["React", "T1", "T10", "T11", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "__proto__", "_jsxFileName", "_objectSpread"]
rebuilt        : ScopeId(0): ["T1", "T10", "T11", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "_jsxFileName", "_objectSpread"]
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "__proto__":
after transform: SymbolId(32) "__proto__"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(0) "React"
rebuilt        : <None>
Reference symbol mismatch for "__proto__":
after transform: SymbolId(32) "__proto__"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React", "__proto__"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxExternalModuleEmit2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "Main", "React", "_jsxFileName", "_objectSpread"]
rebuilt        : ScopeId(0): ["Main", "_jsxFileName", "_objectSpread"]
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(1) "Foo"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(1) "Foo"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Foo", "React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxFragmentPreserveEmit.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxFragmentReactEmit.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName"]
rebuilt        : ScopeId(0): ["_jsxFileName"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType7.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(11), SymbolId(12)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType8.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(11), SymbolId(12)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxGenericAttributesType9.tsx
Symbol reference IDs mismatch for "React":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2)]
rebuilt        : SymbolId(3): [ReferenceId(1)]
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxInArrowFunction.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedAttributeName1.tsx
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedAttributeName2.tsx
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxNamespacedTagName1.tsx
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.
Namespace tags are not supported by default. React's JSX doesn't support namespace tags. You can set `throwIfNamespace: false` to bypass this warning.

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxOpeningClosingNames.tsx
Bindings mismatch:
after transform: ScopeId(0): ["A", "JSX", "_jsxFileName", "_reactJsxRuntime"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "A":
after transform: SymbolId(2) "A"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["A", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxParseTests1.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "x"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxParseTests2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "_jsxFileName", "_reactJsxRuntime", "x"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_reactJsxRuntime", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxPreserveEmit1.tsx
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxPreserveEmit3.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactComponentWithDefaultTypeParameter1.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "MyComp":
after transform: SymbolId(2): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactComponentWithDefaultTypeParameter2.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "MyComp":
after transform: SymbolId(2): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit1.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "SomeClass", "_jsxFileName", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
rebuilt        : ScopeId(0): ["SomeClass", "_jsxFileName", "openClosed1", "openClosed2", "openClosed3", "openClosed4", "openClosed5", "p", "selfClosed1", "selfClosed2", "selfClosed3", "selfClosed4", "selfClosed5", "selfClosed6", "selfClosed7", "whitespace1", "whitespace2", "whitespace3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName", "_objectSpread", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
rebuilt        : ScopeId(0): ["_jsxFileName", "_objectSpread", "p1", "p2", "p3", "spreads1", "spreads2", "spreads3", "spreads4", "spreads5"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit3.tsx
Bindings mismatch:
after transform: ScopeId(0): ["Bar", "Foo", "JSX", "React", "_jsxFileName", "baz"]
rebuilt        : ScopeId(0): ["_jsxFileName"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Foo":
after transform: SymbolId(3) "Foo"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Bar":
after transform: SymbolId(4) "Bar"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Bar":
after transform: SymbolId(4) "Bar"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Bar":
after transform: SymbolId(4) "Bar"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(2) "React"
rebuilt        : <None>
Reference symbol mismatch for "Bar":
after transform: SymbolId(4) "Bar"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["Bar", "Foo", "React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit5.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmit6.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitEntities.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName"]
rebuilt        : ScopeId(0): ["_jsxFileName"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitNesting.tsx
Bindings mismatch:
after transform: ScopeId(0): ["_jsxFileName", "ctrl", "model", "render", "vdom"]
rebuilt        : ScopeId(0): ["_jsxFileName", "render"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitSpreadAttribute.ts
Bindings mismatch:
after transform: ScopeId(0): ["T1", "T10", "T11", "T12", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "__proto__", "_jsx", "_jsxFileName", "_objectSpread"]
rebuilt        : ScopeId(0): ["T1", "T10", "T11", "T12", "T2", "T3", "T4", "T5", "T6", "T7", "T8", "T9", "_jsx", "_jsxFileName", "_objectSpread"]
Reference symbol mismatch for "__proto__":
after transform: SymbolId(36) "__proto__"
rebuilt        : <None>
Reference symbol mismatch for "__proto__":
after transform: SymbolId(36) "__proto__"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["__proto__"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitWhitespace.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName", "p"]
rebuilt        : ScopeId(0): ["_jsxFileName", "p"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxReactEmitWhitespace2.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "_jsxFileName"]
rebuilt        : ScopeId(0): ["_jsxFileName"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Reference symbol mismatch for "React":
after transform: SymbolId(3) "React"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["React"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution11.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution13.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution15.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution3.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution7.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution8.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadAttributesResolution9.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadChildren.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "Todo", "TodoList", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
rebuilt        : ScopeId(0): ["Todo", "TodoList", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxSpreadChildrenInvalidType.tsx
Bindings mismatch:
after transform: ScopeId(0): ["JSX", "React", "Todo", "TodoList", "TodoListNoError", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
rebuilt        : ScopeId(0): ["Todo", "TodoList", "TodoListNoError", "_jsxFileName", "_objectSpread", "_reactJsxRuntime", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload2.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(16), SymbolId(17), SymbolId(18), SymbolId(19)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(16), SymbolId(17), SymbolId(18)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Reference symbol mismatch for "OneThing":
after transform: SymbolId(1) "OneThing"
rebuilt        : SymbolId(3) "OneThing"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload3.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(16), SymbolId(17), SymbolId(18), SymbolId(19), SymbolId(20), SymbolId(21)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(18), SymbolId(19), SymbolId(20)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "ZeroThingOrTwoThing":
after transform: SymbolId(1) "ZeroThingOrTwoThing"
rebuilt        : SymbolId(3) "ZeroThingOrTwoThing"
Reference symbol mismatch for "ZeroThingOrTwoThing":
after transform: SymbolId(1) "ZeroThingOrTwoThing"
rebuilt        : SymbolId(3) "ZeroThingOrTwoThing"
Reference symbol mismatch for "ZeroThingOrTwoThing":
after transform: SymbolId(1) "ZeroThingOrTwoThing"
rebuilt        : SymbolId(3) "ZeroThingOrTwoThing"
Reference symbol mismatch for "ZeroThingOrTwoThing":
after transform: SymbolId(1) "ZeroThingOrTwoThing"
rebuilt        : SymbolId(3) "ZeroThingOrTwoThing"
Reference symbol mismatch for "ZeroThingOrTwoThing":
after transform: SymbolId(1) "ZeroThingOrTwoThing"
rebuilt        : SymbolId(3) "ZeroThingOrTwoThing"
Reference symbol mismatch for "ThreeThing":
after transform: SymbolId(10) "ThreeThing"
rebuilt        : SymbolId(12) "ThreeThing"
Reference symbol mismatch for "ThreeThing":
after transform: SymbolId(10) "ThreeThing"
rebuilt        : SymbolId(12) "ThreeThing"
Reference symbol mismatch for "ThreeThing":
after transform: SymbolId(10) "ThreeThing"
rebuilt        : SymbolId(12) "ThreeThing"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentOverload6.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Symbol span mismatch for "MainButton":
after transform: SymbolId(8): Span { start: 489, end: 499 }
rebuilt        : SymbolId(6): Span { start: 686, end: 696 }
Symbol redeclarations mismatch for "MainButton":
after transform: SymbolId(8): [Span { start: 489, end: 499 }, Span { start: 556, end: 566 }, Span { start: 619, end: 629 }, Span { start: 686, end: 696 }]
rebuilt        : SymbolId(6): []
Unresolved references mismatch:
after transform: ["JSX", "console"]
rebuilt        : ["console"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentWithDefaultTypeParameter1.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments1.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(5), SymbolId(12), SymbolId(15), SymbolId(18), SymbolId(23), SymbolId(26), SymbolId(28), SymbolId(29), SymbolId(30)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(10), SymbolId(12), SymbolId(15), SymbolId(18), SymbolId(20)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(4): []
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8)]
rebuilt        : ScopeId(5): []
Reference symbol mismatch for "ComponentWithTwoAttributes":
after transform: SymbolId(1) "ComponentWithTwoAttributes"
rebuilt        : SymbolId(3) "ComponentWithTwoAttributes"
Reference symbol mismatch for "ComponentWithTwoAttributes":
after transform: SymbolId(1) "ComponentWithTwoAttributes"
rebuilt        : SymbolId(3) "ComponentWithTwoAttributes"
Reference symbol mismatch for "Link":
after transform: SymbolId(12) "Link"
rebuilt        : SymbolId(10) "Link"
Reference symbol mismatch for "Link":
after transform: SymbolId(12) "Link"
rebuilt        : SymbolId(10) "Link"
Reference symbol mismatch for "InferParamComponent":
after transform: SymbolId(23) "InferParamComponent"
rebuilt        : SymbolId(18) "InferParamComponent"
Unresolved references mismatch:
after transform: ["Array", "JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments3.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(8), SymbolId(20), SymbolId(25), SymbolId(31), SymbolId(32), SymbolId(33)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(6), SymbolId(16), SymbolId(19)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "OverloadComponent":
after transform: SymbolId(1) "OverloadComponent"
rebuilt        : SymbolId(3) "OverloadComponent"
Reference symbol mismatch for "Link":
after transform: SymbolId(20) "Link"
rebuilt        : SymbolId(16) "Link"
Reference symbol mismatch for "Link":
after transform: SymbolId(20) "Link"
rebuilt        : SymbolId(16) "Link"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxStatelessFunctionComponentsWithTypeArguments5.tsx
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(4), SymbolId(9), SymbolId(12), SymbolId(15), SymbolId(22), SymbolId(23), SymbolId(24)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(9), SymbolId(11), SymbolId(13)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Reference symbol mismatch for "Component":
after transform: SymbolId(1) "Component"
rebuilt        : SymbolId(3) "Component"
Reference symbol mismatch for "ComponentSpecific":
after transform: SymbolId(9) "ComponentSpecific"
rebuilt        : SymbolId(9) "ComponentSpecific"
Reference symbol mismatch for "ComponentSpecific1":
after transform: SymbolId(12) "ComponentSpecific1"
rebuilt        : SymbolId(11) "ComponentSpecific1"
Reference symbol mismatch for "ComponentSpecific":
after transform: SymbolId(9) "ComponentSpecific"
rebuilt        : SymbolId(9) "ComponentSpecific"
Reference symbol mismatch for "ComponentSpecific":
after transform: SymbolId(9) "ComponentSpecific"
rebuilt        : SymbolId(9) "ComponentSpecific"
Unresolved references mismatch:
after transform: ["JSX", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxTypeArgumentsJsxPreserveOutput.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/jsx/tsxUnionTypeComponent1.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "React":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(6), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17)]
rebuilt        : SymbolId(1): [ReferenceId(1), ReferenceId(2), ReferenceId(5), ReferenceId(7), ReferenceId(10), ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/allowImportingTypesDtsExtension.ts
Bindings mismatch:
after transform: ScopeId(0): ["User", "getUser", "user"]
rebuilt        : ScopeId(0): ["getUser", "user"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/bundler/bundlerDirectoryModule.ts
Bindings mismatch:
after transform: ScopeId(0): ["test"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/bundler/bundlerImportESM.ts
Bindings mismatch:
after transform: ScopeId(0): ["esm"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/customConditions.ts
Bindings mismatch:
after transform: ScopeId(0): ["_"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/extensionLoadingPriority.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "dir"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/resolutionModeImportType1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/resolutionModeTypeOnlyImport1.ts
Bindings mismatch:
after transform: ScopeId(0): ["Default", "Import", "ImportRelative", "Require", "RequireRelative"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/resolvesWithoutExportsDiagnostic1.ts
Bindings mismatch:
after transform: ScopeId(0): ["bar", "foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/scopedPackages.ts
Bindings mismatch:
after transform: ScopeId(0): ["x", "y", "z"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/scopedPackagesClassic.ts
Bindings mismatch:
after transform: ScopeId(0): ["x"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/selfNameModuleAugmentation.ts
Bindings mismatch:
after transform: ScopeId(0): ["simple"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/typesVersions.emptyTypes.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/moduleResolution/typesVersions.justIndex.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/esmModuleExports2.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo", "Foo2", "Foo3", "Oops"]
rebuilt        : ScopeId(0): ["Foo", "Foo2", "Foo3"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesImportAttributesTypeModeDeclarationEmit.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesImportTypeModeDeclarationEmit1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["RequireInterface"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["ImportInterface"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["RequireInterface"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["ImportInterface"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["ImportInterface", "RequireInterface"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit6.ts
Symbol reference IDs mismatch for "obj":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/node/nodeModulesTripleSlashReferenceModeDeclarationEmit7.ts
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFileForHtmlFileWithinDeclarationFile.ts
Unresolved references mismatch:
after transform: ["Document", "Element", "HTMLElement"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/nonjsExtensions/declarationFileForHtmlImport.ts
Unresolved references mismatch:
after transform: ["Document", "Element", "HTMLElement"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/override/override10.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(2): [ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ClassDeclarations/parserClassDeclaration16.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ClassDeclarations/parserClassDeclaration17.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Enumerator":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ClassDeclarations/parserClassDeclaration19.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ClassDeclarations/parserClassDeclaration20.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum1.ts
Bindings mismatch:
after transform: ScopeId(1): ["IsIndexer", "IsNumberIndexer", "IsStringIndexer", "None", "SignatureFlags"]
rebuilt        : ScopeId(1): ["SignatureFlags"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "SignatureFlags":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum2.ts
Bindings mismatch:
after transform: ScopeId(1): ["IsIndexer", "IsNumberIndexer", "IsStringIndexer", "None", "SignatureFlags"]
rebuilt        : ScopeId(1): ["SignatureFlags"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "SignatureFlags":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum3.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "SignatureFlags":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnum6.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration1.ts
Bindings mismatch:
after transform: ScopeId(1): ["Bar", "E", "Foo"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration3.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration5.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "D", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserEnumDeclaration6.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "D", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserInterfaceKeywordInEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["Bar", "interface"]
rebuilt        : ScopeId(1): ["Bar"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Bar":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/EnumDeclarations/parserInterfaceKeywordInEnum1.ts
Bindings mismatch:
after transform: ScopeId(1): ["Bar", "interface"]
rebuilt        : ScopeId(1): ["Bar"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Bar":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ErrorRecovery/IncompleteMemberVariables/parserErrorRecovery_IncompleteMemberVariable1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Shapes":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Shapes":
after transform: SymbolId(1): Span { start: 75, end: 81 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ErrorRecovery/parserModifierOnPropertySignature2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/FunctionDeclarations/parserFunctionDeclaration8.ts
Bindings mismatch:
after transform: ScopeId(0): ["M"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration7.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/InterfaceDeclarations/parserInterfaceDeclaration9.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature10.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature11.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature12.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature7.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/MethodSignatures/parserMethodSignature9.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModule1.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration11.ts
Bindings mismatch:
after transform: ScopeId(0): ["string", "x"]
rebuilt        : ScopeId(0): ["x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "string":
after transform: SymbolId(0) "string"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["string"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration12.ts
Bindings mismatch:
after transform: ScopeId(0): ["A"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration4.ts
Bindings mismatch:
after transform: ScopeId(0): ["M"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration6.ts
Bindings mismatch:
after transform: ScopeId(0): ["number"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration7.ts
Bindings mismatch:
after transform: ScopeId(0): ["number"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration8.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/ModuleDeclarations/parserModuleDeclaration9.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature10.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature11.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature12.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature6.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature7.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/PropertySignatures/parserPropertySignature9.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Protected/Protected8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/RegressionTests/parser643728.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/RegressionTests/parser645484.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/RegularExpressions/parserRegularExpression6.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/Symbols/parserES5SymbolIndexer1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserExportAsFunctionIdentifier.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserNotRegex2.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "C", "x"]
rebuilt        : ScopeId(0): ["x"]
Reference symbol mismatch for "A":
after transform: SymbolId(0) "A"
rebuilt        : <None>
Reference symbol mismatch for "B":
after transform: SymbolId(1) "B"
rebuilt        : <None>
Reference symbol mismatch for "C":
after transform: SymbolId(2) "C"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["A", "B", "C"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserOptionalTypeMembers1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript5/parserOverloadOnConstants1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["HTMLCanvasElement", "HTMLDivElement", "HTMLElement", "HTMLSpanElement"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolIndexer1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty3.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty4.ts
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/parser/ecmascript6/Symbols/parserSymbolProperty9.ts
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/salsa/inferingFromAny.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(5), SymbolId(8), SymbolId(12), SymbolId(15), SymbolId(18), SymbolId(21), SymbolId(24), SymbolId(27), SymbolId(30), SymbolId(33), SymbolId(36), SymbolId(40), SymbolId(44), SymbolId(50), SymbolId(53), SymbolId(56), SymbolId(61), SymbolId(66)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(10), SymbolId(12), SymbolId(14), SymbolId(16), SymbolId(18), SymbolId(20), SymbolId(22), SymbolId(24), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32), SymbolId(34), SymbolId(36), SymbolId(38)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(23), ScopeId(25)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19)]
Unresolved references mismatch:
after transform: ["Partial"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/salsa/propertyAssignmentUseParentType1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/salsa/requireAssertsFromTypescript.ts
Unresolved references mismatch:
after transform: ["Error"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/salsa/sourceFileMergeWithFunction.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/salsa/typeFromPropertyAssignment30.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/scanner/ecmascript5/scannerEnum1.ts
Bindings mismatch:
after transform: ScopeId(1): ["CodeGenTarget", "ES3", "ES5"]
rebuilt        : ScopeId(1): ["CodeGenTarget"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "CodeGenTarget":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/everyTypeWithAnnotationAndInitializer.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(10), ScopeId(11)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(21)]
rebuilt        : SymbolId(1): [ReferenceId(17), ReferenceId(18), ReferenceId(20)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(4), ReferenceId(5), ReferenceId(18), ReferenceId(19)]
rebuilt        : SymbolId(2): [ReferenceId(19)]
Symbol reference IDs mismatch for "F":
after transform: SymbolId(4): [ReferenceId(22), ReferenceId(23), ReferenceId(24), ReferenceId(25)]
rebuilt        : SymbolId(3): [ReferenceId(21), ReferenceId(22)]
Symbol flags mismatch for "M":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(6): Span { start: 198, end: 199 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "M":
after transform: SymbolId(6): [ReferenceId(26), ReferenceId(27), ReferenceId(28), ReferenceId(29), ReferenceId(30), ReferenceId(35), ReferenceId(36)]
rebuilt        : SymbolId(5): [ReferenceId(11), ReferenceId(12), ReferenceId(23), ReferenceId(24)]
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(10), ReferenceId(11)]
rebuilt        : [ReferenceId(14)]
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(8), ReferenceId(9)]
rebuilt        : [ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/everyTypeWithInitializer.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(10)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(4), ReferenceId(5), ReferenceId(13)]
rebuilt        : SymbolId(2): [ReferenceId(18)]
Symbol flags mismatch for "M":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(6): Span { start: 198, end: 199 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/awaitUsingDeclarations.15.ts
Bindings mismatch:
after transform: ScopeId(1): ["_", "_usingCtx"]
rebuilt        : ScopeId(3): ["_usingCtx"]
Bindings mismatch:
after transform: ScopeId(3): []
rebuilt        : ScopeId(4): ["_"]
Symbol scope ID mismatch for "_":
after transform: SymbolId(1): ScopeId(1)
rebuilt        : SymbolId(5): ScopeId(4)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/awaitUsingDeclarationsInForAwaitOf.ts
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(2), ScopeId(15), ScopeId(16), ScopeId(18)]
rebuilt        : ScopeId(5): [ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12)]
Scope parent mismatch:
after transform: ScopeId(4): Some(ScopeId(2))
rebuilt        : ScopeId(8): Some(ScopeId(5))
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(4)]
rebuilt        : ScopeId(9): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C3", "N", "_af", "_ag", "_asyncToGenerator", "_awaitAsyncGenerator", "_defineProperty", "_usingCtx2", "_usingCtx20", "_usingCtx23", "_usingCtx24", "_usingCtx25", "_usingCtx26", "_usingCtx27", "_usingCtx28", "_usingCtx29", "_usingCtx30", "_usingCtx6", "_wrapAsyncGenerator", "a", "af", "ag", "d1", "f", "g"]
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "N", "_af", "_ag", "_asyncToGenerator", "_awaitAsyncGenerator", "_defineProperty", "_usingCtx2", "_usingCtx20", "_usingCtx21", "_usingCtx22", "_usingCtx23", "_usingCtx24", "_usingCtx25", "_usingCtx26", "_usingCtx27", "_usingCtx28", "_usingCtx29", "_usingCtx30", "_usingCtx6", "_wrapAsyncGenerator", "a", "af", "ag", "d1", "f", "g"]
Bindings mismatch:
after transform: ScopeId(2): ["_usingCtx", "d2"]
rebuilt        : ScopeId(1): ["_usingCtx"]
Bindings mismatch:
after transform: ScopeId(71): []
rebuilt        : ScopeId(2): ["d2"]
Bindings mismatch:
after transform: ScopeId(4): ["_usingCtx3", "d3"]
rebuilt        : ScopeId(9): ["_usingCtx3"]
Bindings mismatch:
after transform: ScopeId(75): []
rebuilt        : ScopeId(10): ["d3"]
Bindings mismatch:
after transform: ScopeId(6): ["_usingCtx4", "d4"]
rebuilt        : ScopeId(15): ["_usingCtx4"]
Bindings mismatch:
after transform: ScopeId(81): []
rebuilt        : ScopeId(16): ["d4"]
Bindings mismatch:
after transform: ScopeId(8): ["_usingCtx5", "d5"]
rebuilt        : ScopeId(23): ["_usingCtx5"]
Bindings mismatch:
after transform: ScopeId(85): []
rebuilt        : ScopeId(24): ["d5"]
Bindings mismatch:
after transform: ScopeId(70): ["_usingCtx21", "_usingCtx22"]
rebuilt        : ScopeId(29): []
Bindings mismatch:
after transform: ScopeId(10): ["_usingCtx7", "d6"]
rebuilt        : ScopeId(31): ["_usingCtx7"]
Bindings mismatch:
after transform: ScopeId(94): []
rebuilt        : ScopeId(32): ["d6"]
Bindings mismatch:
after transform: ScopeId(15): ["_usingCtx8", "d8"]
rebuilt        : ScopeId(44): ["_usingCtx8"]
Bindings mismatch:
after transform: ScopeId(98): []
rebuilt        : ScopeId(45): ["d8"]
Bindings mismatch:
after transform: ScopeId(13): ["_usingCtx9", "d7"]
rebuilt        : ScopeId(46): ["_usingCtx9"]
Bindings mismatch:
after transform: ScopeId(102): []
rebuilt        : ScopeId(47): ["d7"]
Bindings mismatch:
after transform: ScopeId(19): ["_usingCtx11", "d10"]
rebuilt        : ScopeId(56): ["_usingCtx11"]
Bindings mismatch:
after transform: ScopeId(110): []
rebuilt        : ScopeId(57): ["d10"]
Bindings mismatch:
after transform: ScopeId(21): ["_usingCtx12", "d11"]
rebuilt        : ScopeId(62): ["_usingCtx12"]
Bindings mismatch:
after transform: ScopeId(114): []
rebuilt        : ScopeId(63): ["d11"]
Bindings mismatch:
after transform: ScopeId(23): ["_usingCtx13", "d12", "v"]
rebuilt        : ScopeId(68): ["_usingCtx13", "v"]
Bindings mismatch:
after transform: ScopeId(118): []
rebuilt        : ScopeId(69): ["d12"]
Bindings mismatch:
after transform: ScopeId(25): ["_usingCtx14", "d13"]
rebuilt        : ScopeId(75): ["_usingCtx14"]
Bindings mismatch:
after transform: ScopeId(122): []
rebuilt        : ScopeId(76): ["d13"]
Bindings mismatch:
after transform: ScopeId(27): ["_usingCtx15", "d14"]
rebuilt        : ScopeId(81): ["_usingCtx15"]
Bindings mismatch:
after transform: ScopeId(127): []
rebuilt        : ScopeId(82): ["d14"]
Bindings mismatch:
after transform: ScopeId(29): ["_usingCtx16", "d15"]
rebuilt        : ScopeId(88): ["_usingCtx16"]
Bindings mismatch:
after transform: ScopeId(131): []
rebuilt        : ScopeId(89): ["d15"]
Bindings mismatch:
after transform: ScopeId(32): ["_usingCtx17", "d16"]
rebuilt        : ScopeId(95): ["_usingCtx17"]
Bindings mismatch:
after transform: ScopeId(136): []
rebuilt        : ScopeId(96): ["d16"]
Bindings mismatch:
after transform: ScopeId(35): ["_usingCtx18", "d17"]
rebuilt        : ScopeId(102): ["_usingCtx18"]
Bindings mismatch:
after transform: ScopeId(140): []
rebuilt        : ScopeId(103): ["d17"]
Bindings mismatch:
after transform: ScopeId(37): ["_N", "_usingCtx19", "d18"]
rebuilt        : ScopeId(108): ["_N", "_usingCtx19"]
Bindings mismatch:
after transform: ScopeId(144): []
rebuilt        : ScopeId(109): ["d18"]
Symbol scope ID mismatch for "d2":
after transform: SymbolId(2): ScopeId(2)
rebuilt        : SymbolId(7): ScopeId(2)
Symbol scope ID mismatch for "d3":
after transform: SymbolId(4): ScopeId(4)
rebuilt        : SymbolId(12): ScopeId(10)
Symbol scope ID mismatch for "d4":
after transform: SymbolId(6): ScopeId(6)
rebuilt        : SymbolId(16): ScopeId(16)
Symbol scope ID mismatch for "d5":
after transform: SymbolId(8): ScopeId(8)
rebuilt        : SymbolId(21): ScopeId(24)
Symbol scope ID mismatch for "d6":
after transform: SymbolId(10): ScopeId(10)
rebuilt        : SymbolId(27): ScopeId(32)
Symbol scope ID mismatch for "d7":
after transform: SymbolId(12): ScopeId(13)
rebuilt        : SymbolId(35): ScopeId(47)
Symbol scope ID mismatch for "d8":
after transform: SymbolId(13): ScopeId(15)
rebuilt        : SymbolId(37): ScopeId(45)
Symbol scope ID mismatch for "d10":
after transform: SymbolId(15): ScopeId(19)
rebuilt        : SymbolId(40): ScopeId(57)
Symbol scope ID mismatch for "d11":
after transform: SymbolId(16): ScopeId(21)
rebuilt        : SymbolId(43): ScopeId(63)
Symbol scope ID mismatch for "d12":
after transform: SymbolId(18): ScopeId(23)
rebuilt        : SymbolId(47): ScopeId(69)
Symbol scope ID mismatch for "d13":
after transform: SymbolId(19): ScopeId(25)
rebuilt        : SymbolId(50): ScopeId(76)
Symbol scope ID mismatch for "d14":
after transform: SymbolId(20): ScopeId(27)
rebuilt        : SymbolId(53): ScopeId(82)
Symbol scope ID mismatch for "d15":
after transform: SymbolId(21): ScopeId(29)
rebuilt        : SymbolId(56): ScopeId(89)
Symbol scope ID mismatch for "d16":
after transform: SymbolId(23): ScopeId(32)
rebuilt        : SymbolId(60): ScopeId(96)
Symbol scope ID mismatch for "d17":
after transform: SymbolId(25): ScopeId(35)
rebuilt        : SymbolId(64): ScopeId(103)
Symbol span mismatch for "N":
after transform: SymbolId(26): Span { start: 1385, end: 1386 }
rebuilt        : SymbolId(66): Span { start: 0, end: 0 }
Symbol scope ID mismatch for "d18":
after transform: SymbolId(27): ScopeId(37)
rebuilt        : SymbolId(69): ScopeId(109)
Symbol scope ID mismatch for "_usingCtx21":
after transform: SymbolId(90): ScopeId(70)
rebuilt        : SymbolId(74): ScopeId(0)
Symbol scope ID mismatch for "_usingCtx22":
after transform: SymbolId(92): ScopeId(70)
rebuilt        : SymbolId(78): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.11.ts
Bindings mismatch:
after transform: ScopeId(3): ["_usingCtx", "x"]
rebuilt        : ScopeId(3): ["_usingCtx"]
Bindings mismatch:
after transform: ScopeId(12): []
rebuilt        : ScopeId(4): ["x"]
Bindings mismatch:
after transform: ScopeId(5): ["_usingCtx3", "x"]
rebuilt        : ScopeId(9): ["_usingCtx3"]
Bindings mismatch:
after transform: ScopeId(16): []
rebuilt        : ScopeId(10): ["x"]
Bindings mismatch:
after transform: ScopeId(7): ["_usingCtx4", "x"]
rebuilt        : ScopeId(15): ["_usingCtx4"]
Bindings mismatch:
after transform: ScopeId(20): []
rebuilt        : ScopeId(16): ["x"]
Bindings mismatch:
after transform: ScopeId(9): ["_usingCtx5", "x", "y"]
rebuilt        : ScopeId(21): ["_usingCtx5", "y"]
Bindings mismatch:
after transform: ScopeId(24): []
rebuilt        : ScopeId(22): ["x"]
Bindings mismatch:
after transform: ScopeId(11): ["_usingCtx6", "x", "y"]
rebuilt        : ScopeId(27): ["_usingCtx6", "y"]
Bindings mismatch:
after transform: ScopeId(28): []
rebuilt        : ScopeId(28): ["x"]
Symbol scope ID mismatch for "x":
after transform: SymbolId(2): ScopeId(3)
rebuilt        : SymbolId(5): ScopeId(4)
Symbol scope ID mismatch for "x":
after transform: SymbolId(4): ScopeId(5)
rebuilt        : SymbolId(9): ScopeId(10)
Symbol scope ID mismatch for "x":
after transform: SymbolId(6): ScopeId(7)
rebuilt        : SymbolId(13): ScopeId(16)
Symbol scope ID mismatch for "x":
after transform: SymbolId(9): ScopeId(9)
rebuilt        : SymbolId(18): ScopeId(22)
Symbol scope ID mismatch for "x":
after transform: SymbolId(12): ScopeId(11)
rebuilt        : SymbolId(23): ScopeId(28)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarations.12.ts
Bindings mismatch:
after transform: ScopeId(4): ["_usingCtx", "d17"]
rebuilt        : ScopeId(4): ["_usingCtx"]
Bindings mismatch:
after transform: ScopeId(6): []
rebuilt        : ScopeId(5): ["d17"]
Symbol scope ID mismatch for "d17":
after transform: SymbolId(2): ScopeId(4)
rebuilt        : SymbolId(5): ScopeId(5)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsDeclarationEmit.2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "r1":
after transform: SymbolId(0): [ReferenceId(1)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "r2":
after transform: SymbolId(2): [ReferenceId(3)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsInForAwaitOf.ts
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(2), ScopeId(14), ScopeId(16)]
rebuilt        : ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10)]
Scope parent mismatch:
after transform: ScopeId(3): Some(ScopeId(2))
rebuilt        : ScopeId(6): Some(ScopeId(5))
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsNamedEvaluationDecoratorsAndClassFields.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C3", "C4", "_Class", "_Class2", "_defineProperty", "_usingCtx", "_usingCtx2", "dec"]
rebuilt        : ScopeId(0): ["C1", "C2", "C3", "C4", "_Class", "_Class2", "_defineProperty", "_usingCtx", "_usingCtx2"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : ["Symbol", "dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.10.ts
Bindings mismatch:
after transform: ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.11.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.12.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 83, end: 84 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.4.ts
Bindings mismatch:
after transform: ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.6.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.7.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.8.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithESClassDecorators.9.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 61, end: 62 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.10.ts
Bindings mismatch:
after transform: ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.11.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.12.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.2.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.3.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Symbol span mismatch for "C":
after transform: SymbolId(2): Span { start: 83, end: 84 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.4.ts
Bindings mismatch:
after transform: ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["_default", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.5.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.6.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "before"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.7.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.8.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/usingDeclarations/usingDeclarationsWithLegacyClassDecorators.9.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after", "dec"]
rebuilt        : ScopeId(0): ["C", "_usingCtx", "_usingCtx2", "after"]
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 61, end: 62 }
rebuilt        : SymbolId(2): Span { start: 0, end: 0 }
Reference symbol mismatch for "dec":
after transform: SymbolId(0) "dec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["dec"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/VariableStatements/validMultipleVariableDeclarations.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6)]
Symbol reference IDs mismatch for "p":
after transform: SymbolId(4): [ReferenceId(6)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "fn":
after transform: SymbolId(5): [ReferenceId(7)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(11): [ReferenceId(9)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/for-await-ofStatements/emitter.forAwait.ts
Bindings mismatch:
after transform: ScopeId(1): ["y"]
rebuilt        : ScopeId(3): ["_didIteratorError", "_iterator", "_iteratorAbruptCompletion", "_iteratorError", "_step", "y"]
Bindings mismatch:
after transform: ScopeId(3): ["_didIteratorError", "_iterator", "_iteratorAbruptCompletion", "_iteratorError", "_step"]
rebuilt        : ScopeId(5): []
Symbol scope ID mismatch for "_iteratorAbruptCompletion":
after transform: SymbolId(6): ScopeId(3)
rebuilt        : SymbolId(6): ScopeId(3)
Symbol scope ID mismatch for "_didIteratorError":
after transform: SymbolId(5): ScopeId(3)
rebuilt        : SymbolId(7): ScopeId(3)
Symbol scope ID mismatch for "_iteratorError":
after transform: SymbolId(7): ScopeId(3)
rebuilt        : SymbolId(8): ScopeId(3)
Symbol scope ID mismatch for "_iterator":
after transform: SymbolId(8): ScopeId(3)
rebuilt        : SymbolId(9): ScopeId(3)
Symbol scope ID mismatch for "_step":
after transform: SymbolId(3): ScopeId(3)
rebuilt        : SymbolId(10): ScopeId(3)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/for-inStatements/for-inStatementsArray.ts
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/forStatements/forStatements.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(26), ScopeId(28), ScopeId(30), ScopeId(32), ScopeId(34), ScopeId(37), ScopeId(40), ScopeId(42), ScopeId(44)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(26), ScopeId(28), ScopeId(30), ScopeId(32), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(41), ScopeId(43), ScopeId(45)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(34): [ScopeId(35), ScopeId(36)]
rebuilt        : ScopeId(36): [ScopeId(37)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(21)]
rebuilt        : SymbolId(1): [ReferenceId(17), ReferenceId(18), ReferenceId(20)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(4), ReferenceId(5), ReferenceId(18), ReferenceId(19)]
rebuilt        : SymbolId(2): [ReferenceId(19)]
Symbol reference IDs mismatch for "F":
after transform: SymbolId(4): [ReferenceId(22), ReferenceId(23), ReferenceId(24), ReferenceId(25)]
rebuilt        : SymbolId(3): [ReferenceId(21), ReferenceId(22)]
Symbol flags mismatch for "M":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(6): Span { start: 198, end: 199 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "M":
after transform: SymbolId(6): [ReferenceId(26), ReferenceId(27), ReferenceId(28), ReferenceId(29), ReferenceId(30), ReferenceId(35), ReferenceId(36)]
rebuilt        : SymbolId(5): [ReferenceId(11), ReferenceId(12), ReferenceId(23), ReferenceId(24)]
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(10), ReferenceId(11)]
rebuilt        : [ReferenceId(14)]
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(8), ReferenceId(9)]
rebuilt        : [ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/forStatements/forStatementsMultipleValidDecl.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(21), ScopeId(23), ScopeId(25), ScopeId(28), ScopeId(31), ScopeId(34), ScopeId(37), ScopeId(40), ScopeId(42), ScopeId(44), ScopeId(46), ScopeId(48), ScopeId(50), ScopeId(52)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(27), ScopeId(30), ScopeId(32), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(40), ScopeId(42), ScopeId(44), ScopeId(46), ScopeId(48)]
Scope children mismatch:
after transform: ScopeId(31): [ScopeId(32), ScopeId(33)]
rebuilt        : ScopeId(30): [ScopeId(31)]
Scope children mismatch:
after transform: ScopeId(34): [ScopeId(35), ScopeId(36)]
rebuilt        : ScopeId(32): [ScopeId(33)]
Scope children mismatch:
after transform: ScopeId(37): [ScopeId(38), ScopeId(39)]
rebuilt        : ScopeId(34): [ScopeId(35)]
Symbol reference IDs mismatch for "p":
after transform: SymbolId(4): [ReferenceId(6)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "fn":
after transform: SymbolId(5): [ReferenceId(7)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(11): [ReferenceId(9)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/returnStatements/returnStatementNoAsiAfterTransform.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
rebuilt        : ScopeId(0): ["t1", "t10", "t2", "t3", "t4", "t5", "t6", "t7", "t8", "t9"]
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/returnStatements/returnStatements.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(12), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(9): [ReferenceId(4), ReferenceId(7), ReferenceId(8), ReferenceId(10)]
rebuilt        : SymbolId(9): [ReferenceId(4), ReferenceId(7)]
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(1), ReferenceId(2)]
rebuilt        : [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/statements/throwStatements/throwStatements.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(10), ScopeId(11), ScopeId(12)]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(4), ReferenceId(5), ReferenceId(21), ReferenceId(42)]
rebuilt        : SymbolId(2): [ReferenceId(26), ReferenceId(46)]
Symbol flags mismatch for "M":
after transform: SymbolId(6): SymbolFlags(ValueModule)
rebuilt        : SymbolId(5): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(6): Span { start: 212, end: 213 }
rebuilt        : SymbolId(5): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/any/assignEveryTypeToAny.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6)]
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(7): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(8): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(12): [ReferenceId(25)]
rebuilt        : SymbolId(12): []
Unresolved reference IDs mismatch for "undefined":
after transform: [ReferenceId(11), ReferenceId(14)]
rebuilt        : [ReferenceId(12)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/asyncGenerators/types.asyncGenerators.es2018.1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78), ScopeId(79), ScopeId(80), ScopeId(81), ScopeId(82), ScopeId(83), ScopeId(84), ScopeId(85), ScopeId(86), ScopeId(87), ScopeId(88), ScopeId(89), ScopeId(90), ScopeId(91), ScopeId(92), ScopeId(93), ScopeId(94), ScopeId(95), ScopeId(96), ScopeId(97), ScopeId(98), ScopeId(99), ScopeId(100), ScopeId(101), ScopeId(102), ScopeId(103), ScopeId(104), ScopeId(105), ScopeId(106), ScopeId(107), ScopeId(108), ScopeId(109), ScopeId(110), ScopeId(111), ScopeId(112), ScopeId(113), ScopeId(114), ScopeId(115), ScopeId(116), ScopeId(117), ScopeId(118), ScopeId(119)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(19), ScopeId(20), ScopeId(22), ScopeId(23), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(44), ScopeId(45), ScopeId(47), ScopeId(48), ScopeId(50), ScopeId(51), ScopeId(53), ScopeId(54), ScopeId(56), ScopeId(57), ScopeId(60), ScopeId(61), ScopeId(63), ScopeId(64), ScopeId(66), ScopeId(67), ScopeId(69), ScopeId(70), ScopeId(72), ScopeId(73), ScopeId(76), ScopeId(77), ScopeId(79), ScopeId(80), ScopeId(82), ScopeId(83), ScopeId(85), ScopeId(86), ScopeId(88), ScopeId(89), ScopeId(92), ScopeId(93), ScopeId(95), ScopeId(96), ScopeId(98), ScopeId(99), ScopeId(101), ScopeId(102)]
Scope children mismatch:
after transform: ScopeId(64): [ScopeId(65)]
rebuilt        : ScopeId(103): []
Unresolved references mismatch:
after transform: ["AsyncIterable", "AsyncIterableIterator", "AsyncIterator", "Promise", "PromiseLike", "arguments", "require"]
rebuilt        : ["Promise", "arguments", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/conditional/inferTypes2.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "bar", "bar2", "foo", "foo2"]
rebuilt        : ScopeId(0): ["a", "b", "bar", "bar2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["foo", "foo2"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/conditional/inferTypesWithExtends1.ts
Bindings mismatch:
after transform: ScopeId(0): ["f1", "f2", "x1", "x2"]
rebuilt        : ScopeId(0): ["f1", "f2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(25), ScopeId(27), ScopeId(29), ScopeId(31), ScopeId(37), ScopeId(39), ScopeId(41), ScopeId(43), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(79), ScopeId(81), ScopeId(82), ScopeId(85), ScopeId(87), ScopeId(89), ScopeId(91), ScopeId(95), ScopeId(98), ScopeId(102), ScopeId(105), ScopeId(107), ScopeId(108), ScopeId(109), ScopeId(110), ScopeId(113), ScopeId(114), ScopeId(116), ScopeId(117), ScopeId(118), ScopeId(119), ScopeId(120), ScopeId(121), ScopeId(127), ScopeId(129), ScopeId(130), ScopeId(131), ScopeId(133)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "x1":
after transform: SymbolId(127) "x1"
rebuilt        : <None>
Reference symbol mismatch for "x2":
after transform: SymbolId(133) "x2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Promise"]
rebuilt        : ["x1", "x2"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/conditional/inferTypesWithExtendsDependingOnTypeVariables.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/conditional/variance.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5)]
rebuilt        : ScopeId(2): []
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(6): [ReferenceId(8), ReferenceId(10), ReferenceId(11)]
rebuilt        : SymbolId(5): [ReferenceId(4), ReferenceId(6)]
Unresolved references mismatch:
after transform: ["const", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionAwaitOperand.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(0), ReferenceId(4)]
rebuilt        : [ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/asyncFunctions/contextuallyTypeAsyncFunctionReturnType.ts
Bindings mismatch:
after transform: ScopeId(0): ["Context", "_asyncToGenerator", "_copyExtensions", "_defineProperty", "_fn", "_fn2", "_fn3", "_fn4", "copyExtensions", "fn1", "fn2", "fn3", "fn4", "getProcessTree", "scanMetadata", "test"]
rebuilt        : ScopeId(0): ["Context", "_asyncToGenerator", "_copyExtensions", "_defineProperty", "_fn", "_fn2", "_fn3", "_fn4", "copyExtensions", "fn1", "fn2", "fn3", "fn4", "scanMetadata"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(8), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(19), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(41), ScopeId(42)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(15), ScopeId(17), ScopeId(22), ScopeId(23), ScopeId(24)]
Symbol flags mismatch for "Context":
after transform: SymbolId(7): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(12): SymbolFlags(Class)
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(7): [ReferenceId(12), ReferenceId(14)]
rebuilt        : SymbolId(12): []
Reference symbol mismatch for "test":
after transform: SymbolId(12) "test"
rebuilt        : <None>
Reference symbol mismatch for "getProcessTree":
after transform: SymbolId(22) "getProcessTree"
rebuilt        : <None>
Reference symbol mismatch for "scanMetadata":
after transform: SymbolId(22) "scanMetadata"
rebuilt        : SymbolId(16) "scanMetadata"
Unresolved references mismatch:
after transform: ["Error", "Promise", "PromiseLike", "arguments"]
rebuilt        : ["Error", "Promise", "arguments", "getProcessTree", "test"]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(0), ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(24), ReferenceId(31), ReferenceId(34), ReferenceId(37)]
rebuilt        : [ReferenceId(10), ReferenceId(24), ReferenceId(31), ReferenceId(41)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/commaOperator/contextuallyTypeCommaOperator01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/logicalAnd/contextuallyTypeLogicalAnd01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/methodDeclarations/contextuallyTypedBindingInitializer.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(18), ScopeId(19)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/methodDeclarations/contextuallyTypedObjectLiteralMethodDeclaration01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(9), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/partiallyAnnotatedFunction/partiallyAnnotatedFunctionInferenceWithTypeParameter.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(5), SymbolId(28)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(11), ReferenceId(14), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31)]
rebuilt        : SymbolId(2): []
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(4) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(4) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(4) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(4) "test"
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(4) "test"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"
Reference symbol mismatch for "testRest":
after transform: SymbolId(5) "testRest"
rebuilt        : SymbolId(6) "testRest"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/contextualTypes/partiallyAnnotatedFunction/partiallyAnnotatedFunctionWitoutTypeParameter.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "simple":
after transform: SymbolId(0) "simple"
rebuilt        : SymbolId(0) "simple"
Reference symbol mismatch for "simple":
after transform: SymbolId(0) "simple"
rebuilt        : SymbolId(0) "simple"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/forAwait/types.forAwait.es2018.1.ts
Bindings mismatch:
after transform: ScopeId(0): ["_asyncIterator", "_asyncToGenerator", "_awaitAsyncGenerator", "_f", "_f2", "_wrapAsyncGenerator", "asyncIterable", "f1", "f2", "iterable", "iterableOfPromise"]
rebuilt        : ScopeId(0): ["_asyncIterator", "_asyncToGenerator", "_awaitAsyncGenerator", "_f", "_f2", "_wrapAsyncGenerator", "f1", "f2"]
Reference symbol mismatch for "asyncIterable":
after transform: SymbolId(0) "asyncIterable"
rebuilt        : <None>
Reference symbol mismatch for "iterable":
after transform: SymbolId(1) "iterable"
rebuilt        : <None>
Reference symbol mismatch for "iterableOfPromise":
after transform: SymbolId(2) "iterableOfPromise"
rebuilt        : <None>
Reference symbol mismatch for "asyncIterable":
after transform: SymbolId(0) "asyncIterable"
rebuilt        : <None>
Reference symbol mismatch for "iterable":
after transform: SymbolId(1) "iterable"
rebuilt        : <None>
Reference symbol mismatch for "iterableOfPromise":
after transform: SymbolId(2) "iterableOfPromise"
rebuilt        : <None>
Reference symbol mismatch for "asyncIterable":
after transform: SymbolId(0) "asyncIterable"
rebuilt        : <None>
Reference symbol mismatch for "iterable":
after transform: SymbolId(1) "iterable"
rebuilt        : <None>
Reference symbol mismatch for "iterableOfPromise":
after transform: SymbolId(2) "iterableOfPromise"
rebuilt        : <None>
Reference symbol mismatch for "asyncIterable":
after transform: SymbolId(0) "asyncIterable"
rebuilt        : <None>
Reference symbol mismatch for "iterable":
after transform: SymbolId(1) "iterable"
rebuilt        : <None>
Reference symbol mismatch for "iterableOfPromise":
after transform: SymbolId(2) "iterableOfPromise"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["AsyncIterable", "Iterable", "Promise", "arguments", "require"]
rebuilt        : ["arguments", "asyncIterable", "iterable", "iterableOfPromise", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/import/importTypeAmbient.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/import/importTypeAmdBundleRewrite.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/import/importTypeGenericTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "Point":
after transform: SymbolId(0) "Point"
rebuilt        : <None>
Reference flags mismatch for "Point":
after transform: ReferenceId(1): ReferenceFlags(Type)
rebuilt        : ReferenceId(1): ReferenceFlags(Read)
Unresolved references mismatch:
after transform: ["module"]
rebuilt        : ["Point", "module"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/import/importTypeLocal.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "Point":
after transform: SymbolId(0) "Point"
rebuilt        : <None>
Reference flags mismatch for "Point":
after transform: ReferenceId(0): ReferenceFlags(Type)
rebuilt        : ReferenceId(1): ReferenceFlags(Read)
Unresolved references mismatch:
after transform: ["module"]
rebuilt        : ["Point", "module"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/contextualIntersectionType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionMemberOfUnionNarrowsCorrectly.ts
Bindings mismatch:
after transform: ScopeId(0): ["x"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "x":
after transform: SymbolId(4) "x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionOfUnionNarrowing.ts
Bindings mismatch:
after transform: ScopeId(0): ["q"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "q":
after transform: SymbolId(2) "q"
rebuilt        : <None>
Reference symbol mismatch for "q":
after transform: SymbolId(2) "q"
rebuilt        : <None>
Reference symbol mismatch for "q":
after transform: SymbolId(2) "q"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["undefined"]
rebuilt        : ["q", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionOfUnionOfUnitTypes.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "D", "E", "F"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(16), ReferenceId(17), ReferenceId(18), ReferenceId(19), ReferenceId(20), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(24), ReferenceId(25), ReferenceId(26), ReferenceId(27), ReferenceId(28), ReferenceId(29), ReferenceId(30), ReferenceId(31), ReferenceId(32), ReferenceId(33), ReferenceId(34), ReferenceId(35), ReferenceId(36), ReferenceId(37), ReferenceId(38), ReferenceId(39), ReferenceId(40), ReferenceId(41), ReferenceId(42), ReferenceId(43), ReferenceId(44), ReferenceId(58)]
rebuilt        : SymbolId(0): [ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionThisTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeEquivalence.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []
Symbol reference IDs mismatch for "ab":
after transform: SymbolId(5): [ReferenceId(17)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "bc":
after transform: SymbolId(6): [ReferenceId(20)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeInference2.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "f", "f2", "obj"]
rebuilt        : ScopeId(0): ["f", "f2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "a":
after transform: SymbolId(3) "a"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "b":
after transform: SymbolId(4) "b"
rebuilt        : <None>
Reference symbol mismatch for "f2":
after transform: SymbolId(5) "f2"
rebuilt        : SymbolId(2) "f2"
Reference symbol mismatch for "obj":
after transform: SymbolId(11) "obj"
rebuilt        : <None>
Reference symbol mismatch for "f2":
after transform: SymbolId(5) "f2"
rebuilt        : SymbolId(2) "f2"
Reference symbol mismatch for "obj":
after transform: SymbolId(11) "obj"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["a", "b", "obj"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeInference3.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "c1", "c2", "from"]
rebuilt        : ScopeId(0): ["c1", "c2", "from"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "a":
after transform: SymbolId(4) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(5) "b"
rebuilt        : <None>
Reference symbol mismatch for "from":
after transform: SymbolId(7) "from"
rebuilt        : SymbolId(1) "from"
Unresolved references mismatch:
after transform: ["Array", "ReadonlyArray", "Set", "Symbol"]
rebuilt        : ["Array", "a", "b"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeMembers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionTypeOverloading.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/intersectionsAndEmptyObjects.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(14), SymbolId(15), SymbolId(16), SymbolId(17), SymbolId(18), SymbolId(20), SymbolId(25), SymbolId(28), SymbolId(29), SymbolId(30), SymbolId(31), SymbolId(32), SymbolId(33), SymbolId(38), SymbolId(39), SymbolId(40), SymbolId(41), SymbolId(42), SymbolId(43), SymbolId(47)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(17), SymbolId(19), SymbolId(20), SymbolId(21), SymbolId(22), SymbolId(23), SymbolId(24), SymbolId(25), SymbolId(26), SymbolId(27), SymbolId(28), SymbolId(29), SymbolId(30), SymbolId(31)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "mock":
after transform: SymbolId(47) "mock"
rebuilt        : SymbolId(31) "mock"
Unresolved references mismatch:
after transform: ["Object", "Promise"]
rebuilt        : ["Object"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/intersection/operatorsAndIntersectionTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/keyof/keyofAndForIn.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9), ScopeId(11)]
rebuilt        : ScopeId(6): [ScopeId(7), ScopeId(9)]
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14), ScopeId(15), ScopeId(17)]
rebuilt        : ScopeId(11): [ScopeId(12), ScopeId(14)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/keyof/keyofIntersection.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/booleanLiteralTypes1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2), SymbolId(4), SymbolId(7), SymbolId(11), SymbolId(20), SymbolId(24), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(40), SymbolId(42)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(9), SymbolId(18), SymbolId(22), SymbolId(27), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(23), ScopeId(25)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(22)]
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/booleanLiteralTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2), SymbolId(4), SymbolId(7), SymbolId(11), SymbolId(20), SymbolId(24), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(40), SymbolId(42)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(5), SymbolId(9), SymbolId(18), SymbolId(22), SymbolId(27), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(19), ScopeId(22), ScopeId(23), ScopeId(25)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(22)]
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(18) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/enumLiteralTypes1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(7), SymbolId(9), SymbolId(13), SymbolId(18), SymbolId(21), SymbolId(25), SymbolId(34), SymbolId(36), SymbolId(38), SymbolId(40), SymbolId(42), SymbolId(45), SymbolId(47)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(8), SymbolId(13), SymbolId(16), SymbolId(20), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(41)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(18), ScopeId(21), ScopeId(23)]
Bindings mismatch:
after transform: ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
rebuilt        : ScopeId(1): ["Choice"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Choice":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Choice":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(15), ReferenceId(22), ReferenceId(59), ReferenceId(63), ReferenceId(64), ReferenceId(65), ReferenceId(68), ReferenceId(70), ReferenceId(72), ReferenceId(82), ReferenceId(83), ReferenceId(86), ReferenceId(87), ReferenceId(96), ReferenceId(99), ReferenceId(100), ReferenceId(103), ReferenceId(105), ReferenceId(109), ReferenceId(111), ReferenceId(122)]
rebuilt        : SymbolId(0): [ReferenceId(7), ReferenceId(52), ReferenceId(54), ReferenceId(63), ReferenceId(64), ReferenceId(66), ReferenceId(67), ReferenceId(74), ReferenceId(78), ReferenceId(80), ReferenceId(83), ReferenceId(85)]
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/enumLiteralTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(7), SymbolId(9), SymbolId(13), SymbolId(18), SymbolId(21), SymbolId(25), SymbolId(34), SymbolId(36), SymbolId(38), SymbolId(40), SymbolId(42), SymbolId(45), SymbolId(47)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(8), SymbolId(13), SymbolId(16), SymbolId(20), SymbolId(29), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(41)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(18), ScopeId(21), ScopeId(23)]
Bindings mismatch:
after transform: ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
rebuilt        : ScopeId(1): ["Choice"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Choice":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Choice":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(15), ReferenceId(22), ReferenceId(59), ReferenceId(63), ReferenceId(64), ReferenceId(65), ReferenceId(68), ReferenceId(70), ReferenceId(72), ReferenceId(82), ReferenceId(83), ReferenceId(86), ReferenceId(87), ReferenceId(96), ReferenceId(99), ReferenceId(100), ReferenceId(103), ReferenceId(105), ReferenceId(109), ReferenceId(111), ReferenceId(122)]
rebuilt        : SymbolId(0): [ReferenceId(7), ReferenceId(52), ReferenceId(54), ReferenceId(63), ReferenceId(64), ReferenceId(66), ReferenceId(67), ReferenceId(74), ReferenceId(78), ReferenceId(80), ReferenceId(83), ReferenceId(85)]
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(21) "g"
rebuilt        : SymbolId(16) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypeWidening.ts
Bindings mismatch:
after transform: ScopeId(0): ["E", "Set", "_excluded", "_objectSpread", "_objectWithoutProperties", "a", "arr", "b", "doWork", "f", "f1", "f2", "f3", "f4", "f5", "f6", "increment", "isFailure", "isSuccess", "keys", "langCodeSet", "langCodes", "nonWidening", "onMouseOver", "result", "test", "widening", "x"]
rebuilt        : ScopeId(0): ["E", "FAILURE", "Set", "_excluded", "_objectSpread", "_objectWithoutProperties", "a", "arr", "b", "doWork", "f", "f1", "f2", "f3", "f4", "f5", "f6", "increment", "isFailure", "isSuccess", "keys", "langCodeSet", "langCodes", "nonWidening", "onMouseOver", "result", "test", "widening", "x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21)]
Bindings mismatch:
after transform: ScopeId(26): ["A", "B", "E"]
rebuilt        : ScopeId(21): ["E"]
Scope flags mismatch:
after transform: ScopeId(26): ScopeFlags(StrictMode)
rebuilt        : ScopeId(21): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "FAILURE":
after transform: SymbolId(65): SymbolFlags(BlockScopedVariable | ConstVariable | TypeAlias)
rebuilt        : SymbolId(66): SymbolFlags(BlockScopedVariable | ConstVariable)
Symbol span mismatch for "FAILURE":
after transform: SymbolId(65): Span { start: 2229, end: 2236 }
rebuilt        : SymbolId(66): Span { start: 2256, end: 2263 }
Symbol reference IDs mismatch for "FAILURE":
after transform: SymbolId(65): [ReferenceId(55), ReferenceId(58), ReferenceId(66), ReferenceId(68)]
rebuilt        : SymbolId(66): [ReferenceId(50), ReferenceId(54)]
Symbol redeclarations mismatch for "FAILURE":
after transform: SymbolId(65): [Span { start: 2229, end: 2236 }, Span { start: 2256, end: 2263 }]
rebuilt        : SymbolId(66): []
Symbol reference IDs mismatch for "langCodeSet":
after transform: SymbolId(92): [ReferenceId(95), ReferenceId(97)]
rebuilt        : SymbolId(83): [ReferenceId(70)]
Symbol flags mismatch for "E":
after transform: SymbolId(105): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(93): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(105): [ReferenceId(110), ReferenceId(111), ReferenceId(122)]
rebuilt        : SymbolId(93): [ReferenceId(84), ReferenceId(86)]
Reference symbol mismatch for "widening":
after transform: SymbolId(51) "widening"
rebuilt        : SymbolId(54) "widening"
Reference symbol mismatch for "widening":
after transform: SymbolId(51) "widening"
rebuilt        : SymbolId(54) "widening"
Reference symbol mismatch for "widening":
after transform: SymbolId(51) "widening"
rebuilt        : SymbolId(54) "widening"
Reference symbol mismatch for "nonWidening":
after transform: SymbolId(54) "nonWidening"
rebuilt        : SymbolId(56) "nonWidening"
Reference symbol mismatch for "nonWidening":
after transform: SymbolId(54) "nonWidening"
rebuilt        : SymbolId(56) "nonWidening"
Reference symbol mismatch for "nonWidening":
after transform: SymbolId(54) "nonWidening"
rebuilt        : SymbolId(56) "nonWidening"
Reference symbol mismatch for "f":
after transform: SymbolId(102) "f"
rebuilt        : SymbolId(91) "f"
Unresolved references mismatch:
after transform: ["NonNullable", "Object", "Record"]
rebuilt        : ["Object"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypes1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(9), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(10)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(5), SymbolId(34), SymbolId(49), SymbolId(66), SymbolId(67), SymbolId(72), SymbolId(79), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(98), SymbolId(101), SymbolId(105), SymbolId(110), SymbolId(113), SymbolId(117), SymbolId(120), SymbolId(123), SymbolId(127), SymbolId(128), SymbolId(129), SymbolId(130), SymbolId(131), SymbolId(132), SymbolId(133), SymbolId(134), SymbolId(135), SymbolId(136), SymbolId(137), SymbolId(139), SymbolId(141), SymbolId(144), SymbolId(150), SymbolId(152)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(3), SymbolId(4), SymbolId(33), SymbolId(48), SymbolId(65), SymbolId(66), SymbolId(71), SymbolId(78), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(97), SymbolId(99), SymbolId(102), SymbolId(105), SymbolId(107), SymbolId(110), SymbolId(112), SymbolId(114), SymbolId(117), SymbolId(118), SymbolId(119), SymbolId(120), SymbolId(121), SymbolId(122), SymbolId(123), SymbolId(124), SymbolId(125), SymbolId(126), SymbolId(127), SymbolId(129), SymbolId(131), SymbolId(133), SymbolId(137)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(14), ScopeId(17), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(15), ScopeId(18), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37)]
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "C", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(17): [ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27)]
rebuilt        : ScopeId(18): [ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25)]
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(7), ReferenceId(8), ReferenceId(9), ReferenceId(13), ReferenceId(30), ReferenceId(31), ReferenceId(35), ReferenceId(95)]
rebuilt        : SymbolId(1): [ReferenceId(8), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(13), ReferenceId(14), ReferenceId(15), ReferenceId(19), ReferenceId(44), ReferenceId(53), ReferenceId(57)]
Reference symbol mismatch for "g1":
after transform: SymbolId(98) "g1"
rebuilt        : SymbolId(97) "g1"
Reference symbol mismatch for "g2":
after transform: SymbolId(101) "g2"
rebuilt        : SymbolId(99) "g2"
Reference symbol mismatch for "g2":
after transform: SymbolId(101) "g2"
rebuilt        : SymbolId(99) "g2"
Reference symbol mismatch for "g3":
after transform: SymbolId(105) "g3"
rebuilt        : SymbolId(102) "g3"
Reference symbol mismatch for "g4":
after transform: SymbolId(110) "g4"
rebuilt        : SymbolId(105) "g4"
Reference symbol mismatch for "g5":
after transform: SymbolId(113) "g5"
rebuilt        : SymbolId(107) "g5"
Reference symbol mismatch for "g6":
after transform: SymbolId(117) "g6"
rebuilt        : SymbolId(110) "g6"
Reference symbol mismatch for "g6":
after transform: SymbolId(117) "g6"
rebuilt        : SymbolId(110) "g6"
Reference symbol mismatch for "g7":
after transform: SymbolId(120) "g7"
rebuilt        : SymbolId(112) "g7"
Reference symbol mismatch for "g8":
after transform: SymbolId(123) "g8"
rebuilt        : SymbolId(114) "g8"
Reference symbol mismatch for "g8":
after transform: SymbolId(123) "g8"
rebuilt        : SymbolId(114) "g8"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/literalTypesAndDestructuring.ts
Bindings mismatch:
after transform: ScopeId(0): ["_x$a", "_x$a2", "_x$a3", "a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "bar", "x"]
rebuilt        : ScopeId(0): ["_x$a", "_x$a2", "_x$a3", "a1", "a2", "a3", "a4", "b1", "b2", "b3", "b4", "bar"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["const"]
rebuilt        : ["x"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/numericLiteralTypes1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(5), SymbolId(10), SymbolId(12), SymbolId(17), SymbolId(20), SymbolId(24), SymbolId(32), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(41), SymbolId(43), SymbolId(48), SymbolId(58), SymbolId(60)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(9), SymbolId(12), SymbolId(16), SymbolId(24), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32), SymbolId(34), SymbolId(39), SymbolId(48), SymbolId(50)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(23), ScopeId(26), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(34)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(24)]
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/numericLiteralTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(5), SymbolId(10), SymbolId(12), SymbolId(17), SymbolId(20), SymbolId(24), SymbolId(32), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(41), SymbolId(43), SymbolId(48), SymbolId(58), SymbolId(60)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(9), SymbolId(12), SymbolId(16), SymbolId(24), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32), SymbolId(34), SymbolId(39), SymbolId(48), SymbolId(50)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(23), ScopeId(26), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(34)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(24)]
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(20) "g"
rebuilt        : SymbolId(12) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/numericStringLiteralTypes.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(7), SymbolId(11), SymbolId(27), SymbolId(30), SymbolId(34), SymbolId(35)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(8), SymbolId(10), SymbolId(13), SymbolId(14)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(19)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "createContainer":
after transform: SymbolId(27) "createContainer"
rebuilt        : SymbolId(8) "createContainer"
Reference symbol mismatch for "createContainer":
after transform: SymbolId(27) "createContainer"
rebuilt        : SymbolId(8) "createContainer"
Reference symbol mismatch for "f":
after transform: SymbolId(30) "f"
rebuilt        : SymbolId(10) "f"
Unresolved references mismatch:
after transform: ["Capitalize"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/stringEnumLiteralTypes1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(7), SymbolId(9), SymbolId(13), SymbolId(18), SymbolId(22), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(42), SymbolId(44)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(8), SymbolId(13), SymbolId(17), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32), SymbolId(34), SymbolId(36), SymbolId(38)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(20), ScopeId(23), ScopeId(24), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(22)]
Bindings mismatch:
after transform: ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
rebuilt        : ScopeId(1): ["Choice"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Choice":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Choice":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(15), ReferenceId(22), ReferenceId(43), ReferenceId(44), ReferenceId(45), ReferenceId(48), ReferenceId(50), ReferenceId(52), ReferenceId(62), ReferenceId(63), ReferenceId(66), ReferenceId(67), ReferenceId(76), ReferenceId(79), ReferenceId(80), ReferenceId(83), ReferenceId(85), ReferenceId(89), ReferenceId(91), ReferenceId(99)]
rebuilt        : SymbolId(0): [ReferenceId(4), ReferenceId(31), ReferenceId(33), ReferenceId(42), ReferenceId(43), ReferenceId(45), ReferenceId(46), ReferenceId(53), ReferenceId(57), ReferenceId(59), ReferenceId(62), ReferenceId(64)]
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/stringEnumLiteralTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(7), SymbolId(9), SymbolId(13), SymbolId(18), SymbolId(22), SymbolId(31), SymbolId(33), SymbolId(35), SymbolId(37), SymbolId(39), SymbolId(42), SymbolId(44)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(8), SymbolId(13), SymbolId(17), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32), SymbolId(34), SymbolId(36), SymbolId(38)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(20), ScopeId(23), ScopeId(24), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(22)]
Bindings mismatch:
after transform: ScopeId(1): ["Choice", "No", "Unknown", "Yes"]
rebuilt        : ScopeId(1): ["Choice"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "Choice":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "Choice":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(9), ReferenceId(10), ReferenceId(11), ReferenceId(12), ReferenceId(15), ReferenceId(22), ReferenceId(43), ReferenceId(44), ReferenceId(45), ReferenceId(48), ReferenceId(50), ReferenceId(52), ReferenceId(62), ReferenceId(63), ReferenceId(66), ReferenceId(67), ReferenceId(76), ReferenceId(79), ReferenceId(80), ReferenceId(83), ReferenceId(85), ReferenceId(89), ReferenceId(91), ReferenceId(99)]
rebuilt        : SymbolId(0): [ReferenceId(4), ReferenceId(31), ReferenceId(33), ReferenceId(42), ReferenceId(43), ReferenceId(45), ReferenceId(46), ReferenceId(53), ReferenceId(57), ReferenceId(59), ReferenceId(62), ReferenceId(64)]
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"
Reference symbol mismatch for "g":
after transform: SymbolId(18) "g"
rebuilt        : SymbolId(13) "g"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/stringLiteralsWithTypeAssertions01.ts
Symbol reference IDs mismatch for "fooOrBar":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/stringMappingDeferralInConditionalTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(12)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Capitalize", "Lowercase"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/stringMappingReduction.ts
Bindings mismatch:
after transform: ScopeId(0): ["_virtualOn", "virtualOn"]
rebuilt        : ScopeId(0): ["virtualOn"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "_virtualOn":
after transform: SymbolId(18) "_virtualOn"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Capitalize", "Lowercase"]
rebuilt        : ["_virtualOn"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/templateLiteralTypes6.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(3), SymbolId(7)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f1":
after transform: SymbolId(3) "f1"
rebuilt        : SymbolId(0) "f1"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/literal/templateLiteralTypes8.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Bindings mismatch:
after transform: ScopeId(1): ["E", "a", "b"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(7)]
rebuilt        : SymbolId(0): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/localTypes/localTypes1.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(2): ["A", "B", "C", "E"]
rebuilt        : ScopeId(2): ["E"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(6): [ScopeId(7), ScopeId(8)]
Bindings mismatch:
after transform: ScopeId(8): ["A", "B", "C", "E"]
rebuilt        : ScopeId(7): ["E"]
Scope flags mismatch:
after transform: ScopeId(8): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(14): ["A", "B", "C", "E"]
rebuilt        : ScopeId(12): ["E"]
Scope flags mismatch:
after transform: ScopeId(14): ScopeFlags(0x0)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(15): [ScopeId(16), ScopeId(17), ScopeId(18)]
rebuilt        : ScopeId(13): [ScopeId(14)]
Scope children mismatch:
after transform: ScopeId(19): [ScopeId(20), ScopeId(21), ScopeId(22)]
rebuilt        : ScopeId(16): [ScopeId(17)]
Bindings mismatch:
after transform: ScopeId(25): ["A", "B", "C", "E"]
rebuilt        : ScopeId(21): ["E"]
Scope flags mismatch:
after transform: ScopeId(25): ScopeFlags(0x0)
rebuilt        : ScopeId(21): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(28): ["A", "B", "C", "E"]
rebuilt        : ScopeId(25): ["E"]
Scope flags mismatch:
after transform: ScopeId(28): ScopeFlags(0x0)
rebuilt        : ScopeId(25): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(32): ["A", "B", "C", "E"]
rebuilt        : ScopeId(30): ["E"]
Scope flags mismatch:
after transform: ScopeId(32): ScopeFlags(StrictMode)
rebuilt        : ScopeId(30): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(35): ["A", "B", "C", "E"]
rebuilt        : ScopeId(34): ["E"]
Scope flags mismatch:
after transform: ScopeId(35): ScopeFlags(StrictMode)
rebuilt        : ScopeId(34): ScopeFlags(StrictMode | Function)
Bindings mismatch:
after transform: ScopeId(38): ["A", "B", "C", "E"]
rebuilt        : ScopeId(38): ["E"]
Scope flags mismatch:
after transform: ScopeId(38): ScopeFlags(StrictMode)
rebuilt        : ScopeId(38): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(1), ReferenceId(6)]
rebuilt        : SymbolId(2): [ReferenceId(11)]
Symbol flags mismatch for "E":
after transform: SymbolId(11): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(11): [ReferenceId(8), ReferenceId(9), ReferenceId(14)]
rebuilt        : SymbolId(8): [ReferenceId(23)]
Symbol flags mismatch for "E":
after transform: SymbolId(21): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(14): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(21): [ReferenceId(18), ReferenceId(19), ReferenceId(24), ReferenceId(26), ReferenceId(27), ReferenceId(32)]
rebuilt        : SymbolId(14): [ReferenceId(37), ReferenceId(42)]
Symbol flags mismatch for "E":
after transform: SymbolId(35): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(22): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(35): [ReferenceId(34)]
rebuilt        : SymbolId(22): []
Symbol flags mismatch for "E":
after transform: SymbolId(41): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(26): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(41): [ReferenceId(36)]
rebuilt        : SymbolId(26): []
Symbol flags mismatch for "E":
after transform: SymbolId(47): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(30): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(47): [ReferenceId(38)]
rebuilt        : SymbolId(30): []
Symbol flags mismatch for "E":
after transform: SymbolId(52): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(33): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(52): [ReferenceId(39)]
rebuilt        : SymbolId(33): []
Symbol flags mismatch for "E":
after transform: SymbolId(57): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(36): SymbolFlags(BlockScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(57): [ReferenceId(41)]
rebuilt        : SymbolId(36): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/localTypes/localTypes5.ts
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/isomorphicMappedTypeInference.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(5), SymbolId(8), SymbolId(11), SymbolId(16), SymbolId(21), SymbolId(26), SymbolId(30), SymbolId(34), SymbolId(36), SymbolId(38), SymbolId(43), SymbolId(48), SymbolId(51), SymbolId(56), SymbolId(60), SymbolId(64), SymbolId(69), SymbolId(79), SymbolId(82), SymbolId(85), SymbolId(87), SymbolId(91), SymbolId(92), SymbolId(96), SymbolId(100), SymbolId(104), SymbolId(109), SymbolId(114), SymbolId(115), SymbolId(116), SymbolId(117), SymbolId(118), SymbolId(119), SymbolId(124), SymbolId(125), SymbolId(126)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4), SymbolId(8), SymbolId(12), SymbolId(16), SymbolId(20), SymbolId(24), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(35), SymbolId(37), SymbolId(42), SymbolId(44), SymbolId(46), SymbolId(48), SymbolId(53), SymbolId(55), SymbolId(58), SymbolId(60), SymbolId(63), SymbolId(64), SymbolId(66), SymbolId(68), SymbolId(70), SymbolId(72), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(82), SymbolId(83), SymbolId(84)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(26), ScopeId(28), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34)]
Scope children mismatch:
after transform: ScopeId(19): [ScopeId(20)]
rebuilt        : ScopeId(16): []
Reference symbol mismatch for "validate":
after transform: SymbolId(56) "validate"
rebuilt        : SymbolId(42) "validate"
Reference symbol mismatch for "clone":
after transform: SymbolId(60) "clone"
rebuilt        : SymbolId(44) "clone"
Reference symbol mismatch for "validateAndClone":
after transform: SymbolId(64) "validateAndClone"
rebuilt        : SymbolId(46) "validateAndClone"
Reference symbol mismatch for "applySpec":
after transform: SymbolId(79) "applySpec"
rebuilt        : SymbolId(53) "applySpec"
Reference symbol mismatch for "applySpec":
after transform: SymbolId(79) "applySpec"
rebuilt        : SymbolId(53) "applySpec"
Reference symbol mismatch for "f20":
after transform: SymbolId(92) "f20"
rebuilt        : SymbolId(64) "f20"
Reference symbol mismatch for "f21":
after transform: SymbolId(96) "f21"
rebuilt        : SymbolId(66) "f21"
Reference symbol mismatch for "f22":
after transform: SymbolId(100) "f22"
rebuilt        : SymbolId(68) "f22"
Reference symbol mismatch for "f23":
after transform: SymbolId(104) "f23"
rebuilt        : SymbolId(70) "f23"
Reference symbol mismatch for "f24":
after transform: SymbolId(109) "f24"
rebuilt        : SymbolId(72) "f24"
Unresolved references mismatch:
after transform: ["Partial", "Pick"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Unresolved references mismatch:
after transform: ["Exclude", "Extract", "Pick", "Record", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeIndexSignatureModifiers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(31), ScopeId(32)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Pick"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeModifiers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(29): [ScopeId(30)]
rebuilt        : ScopeId(4): []
Unresolved references mismatch:
after transform: ["Partial", "Pick", "Readonly"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypeOverlappingStringEnumKeys.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Bindings mismatch:
after transform: ScopeId(1): ["CAT", "DOG", "TerrestrialAnimalTypes"]
rebuilt        : ScopeId(1): ["TerrestrialAnimalTypes"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Bindings mismatch:
after transform: ScopeId(2): ["AlienAnimalTypes", "CAT"]
rebuilt        : ScopeId(2): ["AlienAnimalTypes"]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(0x0)
rebuilt        : ScopeId(2): ScopeFlags(Function)
Symbol flags mismatch for "TerrestrialAnimalTypes":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "TerrestrialAnimalTypes":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(11), ReferenceId(16)]
rebuilt        : SymbolId(0): [ReferenceId(3), ReferenceId(7)]
Symbol flags mismatch for "AlienAnimalTypes":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "AlienAnimalTypes":
after transform: SymbolId(3): [ReferenceId(1), ReferenceId(3), ReferenceId(12), ReferenceId(19)]
rebuilt        : SymbolId(2): [ReferenceId(6), ReferenceId(8)]
Unresolved references mismatch:
after transform: ["Extract"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypes1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(47), SymbolId(50), SymbolId(53), SymbolId(56), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(18), ScopeId(20), ScopeId(22), ScopeId(24), ScopeId(26), ScopeId(28), ScopeId(30), ScopeId(32), ScopeId(34), ScopeId(36), ScopeId(38), ScopeId(40), ScopeId(42), ScopeId(44), ScopeId(46), ScopeId(48), ScopeId(50), ScopeId(52), ScopeId(54)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Reference symbol mismatch for "f1":
after transform: SymbolId(47) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(50) "f2"
rebuilt        : SymbolId(1) "f2"
Reference symbol mismatch for "f3":
after transform: SymbolId(53) "f3"
rebuilt        : SymbolId(2) "f3"
Reference symbol mismatch for "f4":
after transform: SymbolId(56) "f4"
rebuilt        : SymbolId(3) "f4"
Unresolved references mismatch:
after transform: ["Array", "Date", "Number"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(20), SymbolId(24), SymbolId(27), SymbolId(32), SymbolId(38), SymbolId(45), SymbolId(48), SymbolId(51), SymbolId(54), SymbolId(57), SymbolId(61), SymbolId(65)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(8), SymbolId(10), SymbolId(13), SymbolId(16), SymbolId(18), SymbolId(21), SymbolId(24), SymbolId(27), SymbolId(30), SymbolId(34), SymbolId(38)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(6), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): []
Reference symbol mismatch for "assign":
after transform: SymbolId(20) "assign"
rebuilt        : SymbolId(5) "assign"
Reference symbol mismatch for "assign":
after transform: SymbolId(20) "assign"
rebuilt        : SymbolId(5) "assign"
Reference symbol mismatch for "freeze":
after transform: SymbolId(24) "freeze"
rebuilt        : SymbolId(8) "freeze"
Reference symbol mismatch for "pick":
after transform: SymbolId(27) "pick"
rebuilt        : SymbolId(10) "pick"
Reference symbol mismatch for "mapObject":
after transform: SymbolId(32) "mapObject"
rebuilt        : SymbolId(13) "mapObject"
Reference symbol mismatch for "proxify":
after transform: SymbolId(38) "proxify"
rebuilt        : SymbolId(16) "proxify"
Unresolved references mismatch:
after transform: ["Partial", "Pick", "Readonly", "Record"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypes3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(8), SymbolId(13), SymbolId(18), SymbolId(23), SymbolId(28)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(11), SymbolId(16)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Symbol reference IDs mismatch for "Box":
after transform: SymbolId(0): [ReferenceId(2), ReferenceId(11), ReferenceId(12)]
rebuilt        : SymbolId(1): []
Reference symbol mismatch for "boxify":
after transform: SymbolId(5) "boxify"
rebuilt        : SymbolId(2) "boxify"
Reference symbol mismatch for "unboxify":
after transform: SymbolId(8) "unboxify"
rebuilt        : SymbolId(4) "unboxify"
Reference symbol mismatch for "unboxify":
after transform: SymbolId(8) "unboxify"
rebuilt        : SymbolId(4) "unboxify"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypes4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(5)]
Unresolved references mismatch:
after transform: ["Partial", "Readonly"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypesArraysTuples.ts
Bindings mismatch:
after transform: ScopeId(0): ["acceptArray", "acceptMappedArray", "all", "f1", "f2", "mapArray", "nonpartial", "unboxify", "x10", "x11", "x12", "x20", "x21", "x22", "y10", "y11", "y12", "y20", "y21", "y22"]
rebuilt        : ScopeId(0): ["acceptArray", "acceptMappedArray", "all", "f1", "f2", "mapArray", "nonpartial", "unboxify", "y10", "y11", "y12", "y20", "y21", "y22"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(35), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(42), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
Reference symbol mismatch for "unboxify":
after transform: SymbolId(33) "unboxify"
rebuilt        : SymbolId(0) "unboxify"
Reference symbol mismatch for "x10":
after transform: SymbolId(36) "x10"
rebuilt        : <None>
Reference symbol mismatch for "unboxify":
after transform: SymbolId(33) "unboxify"
rebuilt        : SymbolId(0) "unboxify"
Reference symbol mismatch for "x11":
after transform: SymbolId(38) "x11"
rebuilt        : <None>
Reference symbol mismatch for "unboxify":
after transform: SymbolId(33) "unboxify"
rebuilt        : SymbolId(0) "unboxify"
Reference symbol mismatch for "x12":
after transform: SymbolId(40) "x12"
rebuilt        : <None>
Reference symbol mismatch for "nonpartial":
after transform: SymbolId(42) "nonpartial"
rebuilt        : SymbolId(5) "nonpartial"
Reference symbol mismatch for "x20":
after transform: SymbolId(45) "x20"
rebuilt        : <None>
Reference symbol mismatch for "nonpartial":
after transform: SymbolId(42) "nonpartial"
rebuilt        : SymbolId(5) "nonpartial"
Reference symbol mismatch for "x21":
after transform: SymbolId(47) "x21"
rebuilt        : <None>
Reference symbol mismatch for "nonpartial":
after transform: SymbolId(42) "nonpartial"
rebuilt        : SymbolId(5) "nonpartial"
Reference symbol mismatch for "x22":
after transform: SymbolId(49) "x22"
rebuilt        : <None>
Reference symbol mismatch for "all":
after transform: SymbolId(57) "all"
rebuilt        : SymbolId(10) "all"
Reference symbol mismatch for "all":
after transform: SymbolId(57) "all"
rebuilt        : SymbolId(10) "all"
Reference symbol mismatch for "all":
after transform: SymbolId(57) "all"
rebuilt        : SymbolId(10) "all"
Reference symbol mismatch for "all":
after transform: SymbolId(57) "all"
rebuilt        : SymbolId(10) "all"
Reference symbol mismatch for "acceptArray":
after transform: SymbolId(84) "acceptArray"
rebuilt        : SymbolId(25) "acceptArray"
Reference symbol mismatch for "mapArray":
after transform: SymbolId(86) "mapArray"
rebuilt        : SymbolId(27) "mapArray"
Unresolved references mismatch:
after transform: ["Array", "Partial", "Promise", "PromiseLike", "Readonly", "ReadonlyArray", "Required"]
rebuilt        : ["x10", "x11", "x12", "x20", "x21", "x22"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypesGenericTuples.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(25), ScopeId(27), ScopeId(29), ScopeId(31), ScopeId(32)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Readonly"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/mapped/mappedTypesGenericTuples2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "getT":
after transform: SymbolId(0) "getT"
rebuilt        : SymbolId(0) "getT"
Reference symbol mismatch for "getT":
after transform: SymbolId(0) "getT"
rebuilt        : SymbolId(0) "getT"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/augmentedTypeBracketAccessIndexSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeHidingMembersOfObject.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypePropertyAccess.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureAppearsToBeFunctionType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureHidingMembersOfExtendedFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithCallSignatureHidingMembersOfFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithConstructSignatureHidingMembersOfExtendedFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithConstructSignatureHidingMembersOfFunction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithNumericProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/objectTypeWithStringNamedPropertyOfIllegalCharacters.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(22)]
rebuilt        : SymbolId(1): [ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithOptionalProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithSpecializedCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(9), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(4), ReferenceId(9), ReferenceId(13), ReferenceId(30)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(5)]
Symbol reference IDs mismatch for "Derived1":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(7), ReferenceId(11), ReferenceId(26)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(3), ReferenceId(8), ReferenceId(12), ReferenceId(28)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/members/typesWithSpecializedConstructSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(9), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(6), ReferenceId(10), ReferenceId(22)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(5)]
Symbol reference IDs mismatch for "Derived1":
after transform: SymbolId(1): [ReferenceId(4), ReferenceId(8)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(9), ReferenceId(20)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/classWithOnlyPublicMembersEquivalentToInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4)]
rebuilt        : SymbolId(1): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/classWithOnlyPublicMembersEquivalentToInterface2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(12)]
rebuilt        : SymbolId(1): [ReferenceId(4)]
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/genericInstantiationEquivalentToObjectLiteral.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(9)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(5) "f"
rebuilt        : SymbolId(2) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(5) "f"
rebuilt        : SymbolId(2) "f"
Reference symbol mismatch for "f2":
after transform: SymbolId(9) "f2"
rebuilt        : SymbolId(4) "f2"
Reference symbol mismatch for "f2":
after transform: SymbolId(9) "f2"
rebuilt        : SymbolId(4) "f2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/namedTypes/optionalMethods.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(10), ScopeId(11), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7), ScopeId(9)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(2): [ScopeId(3), ScopeId(4), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12), ScopeId(15)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol reference IDs mismatch for "Bar":
after transform: SymbolId(6): [ReferenceId(10)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/never/neverInference.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(12), SymbolId(15), SymbolId(19), SymbolId(20)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(8), SymbolId(11), SymbolId(12)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "mkList":
after transform: SymbolId(15) "mkList"
rebuilt        : SymbolId(8) "mkList"
Reference symbol mismatch for "compareNumbers":
after transform: SymbolId(12) "compareNumbers"
rebuilt        : SymbolId(5) "compareNumbers"
Reference symbol mismatch for "f2":
after transform: SymbolId(20) "f2"
rebuilt        : SymbolId(12) "f2"
Reference symbol mismatch for "f2":
after transform: SymbolId(20) "f2"
rebuilt        : SymbolId(12) "f2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/never/neverType.ts
Scope children mismatch:
after transform: ScopeId(26): [ScopeId(27)]
rebuilt        : ScopeId(26): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/never/neverUnionIntersection.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/nonPrimitive/nonPrimitiveAndEmptyObject.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo", "fooProps"]
rebuilt        : ScopeId(0): ["fooProps"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "foo":
after transform: SymbolId(2) "foo"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["foo"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignatureWithoutAnnotationsOrBody.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignatureWithoutReturnTypeAnnotationInference.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesThatDifferOnlyByReturnType3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithOptionalParameters.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(8): [ReferenceId(6)]
rebuilt        : SymbolId(8): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/callSignaturesWithOptionalParameters2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(12), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(6): [ScopeId(7), ScopeId(8)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(9): [ReferenceId(4)]
rebuilt        : SymbolId(9): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(6), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/identicalCallSignatures3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/parametersWithNoAnnotationAreAny.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/specializedSignatureIsSubtypeOfNonSpecializedSignature.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(8), ScopeId(13), ScopeId(18), ScopeId(22), ScopeId(26), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8)]
Scope children mismatch:
after transform: ScopeId(4): [ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(4): [ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(8): [ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(6): [ScopeId(7)]
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(8): [ScopeId(9)]
Unresolved references mismatch:
after transform: ["String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/specializedSignatureWithOptional.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/stringLiteralTypesInImplementationSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterAsTypeArgument.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(7), ReferenceId(11)]
rebuilt        : SymbolId(4): [ReferenceId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/callSignatures/typeParameterUsedAsTypeParameterConstraint3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithIdenticalOverloads.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(12), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(6), ReferenceId(23), ReferenceId(24)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(7): [ReferenceId(4), ReferenceId(10), ReferenceId(13), ReferenceId(16), ReferenceId(19), ReferenceId(27), ReferenceId(30)]
rebuilt        : SymbolId(3): [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloads.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(12), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(5), ReferenceId(6), ReferenceId(23), ReferenceId(24)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(7): [ReferenceId(4), ReferenceId(10), ReferenceId(13), ReferenceId(16), ReferenceId(19), ReferenceId(27), ReferenceId(30)]
rebuilt        : SymbolId(3): [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/constructSignatures/constructSignaturesWithOverloadsThatDifferOnlyByReturnType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(6), ReferenceId(11), ReferenceId(13), ReferenceId(18)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C2":
after transform: SymbolId(2): [ReferenceId(2), ReferenceId(4), ReferenceId(8), ReferenceId(12), ReferenceId(15)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/indexSignatures/numericIndexingResults.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/indexSignatures/stringIndexingResults.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/methodSignatures/functionLiterals.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/methodSignatures/methodSignaturesWithOverloads2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/propertyNameWithoutTypeAnnotation.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/propertyNamesOfReservedWords.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Bindings mismatch:
after transform: ScopeId(3): ["E", "abstract", "as", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "false", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "is", "long", "namespace", "native", "new", "null", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "true", "try", "typeof", "use", "var", "void", "volatile", "while", "with"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "E":
after transform: SymbolId(11): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(11): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/objectTypeLiteral/propertySignatures/stringNamedPropertyAccess.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(8)]
rebuilt        : SymbolId(1): [ReferenceId(3), ReferenceId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/boolean/extendBooleanInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/boolean/validBooleanAssignments.ts
Unresolved references mismatch:
after transform: ["Boolean", "Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/number/extendNumberInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/number/validNumberAssignments.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(4): [ReferenceId(4), ReferenceId(6), ReferenceId(12)]
rebuilt        : SymbolId(4): [ReferenceId(6), ReferenceId(8)]
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/string/extendStringInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/string/validStringAssignments.ts
Unresolved references mismatch:
after transform: ["Object", "String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/stringLiteral/stringLiteralType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/undefined/invalidUndefinedValues.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/undefined/validUndefinedAssignments.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(9)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["require", "undefined"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/primitives/undefined/validUndefinedValues.ts
Unresolved reference IDs mismatch for "undefined":
after transform: [ReferenceId(0), ReferenceId(2)]
rebuilt        : [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/genericObjectRest.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "sa":
after transform: SymbolId(16): [ReferenceId(10), ReferenceId(13), ReferenceId(51)]
rebuilt        : SymbolId(23): [ReferenceId(32), ReferenceId(37)]
Symbol reference IDs mismatch for "sb":
after transform: SymbolId(17): [ReferenceId(11), ReferenceId(14), ReferenceId(52)]
rebuilt        : SymbolId(24): [ReferenceId(33), ReferenceId(38)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/genericRestParameters2.ts
Bindings mismatch:
after transform: ScopeId(0): ["f00", "f01", "f02", "f03", "f04", "f10", "f11", "f12", "f13", "f20", "ns", "sn", "t1", "t2", "t3", "t4"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(25), ScopeId(27), ScopeId(29)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "f10":
after transform: SymbolId(9) "f10"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "f11":
after transform: SymbolId(10) "f11"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "f12":
after transform: SymbolId(11) "f12"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "f13":
after transform: SymbolId(12) "f13"
rebuilt        : <None>
Reference symbol mismatch for "t4":
after transform: SymbolId(3) "t4"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f20":
after transform: SymbolId(15) "f20"
rebuilt        : <None>
Reference symbol mismatch for "t1":
after transform: SymbolId(0) "t1"
rebuilt        : <None>
Reference symbol mismatch for "f20":
after transform: SymbolId(15) "f20"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Reference symbol mismatch for "f20":
after transform: SymbolId(15) "f20"
rebuilt        : <None>
Reference symbol mismatch for "t3":
after transform: SymbolId(2) "t3"
rebuilt        : <None>
Reference symbol mismatch for "f20":
after transform: SymbolId(15) "f20"
rebuilt        : <None>
Reference symbol mismatch for "t2":
after transform: SymbolId(1) "t2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["ConstructorParameters", "Function", "Parameters"]
rebuilt        : ["f10", "f11", "f12", "f13", "f20", "t1", "t2", "t3", "t4"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRest2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(8), SymbolId(13)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(5)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "connectionFromArray":
after transform: SymbolId(0) "connectionFromArray"
rebuilt        : SymbolId(2) "connectionFromArray"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRestForOf.ts
Bindings mismatch:
after transform: ScopeId(0): ["_excluded", "_excluded2", "_objectSpread", "_objectWithoutProperties", "array", "rrestOff", "xx"]
rebuilt        : ScopeId(0): ["_excluded", "_excluded2", "_objectSpread", "_objectWithoutProperties", "_ref2", "_ref3", "array", "rrestOff", "xx"]
Bindings mismatch:
after transform: ScopeId(3): ["_ref2"]
rebuilt        : ScopeId(3): []
Bindings mismatch:
after transform: ScopeId(4): ["_ref3"]
rebuilt        : ScopeId(4): []
Symbol scope ID mismatch for "_ref2":
after transform: SymbolId(10): ScopeId(3)
rebuilt        : SymbolId(10): ScopeId(0)
Symbol scope ID mismatch for "_ref3":
after transform: SymbolId(11): ScopeId(4)
rebuilt        : SymbolId(11): ScopeId(0)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRestParameter.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(10), SymbolId(15), SymbolId(19), SymbolId(20), SymbolId(22), SymbolId(25), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(12), SymbolId(22), SymbolId(29)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8)]
Reference symbol mismatch for "suddenly":
after transform: SymbolId(3) "suddenly"
rebuilt        : SymbolId(12) "suddenly"
Reference symbol mismatch for "suddenly":
after transform: SymbolId(3) "suddenly"
rebuilt        : SymbolId(12) "suddenly"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRestParameterES5.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(10), SymbolId(15), SymbolId(19), SymbolId(20), SymbolId(22), SymbolId(25), SymbolId(26), SymbolId(28), SymbolId(30), SymbolId(32)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(12), SymbolId(22), SymbolId(29)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(8)]
Reference symbol mismatch for "suddenly":
after transform: SymbolId(3) "suddenly"
rebuilt        : SymbolId(12) "suddenly"
Reference symbol mismatch for "suddenly":
after transform: SymbolId(3) "suddenly"
rebuilt        : SymbolId(12) "suddenly"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/rest/objectRestReadonly.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Readonly", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/arrayOfFunctionTypes3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/arrayTypeOfTypeOf.ts
Symbol reference IDs mismatch for "x":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(4)]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteral.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteralForOverloads.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/functionLiteralForOverloads2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(1)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(4): [ReferenceId(6), ReferenceId(8), ReferenceId(10)]
rebuilt        : SymbolId(2): [ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeLiterals/parenthesizedTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(4), ReferenceId(5)]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeQueryOnClass.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(10), ReferenceId(12)]
rebuilt        : SymbolId(1): [ReferenceId(5), ReferenceId(7)]
Symbol reference IDs mismatch for "c":
after transform: SymbolId(12): [ReferenceId(2)]
rebuilt        : SymbolId(8): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(15): [ReferenceId(4), ReferenceId(5)]
rebuilt        : SymbolId(11): []
Symbol reference IDs mismatch for "d":
after transform: SymbolId(18): [ReferenceId(6)]
rebuilt        : SymbolId(13): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeQueryWithReservedWords.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol reference IDs mismatch for "Controller":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeofClass2.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(8): [ReferenceId(2), ReferenceId(3)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "d":
after transform: SymbolId(10): [ReferenceId(4)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/specifyingTypes/typeQueries/typeofModuleWithoutExports.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "M":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "M":
after transform: SymbolId(0): Span { start: 7, end: 8 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "M":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/objectSpread.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(32): [ReferenceId(36), ReferenceId(37)]
rebuilt        : SymbolId(33): [ReferenceId(69)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/objectSpreadRepeatedComplexity.ts
Unresolved references mismatch:
after transform: ["Record", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/objectSpreadRepeatedNullCheckPerf.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Record", "require", "undefined"]
rebuilt        : ["require", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadContextualTypedBindingPattern.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "age", "alice", "bob", "naam"]
rebuilt        : ScopeId(0): ["_objectSpread", "age", "naam"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "bob":
after transform: SymbolId(1) "bob"
rebuilt        : <None>
Reference symbol mismatch for "alice":
after transform: SymbolId(2) "alice"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["alice", "bob", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadExcessProperty.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadNonPrimitive.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "o", "x"]
rebuilt        : ScopeId(0): ["_objectSpread", "x"]
Reference symbol mismatch for "o":
after transform: SymbolId(0) "o"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["o", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadOverwritesProperty.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "ab", "abq", "g", "h", "unused1", "unused2", "unused3"]
rebuilt        : ScopeId(0): ["_objectSpread", "g", "h", "unused1", "unused2", "unused3"]
Reference symbol mismatch for "ab":
after transform: SymbolId(0) "ab"
rebuilt        : <None>
Reference symbol mismatch for "ab":
after transform: SymbolId(0) "ab"
rebuilt        : <None>
Reference symbol mismatch for "ab":
after transform: SymbolId(0) "ab"
rebuilt        : <None>
Reference symbol mismatch for "abq":
after transform: SymbolId(1) "abq"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["ab", "abq", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/spread/spreadUnion4.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "a", "b", "c"]
rebuilt        : ScopeId(0): ["_objectSpread", "c"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(0) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(1) "b"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["a", "b", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralCheckedInIf01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralCheckedInIf02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralMatchedInSwitch01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypeAssertion01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAndParenthesizedExpressions01.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "myRandBool":
after transform: SymbolId(0) "myRandBool"
rebuilt        : SymbolId(0) "myRandBool"
Reference symbol mismatch for "myRandBool":
after transform: SymbolId(0) "myRandBool"
rebuilt        : SymbolId(0) "myRandBool"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAndTuples01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAsTags01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAsTags02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAsTags03.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAsTypeParameterConstraint01.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesAsTypeParameterConstraint02.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesInUnionTypes01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(14), ReferenceId(17)]
rebuilt        : SymbolId(0): [ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(7), ReferenceId(11), ReferenceId(14)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(15), ReferenceId(16)]
rebuilt        : SymbolId(1): [ReferenceId(6), ReferenceId(8), ReferenceId(12), ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesInUnionTypes02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(14), ReferenceId(17)]
rebuilt        : SymbolId(0): [ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(7), ReferenceId(11), ReferenceId(14)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(15), ReferenceId(16)]
rebuilt        : SymbolId(1): [ReferenceId(6), ReferenceId(8), ReferenceId(12), ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesInUnionTypes03.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "x":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(5), ReferenceId(7), ReferenceId(9), ReferenceId(13), ReferenceId(16)]
rebuilt        : SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(4), ReferenceId(6), ReferenceId(10), ReferenceId(13)]
Symbol reference IDs mismatch for "y":
after transform: SymbolId(2): [ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(14), ReferenceId(15)]
rebuilt        : SymbolId(1): [ReferenceId(5), ReferenceId(7), ReferenceId(11), ReferenceId(12)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesInUnionTypes04.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloadAssignability03.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloadAssignability04.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloadAssignability05.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloads01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(12), ScopeId(13)]
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(14): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(13): ScopeFlags(Function)
Symbol flags mismatch for "Consts1":
after transform: SymbolId(10): SymbolFlags(ValueModule)
rebuilt        : SymbolId(9): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Consts1":
after transform: SymbolId(10): Span { start: 807, end: 814 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol flags mismatch for "Consts2":
after transform: SymbolId(21): SymbolFlags(ValueModule)
rebuilt        : SymbolId(21): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Consts2":
after transform: SymbolId(21): Span { start: 1271, end: 1278 }
rebuilt        : SymbolId(21): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloads02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(12), ScopeId(13)]
Scope flags mismatch:
after transform: ScopeId(12): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(13): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(13): ScopeFlags(Function)
Symbol flags mismatch for "Consts1":
after transform: SymbolId(9): SymbolFlags(ValueModule)
rebuilt        : SymbolId(9): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Consts1":
after transform: SymbolId(9): Span { start: 745, end: 752 }
rebuilt        : SymbolId(9): Span { start: 0, end: 0 }
Symbol flags mismatch for "Consts2":
after transform: SymbolId(20): SymbolFlags(ValueModule)
rebuilt        : SymbolId(21): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Consts2":
after transform: SymbolId(20): Span { start: 1178, end: 1185 }
rebuilt        : SymbolId(21): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloads03.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesOverloads04.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0)]
rebuilt        : ScopeId(0): [SymbolId(0)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/stringLiteral/stringLiteralTypesTypePredicates01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/contextualThisType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/fluentClasses.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/fluentInterfaces.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/inferThisType.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(7), ScopeId(9), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f":
after transform: SymbolId(0) "f"
rebuilt        : SymbolId(0) "f"
Reference symbol mismatch for "h":
after transform: SymbolId(3) "h"
rebuilt        : SymbolId(2) "h"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeAndConstraints.ts
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(8)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInBasePropertyAndDerivedContainerOfBase01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInClasses.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(9), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(9)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(23)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(23)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol flags mismatch for "C4":
after transform: SymbolId(6): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(5): SymbolFlags(Class)
Unresolved references mismatch:
after transform: ["Date", "require", "undefined"]
rebuilt        : ["require", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInFunctions3.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "Base":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Class)

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInFunctions4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2), SymbolId(4), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(4)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8)]
rebuilt        : ScopeId(4): []
Reference symbol mismatch for "isCorrect":
after transform: SymbolId(2) "isCorrect"
rebuilt        : SymbolId(0) "isCorrect"
Reference symbol mismatch for "callsCallback":
after transform: SymbolId(4) "callsCallback"
rebuilt        : SymbolId(2) "callsCallback"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInInterfaces.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInObjectLiterals.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInObjectLiterals2.ts
Bindings mismatch:
after transform: ScopeId(0): ["Vue", "defineProp", "defineProps", "f1", "f2", "makeObject", "makeObject2", "obj1", "p1", "p10", "p11", "p12", "p2", "p3", "p4", "vue", "x1", "x2"]
rebuilt        : ScopeId(0): ["defineProp", "defineProps", "f1", "f2", "makeObject", "makeObject2", "obj1", "p1", "p10", "p11", "p12", "p2", "p3", "p4", "vue", "x1", "x2"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(19), ScopeId(20), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(31), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(42), ScopeId(43), ScopeId(46), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(12), ScopeId(14), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34)]
Reference symbol mismatch for "f1":
after transform: SymbolId(19) "f1"
rebuilt        : SymbolId(18) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(24) "f2"
rebuilt        : SymbolId(23) "f2"
Reference symbol mismatch for "makeObject":
after transform: SymbolId(32) "makeObject"
rebuilt        : SymbolId(28) "makeObject"
Reference symbol mismatch for "makeObject2":
after transform: SymbolId(42) "makeObject2"
rebuilt        : SymbolId(33) "makeObject2"
Reference symbol mismatch for "defineProp":
after transform: SymbolId(54) "defineProp"
rebuilt        : SymbolId(38) "defineProp"
Reference symbol mismatch for "defineProp":
after transform: SymbolId(54) "defineProp"
rebuilt        : SymbolId(38) "defineProp"
Reference symbol mismatch for "defineProps":
after transform: SymbolId(61) "defineProps"
rebuilt        : SymbolId(42) "defineProps"
Reference symbol mismatch for "Vue":
after transform: SymbolId(82) "Vue"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Record", "ThisType"]
rebuilt        : ["Vue"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInTaggedTemplateCall.ts
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3)]
rebuilt        : ScopeId(2): []
Unresolved references mismatch:
after transform: ["TemplateStringsArray"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInTuples.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeInTypePredicate.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "filter":
after transform: SymbolId(0) "filter"
rebuilt        : SymbolId(0) "filter"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeOptionalCall.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/thisType/thisTypeSyntacticContext.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/namedTupleMembers.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "argumentsOfG", "argumentsOfGAsFirstArgument", "b", "c", "d", "f", "func", "g", "getArgsForInjection", "q", "r", "readSegment", "useState", "val", "x", "y"]
rebuilt        : ScopeId(0): ["argumentsOfG", "argumentsOfGAsFirstArgument", "f", "func", "g", "getArgsForInjection", "readSegment", "useState", "val"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7)]
rebuilt        : ScopeId(1): []
Symbol reference IDs mismatch for "readSegment":
after transform: SymbolId(14): [ReferenceId(33)]
rebuilt        : SymbolId(3): []
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(2) "a"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(3) "b"
rebuilt        : <None>
Reference symbol mismatch for "d":
after transform: SymbolId(5) "d"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(4) "c"
rebuilt        : <None>
Reference symbol mismatch for "q":
after transform: SymbolId(20) "q"
rebuilt        : <None>
Reference symbol mismatch for "r":
after transform: SymbolId(21) "r"
rebuilt        : <None>
Reference symbol mismatch for "r":
after transform: SymbolId(21) "r"
rebuilt        : <None>
Reference symbol mismatch for "q":
after transform: SymbolId(20) "q"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(24) "x"
rebuilt        : <None>
Reference symbol mismatch for "y":
after transform: SymbolId(25) "y"
rebuilt        : <None>
Reference symbol mismatch for "y":
after transform: SymbolId(25) "y"
rebuilt        : <None>
Reference symbol mismatch for "x":
after transform: SymbolId(24) "x"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(26) "f"
rebuilt        : SymbolId(7) "f"
Reference symbol mismatch for "getArgsForInjection":
after transform: SymbolId(32) "getArgsForInjection"
rebuilt        : SymbolId(12) "getArgsForInjection"
Reference symbol mismatch for "g":
after transform: SymbolId(29) "g"
rebuilt        : SymbolId(9) "g"
Reference symbol mismatch for "f":
after transform: SymbolId(26) "f"
rebuilt        : SymbolId(7) "f"
Reference symbol mismatch for "getArgsForInjection":
after transform: SymbolId(32) "getArgsForInjection"
rebuilt        : SymbolId(12) "getArgsForInjection"
Reference symbol mismatch for "g":
after transform: SymbolId(29) "g"
rebuilt        : SymbolId(9) "g"
Unresolved references mismatch:
after transform: ["Parameters"]
rebuilt        : ["a", "b", "c", "d", "q", "r", "x", "y"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples.ts
Bindings mismatch:
after transform: ScopeId(0): ["fa1", "fa2", "fb1", "fb2", "fb3", "input", "output", "test"]
rebuilt        : ScopeId(0): ["fa1", "fa2", "fb1", "fb2", "fb3", "output", "test"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
Reference symbol mismatch for "test":
after transform: SymbolId(34) "test"
rebuilt        : SymbolId(13) "test"
Reference symbol mismatch for "input":
after transform: SymbolId(38) "input"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["input"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Iterable"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/named/partiallyNamedTuples3.ts
Bindings mismatch:
after transform: ScopeId(0): ["output", "tuple"]
rebuilt        : ScopeId(0): ["output"]
Reference symbol mismatch for "tuple":
after transform: SymbolId(0) "tuple"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["tuple"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/readonlyArraysAndTuples2.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "_decorate", "_decorateMetadata", "_defineProperty", "f1", "someDec"]
rebuilt        : ScopeId(0): ["A", "_decorate", "_decorateMetadata", "_defineProperty", "f1"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "someDec":
after transform: SymbolId(11) "someDec"
rebuilt        : <None>
Reference symbol mismatch for "someDec":
after transform: SymbolId(11) "someDec"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Array", "ReadonlyArray", "require"]
rebuilt        : ["Array", "require", "someDec"]
Unresolved reference IDs mismatch for "Array":
after transform: [ReferenceId(0), ReferenceId(6), ReferenceId(10)]
rebuilt        : [ReferenceId(8), ReferenceId(13)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/typeInferenceWithTupleType.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(16), SymbolId(17), SymbolId(18), SymbolId(19), SymbolId(23), SymbolId(27)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(17), SymbolId(19)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6), ScopeId(7)]
Reference symbol mismatch for "f1":
after transform: SymbolId(19) "f1"
rebuilt        : SymbolId(15) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(23) "f2"
rebuilt        : SymbolId(17) "f2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/wideningTuples1.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/tuple/wideningTuples2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/asiPreventsParsingAsTypeAlias02.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "container":
after transform: SymbolId(3): SymbolFlags(ValueModule)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "container":
after transform: SymbolId(3): Span { start: 42, end: 51 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/builtinIteratorReturn.ts
Bindings mismatch:
after transform: ScopeId(0): ["array", "i0", "i1", "i10", "i11", "i12", "i13", "i14", "i15", "i16", "i17", "i2", "i3", "i4", "i5", "i6", "i7", "i8", "i9", "map", "set"]
rebuilt        : ScopeId(0): ["i0", "i1", "i10", "i11", "i2", "i3", "i4", "i5", "i6", "i7", "i8", "i9"]
Reference symbol mismatch for "array":
after transform: SymbolId(0) "array"
rebuilt        : <None>
Reference symbol mismatch for "array":
after transform: SymbolId(0) "array"
rebuilt        : <None>
Reference symbol mismatch for "array":
after transform: SymbolId(0) "array"
rebuilt        : <None>
Reference symbol mismatch for "array":
after transform: SymbolId(0) "array"
rebuilt        : <None>
Reference symbol mismatch for "array":
after transform: SymbolId(0) "array"
rebuilt        : <None>
Reference symbol mismatch for "map":
after transform: SymbolId(1) "map"
rebuilt        : <None>
Reference symbol mismatch for "map":
after transform: SymbolId(1) "map"
rebuilt        : <None>
Reference symbol mismatch for "map":
after transform: SymbolId(1) "map"
rebuilt        : <None>
Reference symbol mismatch for "map":
after transform: SymbolId(1) "map"
rebuilt        : <None>
Reference symbol mismatch for "map":
after transform: SymbolId(1) "map"
rebuilt        : <None>
Reference symbol mismatch for "set":
after transform: SymbolId(2) "set"
rebuilt        : <None>
Reference symbol mismatch for "set":
after transform: SymbolId(2) "set"
rebuilt        : <None>
Reference symbol mismatch for "set":
after transform: SymbolId(2) "set"
rebuilt        : <None>
Reference symbol mismatch for "set":
after transform: SymbolId(2) "set"
rebuilt        : <None>
Reference symbol mismatch for "set":
after transform: SymbolId(2) "set"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Iterable", "IterableIterator", "Map", "Set", "Symbol"]
rebuilt        : ["Symbol", "array", "map", "set"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/circularTypeAliasForUnionWithClass.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Symbol reference IDs mismatch for "I0":
after transform: SymbolId(2): [ReferenceId(1)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "I3":
after transform: SymbolId(5): [ReferenceId(4)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "I4":
after transform: SymbolId(8): [ReferenceId(7)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/circularTypeAliasForUnionWithInterface.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/classDoesNotDependOnBaseTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Symbol reference IDs mismatch for "StringTreeCollection":
after transform: SymbolId(2): [ReferenceId(0), ReferenceId(7)]
rebuilt        : SymbolId(1): [ReferenceId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/genericTypeAliases.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope children mismatch:
after transform: ScopeId(11): [ScopeId(12)]
rebuilt        : ScopeId(2): []
Scope children mismatch:
after transform: ScopeId(13): [ScopeId(14)]
rebuilt        : ScopeId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/interfaceDoesNotDependOnBaseTypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeAliases/typeAliases.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(3), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(12), SymbolId(13), SymbolId(15), SymbolId(17), SymbolId(19), SymbolId(21), SymbolId(23), SymbolId(26), SymbolId(27), SymbolId(28), SymbolId(34), SymbolId(35), SymbolId(37), SymbolId(41), SymbolId(43), SymbolId(47), SymbolId(49), SymbolId(50), SymbolId(51)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(18), SymbolId(19), SymbolId(21), SymbolId(24), SymbolId(26), SymbolId(29), SymbolId(31), SymbolId(32)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
Bindings mismatch:
after transform: ScopeId(26): ["E", "x"]
rebuilt        : ScopeId(7): ["E"]
Scope flags mismatch:
after transform: ScopeId(26): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Symbol reference IDs mismatch for "C7":
after transform: SymbolId(13): [ReferenceId(8), ReferenceId(9)]
rebuilt        : SymbolId(7): []
Symbol flags mismatch for "E":
after transform: SymbolId(41): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(24): SymbolFlags(FunctionScopedVariable)
Reference symbol mismatch for "foo13":
after transform: SymbolId(28) "foo13"
rebuilt        : SymbolId(15) "foo13"
Reference symbol mismatch for "foo13":
after transform: SymbolId(28) "foo13"
rebuilt        : SymbolId(15) "foo13"
Reference symbol mismatch for "f15":
after transform: SymbolId(43) "f15"
rebuilt        : SymbolId(26) "f15"
Reference symbol mismatch for "f16":
after transform: SymbolId(47) "f16"
rebuilt        : SymbolId(29) "f16"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/recurringTypeParamForContainerOfBase01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/callGenericFunctionWithZeroTypeArguments.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithAny.ts
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(3): []
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(8): [ScopeId(9)]
Unresolved references mismatch:
after transform: ["String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithAny2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(5)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(0) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/constraintSatisfactionWithEmptyObject.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5)]
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/functionConstraintSatisfaction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
Scope children mismatch:
after transform: ScopeId(25): [ScopeId(26), ScopeId(27)]
rebuilt        : ScopeId(14): []
Unresolved references mismatch:
after transform: ["Date", "Function", "require"]
rebuilt        : ["Function", "require"]
Unresolved reference IDs mismatch for "Function":
after transform: [ReferenceId(0), ReferenceId(6), ReferenceId(58)]
rebuilt        : [ReferenceId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/functionConstraintSatisfaction3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraint.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraintTransitively.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/typeParameterAsTypeParameterConstraintTransitively2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeArgumentLists/wrappedAndRecursiveConstraints2.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(4), ReferenceId(5)]
rebuilt        : SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/innerTypeParameterShadowingOuterOne.ts
Unresolved references mismatch:
after transform: ["Date", "Number"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/innerTypeParameterShadowingOuterOne2.ts
Unresolved references mismatch:
after transform: ["Date", "Number"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Unresolved reference IDs mismatch for "Date":
after transform: [ReferenceId(0), ReferenceId(6), ReferenceId(7), ReferenceId(10), ReferenceId(13), ReferenceId(16), ReferenceId(18), ReferenceId(24)]
rebuilt        : [ReferenceId(12)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(13), ReferenceId(16), ReferenceId(18), ReferenceId(19), ReferenceId(23), ReferenceId(26), ReferenceId(27), ReferenceId(29), ReferenceId(30), ReferenceId(33), ReferenceId(34), ReferenceId(39), ReferenceId(40), ReferenceId(49), ReferenceId(50)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(12), ReferenceId(15), ReferenceId(17), ReferenceId(22), ReferenceId(42)]
rebuilt        : SymbolId(1): [ReferenceId(9), ReferenceId(14)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithConstraints3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(8)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(12), ReferenceId(15), ReferenceId(18), ReferenceId(22), ReferenceId(26), ReferenceId(30), ReferenceId(39)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(13), ReferenceId(16), ReferenceId(17), ReferenceId(23), ReferenceId(36), ReferenceId(38), ReferenceId(46)]
rebuilt        : SymbolId(1): [ReferenceId(9), ReferenceId(15), ReferenceId(17), ReferenceId(22)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/propertyAccessOnTypeParameterWithoutConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParameterConstModifiersReverseMappedTypes.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(4), SymbolId(5), SymbolId(9), SymbolId(10), SymbolId(14), SymbolId(15), SymbolId(19), SymbolId(20), SymbolId(24)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(5), SymbolId(6), SymbolId(8), SymbolId(9), SymbolId(11), SymbolId(12), SymbolId(14)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Reference symbol mismatch for "test1":
after transform: SymbolId(0) "test1"
rebuilt        : SymbolId(0) "test1"
Reference symbol mismatch for "test2":
after transform: SymbolId(5) "test2"
rebuilt        : SymbolId(3) "test2"
Reference symbol mismatch for "test3":
after transform: SymbolId(10) "test3"
rebuilt        : SymbolId(6) "test3"
Reference symbol mismatch for "test4":
after transform: SymbolId(15) "test4"
rebuilt        : SymbolId(9) "test4"
Reference symbol mismatch for "test5":
after transform: SymbolId(20) "test5"
rebuilt        : SymbolId(12) "test5"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParameterConstModifiersWithIntersection.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(2), SymbolId(6)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "test":
after transform: SymbolId(2) "test"
rebuilt        : SymbolId(0) "test"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeParameters/typeParameterLists/typeParameterUsedAsConstraint.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18)]
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignabilityInInheritance.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignableToEveryType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Bindings mismatch:
after transform: ScopeId(3): ["A", "E"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "E":
after transform: SymbolId(5): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(5): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(5): [ReferenceId(2), ReferenceId(46)]
rebuilt        : SymbolId(5): [ReferenceId(5)]
Unresolved references mismatch:
after transform: ["Date", "Function", "Number", "Object", "String", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/anyAssignableToEveryType2.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithGenericCallSignatures3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4)]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(6): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(6): [ScopeId(7), ScopeId(9)]
Symbol flags mismatch for "SimpleTypes":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "SimpleTypes":
after transform: SymbolId(0): Span { start: 146, end: 157 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "S":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "T":
after transform: SymbolId(2): [ReferenceId(1)]
rebuilt        : SymbolId(4): []
Symbol flags mismatch for "ObjectTypes":
after transform: SymbolId(13): SymbolFlags(ValueModule)
rebuilt        : SymbolId(13): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "ObjectTypes":
after transform: SymbolId(13): Span { start: 700, end: 711 }
rebuilt        : SymbolId(13): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "S":
after transform: SymbolId(14): [ReferenceId(42), ReferenceId(44)]
rebuilt        : SymbolId(15): []
Symbol reference IDs mismatch for "T":
after transform: SymbolId(15): [ReferenceId(43), ReferenceId(45)]
rebuilt        : SymbolId(16): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(22): [ReferenceId(50), ReferenceId(72), ReferenceId(75), ReferenceId(76), ReferenceId(78), ReferenceId(80)]
rebuilt        : SymbolId(21): [ReferenceId(65), ReferenceId(68), ReferenceId(69), ReferenceId(71), ReferenceId(73)]
Symbol reference IDs mismatch for "b":
after transform: SymbolId(23): [ReferenceId(51), ReferenceId(69), ReferenceId(73), ReferenceId(74), ReferenceId(87)]
rebuilt        : SymbolId(22): [ReferenceId(62), ReferenceId(66), ReferenceId(67), ReferenceId(80)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "S":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "T":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembers3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "S":
after transform: SymbolId(0): [ReferenceId(2)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "T":
after transform: SymbolId(1): [ReferenceId(3)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/assignmentCompatWithObjectMembersNumericNames.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3)]
Symbol reference IDs mismatch for "S":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "T":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(44)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(24), ReferenceId(26), ReferenceId(32), ReferenceId(40), ReferenceId(56), ReferenceId(61), ReferenceId(67), ReferenceId(75), ReferenceId(85), ReferenceId(90), ReferenceId(92), ReferenceId(99), ReferenceId(107)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(30), ReferenceId(34), ReferenceId(36), ReferenceId(38), ReferenceId(57), ReferenceId(62), ReferenceId(68), ReferenceId(76), ReferenceId(82), ReferenceId(95), ReferenceId(97)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(28)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Array", "Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(27)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(12), ReferenceId(19), ReferenceId(23), ReferenceId(31), ReferenceId(38), ReferenceId(44), ReferenceId(58), ReferenceId(66)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(14), ReferenceId(27), ReferenceId(35), ReferenceId(59)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(41)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/callSignatureAssignabilityInInheritance5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(30), ScopeId(32)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(24), ReferenceId(26), ReferenceId(32), ReferenceId(53), ReferenceId(58), ReferenceId(64), ReferenceId(72), ReferenceId(82), ReferenceId(87), ReferenceId(89), ReferenceId(96)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(30), ReferenceId(34), ReferenceId(36), ReferenceId(54), ReferenceId(59), ReferenceId(65), ReferenceId(73), ReferenceId(79), ReferenceId(92), ReferenceId(94)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(28)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Array", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(44)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(24), ReferenceId(26), ReferenceId(32), ReferenceId(40), ReferenceId(56), ReferenceId(61), ReferenceId(67), ReferenceId(75), ReferenceId(85), ReferenceId(90), ReferenceId(92), ReferenceId(99), ReferenceId(107)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(30), ReferenceId(34), ReferenceId(36), ReferenceId(38), ReferenceId(57), ReferenceId(62), ReferenceId(68), ReferenceId(76), ReferenceId(82), ReferenceId(95), ReferenceId(97)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(28)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Array", "Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(31)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(12), ReferenceId(19), ReferenceId(23), ReferenceId(27), ReferenceId(35), ReferenceId(41), ReferenceId(48), ReferenceId(51), ReferenceId(68), ReferenceId(76), ReferenceId(83), ReferenceId(86), ReferenceId(88), ReferenceId(92)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(14), ReferenceId(30), ReferenceId(33), ReferenceId(37), ReferenceId(45), ReferenceId(69)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(54)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/constructSignatureAssignabilityInInheritance5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(30), ScopeId(32)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(24), ReferenceId(26), ReferenceId(32), ReferenceId(53), ReferenceId(58), ReferenceId(64), ReferenceId(72), ReferenceId(82), ReferenceId(87), ReferenceId(89), ReferenceId(96)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(30), ReferenceId(34), ReferenceId(36), ReferenceId(54), ReferenceId(59), ReferenceId(65), ReferenceId(73), ReferenceId(79), ReferenceId(92), ReferenceId(94)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(28)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Array", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/everyTypeAssignableToAny.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Bindings mismatch:
after transform: ScopeId(3): ["A", "E"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "E":
after transform: SymbolId(5): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(5): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(5): [ReferenceId(2), ReferenceId(60)]
rebuilt        : SymbolId(5): [ReferenceId(5)]
Unresolved references mismatch:
after transform: ["Date", "Function", "Number", "Object", "String", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/intersectionIncludingPropFromGlobalAugmentation.ts
Bindings mismatch:
after transform: ScopeId(0): ["_objectSpread", "hasOwn", "source", "target", "toString"]
rebuilt        : ScopeId(0): ["_objectSpread", "hasOwn", "target", "toString"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "source":
after transform: SymbolId(2) "source"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["source"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/nullAssignableToEveryType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Bindings mismatch:
after transform: ScopeId(3): ["A", "E"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "E":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(4): [ReferenceId(2), ReferenceId(24)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Unresolved references mismatch:
after transform: ["Date", "Function", "Number", "Object", "String", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/numberAssignableToEnum.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(8)]
rebuilt        : SymbolId(0): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/assignmentCompatibility/undefinedAssignableToEveryType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4)]
Bindings mismatch:
after transform: ScopeId(3): ["A", "E"]
rebuilt        : ScopeId(3): ["E"]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(0x0)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "E":
after transform: SymbolId(4): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(4): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(4): [ReferenceId(2), ReferenceId(46)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Unresolved references mismatch:
after transform: ["Date", "Function", "Number", "Object", "String", "require", "undefined"]
rebuilt        : ["require", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/arrayLiteralWithMultipleBestCommonTypes.ts
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/bestCommonTypeOfConditionalExpressions.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(2): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(13)]
rebuilt        : SymbolId(3): [ReferenceId(2), ReferenceId(5)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(4): [ReferenceId(4)]
rebuilt        : SymbolId(6): []
Unresolved references mismatch:
after transform: ["Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/bestCommonTypeOfConditionalExpressions2.ts
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(5)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(3)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(4)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/functionWithMultipleReturnStatements2.ts
Unresolved reference IDs mismatch for "Object":
after transform: [ReferenceId(1), ReferenceId(8), ReferenceId(9)]
rebuilt        : [ReferenceId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/bestCommonType/heterogeneousArrayLiterals.ts
Scope flags mismatch:
after transform: ScopeId(15): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(18): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(29): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(32): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(29): [ScopeId(30), ScopeId(31), ScopeId(32)]
rebuilt        : ScopeId(32): [ScopeId(33), ScopeId(34)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(14): [ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(27), ReferenceId(32), ReferenceId(47), ReferenceId(91), ReferenceId(92), ReferenceId(113)]
rebuilt        : SymbolId(15): [ReferenceId(3), ReferenceId(6)]
Symbol flags mismatch for "Derived":
after transform: SymbolId(15): SymbolFlags(Class | ValueModule)
rebuilt        : SymbolId(16): SymbolFlags(Class)
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(15): [ReferenceId(4), ReferenceId(30), ReferenceId(31), ReferenceId(48), ReferenceId(69), ReferenceId(70), ReferenceId(116), ReferenceId(117)]
rebuilt        : SymbolId(16): [ReferenceId(30), ReferenceId(31)]
Symbol redeclarations mismatch for "Derived":
after transform: SymbolId(15): [Span { start: 689, end: 696 }, Span { start: 842, end: 849 }]
rebuilt        : SymbolId(16): []
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(16): [ReferenceId(5)]
rebuilt        : SymbolId(18): []
Symbol flags mismatch for "WithContextualType":
after transform: SymbolId(30): SymbolFlags(ValueModule)
rebuilt        : SymbolId(34): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "WithContextualType":
after transform: SymbolId(30): Span { start: 1461, end: 1479 }
rebuilt        : SymbolId(34): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/equalityWithUnionTypes01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/independentPropertyVariance.ts
Bindings mismatch:
after transform: ScopeId(0): ["x", "y"]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "x":
after transform: SymbolId(0) "x"
rebuilt        : <None>
Reference symbol mismatch for "y":
after transform: SymbolId(1) "y"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["x", "y"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/optionalProperties01.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/optionalProperties02.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/comparable/weakTypesAndLiterals01.ts
Bindings mismatch:
after transform: ScopeId(0): ["aOrB", "f", "g", "h", "i"]
rebuilt        : ScopeId(0): ["f", "g", "h", "i"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(5), ScopeId(8), ScopeId(11), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(4), ScopeId(7), ScopeId(10)]
Reference symbol mismatch for "aOrB":
after transform: SymbolId(2) "aOrB"
rebuilt        : <None>
Reference symbol mismatch for "aOrB":
after transform: SymbolId(2) "aOrB"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["aOrB"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/instanceOf/narrowingConstrainedTypeVariable.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(3), ReferenceId(7), ReferenceId(12)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(6)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(6): [ReferenceId(8)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "E":
after transform: SymbolId(13): [ReferenceId(17), ReferenceId(20)]
rebuilt        : SymbolId(11): [ReferenceId(11)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/arrayLiteralsWithRecursiveGenerics.ts
Symbol reference IDs mismatch for "List":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(4), ReferenceId(11), ReferenceId(12)]
rebuilt        : SymbolId(1): [ReferenceId(3)]
Symbol reference IDs mismatch for "DerivedList":
after transform: SymbolId(2): [ReferenceId(19)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "MyList":
after transform: SymbolId(4): [ReferenceId(8), ReferenceId(9), ReferenceId(13)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/infiniteExpansionThroughInstantiation2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/infiniteExpansionThroughTypeInference.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/nominalSubtypeCheckOfTypeParameter.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(6)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/nominalSubtypeCheckOfTypeParameter2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypeInGenericConstraint.ts
Symbol reference IDs mismatch for "G":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(3), ReferenceId(6), ReferenceId(7)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(4): [ReferenceId(10)]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/recursiveTypes/recursiveTypesUsedAsFunctionParameters.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17)]
rebuilt        : ScopeId(11): [ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19)]
Symbol reference IDs mismatch for "List":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(18), ReferenceId(24), ReferenceId(27), ReferenceId(31)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "MyList":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(21), ReferenceId(29), ReferenceId(32)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/nullIsSubtypeOfEverythingButUndefined.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/stringLiteralTypeIsSubtypeOfString.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(28), ScopeId(29), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71)]
Bindings mismatch:
after transform: ScopeId(63): ["A", "E"]
rebuilt        : ScopeId(62): ["E"]
Scope flags mismatch:
after transform: ScopeId(63): ScopeFlags(0x0)
rebuilt        : ScopeId(62): ScopeFlags(Function)
Symbol reference IDs mismatch for "C":
after transform: SymbolId(36): [ReferenceId(5)]
rebuilt        : SymbolId(37): []
Symbol flags mismatch for "E":
after transform: SymbolId(80): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(74): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(80): [ReferenceId(13), ReferenceId(29)]
rebuilt        : SymbolId(74): [ReferenceId(5)]
Unresolved references mismatch:
after transform: ["Date", "Object", "RegExp", "RegExpMatchArray", "String", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfAny.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypesOfTypeParameterWithConstraints2.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures.ts
Binding symbols mismatch:
after transform: ScopeId(1): [SymbolId(1), SymbolId(4), SymbolId(6), SymbolId(9), SymbolId(12), SymbolId(15), SymbolId(18)]
rebuilt        : ScopeId(1): [SymbolId(1), SymbolId(2), SymbolId(5), SymbolId(7), SymbolId(9), SymbolId(12), SymbolId(15)]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9)]
Symbol flags mismatch for "CallSignature":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "CallSignature":
after transform: SymbolId(0): Span { start: 7, end: 20 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : SymbolId(2) "foo1"
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : SymbolId(2) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : SymbolId(9) "foo2"
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : SymbolId(9) "foo2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(13), SymbolId(16), SymbolId(19), SymbolId(22), SymbolId(25), SymbolId(28), SymbolId(31), SymbolId(34), SymbolId(37), SymbolId(40), SymbolId(43), SymbolId(46), SymbolId(49), SymbolId(54), SymbolId(57), SymbolId(60), SymbolId(63), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(71), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(79), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(89), SymbolId(92), SymbolId(93), SymbolId(94), SymbolId(95), SymbolId(99), SymbolId(101), SymbolId(102), SymbolId(103), SymbolId(104), SymbolId(108), SymbolId(110), SymbolId(111), SymbolId(112), SymbolId(113), SymbolId(118), SymbolId(121), SymbolId(122), SymbolId(123), SymbolId(124), SymbolId(130), SymbolId(134), SymbolId(135), SymbolId(136), SymbolId(137), SymbolId(143), SymbolId(147), SymbolId(148), SymbolId(149), SymbolId(150), SymbolId(153), SymbolId(155), SymbolId(156), SymbolId(157), SymbolId(158), SymbolId(162), SymbolId(165), SymbolId(166), SymbolId(167), SymbolId(168), SymbolId(172), SymbolId(175), SymbolId(176), SymbolId(177), SymbolId(178), SymbolId(182), SymbolId(185), SymbolId(186), SymbolId(187), SymbolId(188), SymbolId(191), SymbolId(193), SymbolId(194), SymbolId(195), SymbolId(196), SymbolId(199), SymbolId(200), SymbolId(203), SymbolId(204), SymbolId(207), SymbolId(208), SymbolId(211), SymbolId(212)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(32), SymbolId(35), SymbolId(38), SymbolId(41), SymbolId(44), SymbolId(47), SymbolId(50), SymbolId(53), SymbolId(56), SymbolId(59), SymbolId(62), SymbolId(64), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(71), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(78), SymbolId(80), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(86), SymbolId(89), SymbolId(90), SymbolId(91), SymbolId(92), SymbolId(94), SymbolId(96), SymbolId(97), SymbolId(98), SymbolId(99), SymbolId(101), SymbolId(103), SymbolId(104), SymbolId(105), SymbolId(106), SymbolId(109), SymbolId(112), SymbolId(113), SymbolId(114), SymbolId(115), SymbolId(119), SymbolId(123), SymbolId(124), SymbolId(125), SymbolId(126), SymbolId(130), SymbolId(134), SymbolId(135), SymbolId(136), SymbolId(137), SymbolId(139), SymbolId(141), SymbolId(142), SymbolId(143), SymbolId(144), SymbolId(147), SymbolId(150), SymbolId(151), SymbolId(152), SymbolId(153), SymbolId(156), SymbolId(159), SymbolId(160), SymbolId(161), SymbolId(162), SymbolId(165), SymbolId(168), SymbolId(169), SymbolId(170), SymbolId(171), SymbolId(173), SymbolId(175), SymbolId(176), SymbolId(177), SymbolId(178), SymbolId(180), SymbolId(181), SymbolId(183), SymbolId(184), SymbolId(186), SymbolId(187), SymbolId(189)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(29), ScopeId(30), ScopeId(35), ScopeId(36), ScopeId(41), ScopeId(42), ScopeId(44), ScopeId(45), ScopeId(47), ScopeId(48), ScopeId(50), ScopeId(51), ScopeId(53), ScopeId(54), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(77), ScopeId(79), ScopeId(81), ScopeId(83), ScopeId(86), ScopeId(89), ScopeId(93), ScopeId(97), ScopeId(101), ScopeId(105), ScopeId(106), ScopeId(107), ScopeId(108), ScopeId(109), ScopeId(110), ScopeId(111), ScopeId(112), ScopeId(113), ScopeId(114), ScopeId(115), ScopeId(116), ScopeId(117), ScopeId(119)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(59), ScopeId(61), ScopeId(63), ScopeId(65), ScopeId(67), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78), ScopeId(79), ScopeId(80), ScopeId(81), ScopeId(82)]
Scope children mismatch:
after transform: ScopeId(75): [ScopeId(76)]
rebuilt        : ScopeId(53): []
Scope children mismatch:
after transform: ScopeId(77): [ScopeId(78)]
rebuilt        : ScopeId(54): []
Scope children mismatch:
after transform: ScopeId(79): [ScopeId(80)]
rebuilt        : ScopeId(55): []
Scope children mismatch:
after transform: ScopeId(81): [ScopeId(82)]
rebuilt        : ScopeId(56): []
Scope children mismatch:
after transform: ScopeId(83): [ScopeId(84), ScopeId(85)]
rebuilt        : ScopeId(57): [ScopeId(58)]
Scope children mismatch:
after transform: ScopeId(86): [ScopeId(87), ScopeId(88)]
rebuilt        : ScopeId(59): [ScopeId(60)]
Scope children mismatch:
after transform: ScopeId(89): [ScopeId(90), ScopeId(91), ScopeId(92)]
rebuilt        : ScopeId(61): [ScopeId(62)]
Scope children mismatch:
after transform: ScopeId(93): [ScopeId(94), ScopeId(95), ScopeId(96)]
rebuilt        : ScopeId(63): [ScopeId(64)]
Scope children mismatch:
after transform: ScopeId(97): [ScopeId(98), ScopeId(99), ScopeId(100)]
rebuilt        : ScopeId(65): [ScopeId(66)]
Scope children mismatch:
after transform: ScopeId(101): [ScopeId(102), ScopeId(103), ScopeId(104)]
rebuilt        : ScopeId(67): [ScopeId(68)]
Scope children mismatch:
after transform: ScopeId(117): [ScopeId(118)]
rebuilt        : ScopeId(81): []
Scope children mismatch:
after transform: ScopeId(119): [ScopeId(120)]
rebuilt        : ScopeId(82): []
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(24), ReferenceId(26), ReferenceId(28), ReferenceId(34), ReferenceId(37), ReferenceId(44), ReferenceId(55), ReferenceId(103), ReferenceId(108), ReferenceId(110), ReferenceId(117), ReferenceId(123), ReferenceId(125), ReferenceId(133), ReferenceId(141), ReferenceId(143), ReferenceId(145), ReferenceId(153), ReferenceId(160), ReferenceId(162), ReferenceId(164), ReferenceId(183), ReferenceId(187), ReferenceId(195), ReferenceId(197), ReferenceId(202), ReferenceId(216), ReferenceId(220), ReferenceId(245)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(9), ReferenceId(13), ReferenceId(15), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(32), ReferenceId(41), ReferenceId(46), ReferenceId(48), ReferenceId(53), ReferenceId(104), ReferenceId(109), ReferenceId(118), ReferenceId(124), ReferenceId(126), ReferenceId(134), ReferenceId(142), ReferenceId(144), ReferenceId(146), ReferenceId(154), ReferenceId(161), ReferenceId(163), ReferenceId(165), ReferenceId(172), ReferenceId(175), ReferenceId(176), ReferenceId(200), ReferenceId(206), ReferenceId(214), ReferenceId(222), ReferenceId(224)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(39), ReferenceId(204)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "foo1":
after transform: SymbolId(4) "foo1"
rebuilt        : SymbolId(8) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(7) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(10) "foo3"
rebuilt        : SymbolId(14) "foo3"
Reference symbol mismatch for "foo4":
after transform: SymbolId(13) "foo4"
rebuilt        : SymbolId(17) "foo4"
Reference symbol mismatch for "foo5":
after transform: SymbolId(16) "foo5"
rebuilt        : SymbolId(20) "foo5"
Reference symbol mismatch for "foo6":
after transform: SymbolId(19) "foo6"
rebuilt        : SymbolId(23) "foo6"
Reference symbol mismatch for "foo7":
after transform: SymbolId(22) "foo7"
rebuilt        : SymbolId(26) "foo7"
Reference symbol mismatch for "foo8":
after transform: SymbolId(25) "foo8"
rebuilt        : SymbolId(29) "foo8"
Reference symbol mismatch for "foo9":
after transform: SymbolId(28) "foo9"
rebuilt        : SymbolId(32) "foo9"
Reference symbol mismatch for "foo10":
after transform: SymbolId(31) "foo10"
rebuilt        : SymbolId(35) "foo10"
Reference symbol mismatch for "foo11":
after transform: SymbolId(34) "foo11"
rebuilt        : SymbolId(38) "foo11"
Reference symbol mismatch for "foo12":
after transform: SymbolId(37) "foo12"
rebuilt        : SymbolId(41) "foo12"
Reference symbol mismatch for "foo13":
after transform: SymbolId(40) "foo13"
rebuilt        : SymbolId(44) "foo13"
Reference symbol mismatch for "foo14":
after transform: SymbolId(43) "foo14"
rebuilt        : SymbolId(47) "foo14"
Reference symbol mismatch for "foo15":
after transform: SymbolId(46) "foo15"
rebuilt        : SymbolId(50) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(49) "foo16"
rebuilt        : SymbolId(53) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(54) "foo17"
rebuilt        : SymbolId(56) "foo17"
Reference symbol mismatch for "foo18":
after transform: SymbolId(57) "foo18"
rebuilt        : SymbolId(59) "foo18"
Unresolved references mismatch:
after transform: ["Array", "Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures3.ts
Binding symbols mismatch:
after transform: ScopeId(1): [SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(33), SymbolId(37), SymbolId(42), SymbolId(47), SymbolId(53), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(65), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(75), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(84), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(93), SymbolId(97), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(103), SymbolId(105), SymbolId(106), SymbolId(107), SymbolId(108), SymbolId(111), SymbolId(112), SymbolId(113), SymbolId(114), SymbolId(117), SymbolId(118), SymbolId(121), SymbolId(139)]
rebuilt        : ScopeId(1): [SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(10), SymbolId(13), SymbolId(16), SymbolId(19), SymbolId(22), SymbolId(25), SymbolId(28), SymbolId(31), SymbolId(34), SymbolId(37), SymbolId(39), SymbolId(42), SymbolId(45), SymbolId(48), SymbolId(51), SymbolId(52), SymbolId(53), SymbolId(54), SymbolId(58), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(67), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(75), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(84), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(92), SymbolId(94), SymbolId(95), SymbolId(96), SymbolId(97), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(102), SymbolId(104), SymbolId(105), SymbolId(107)]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(13), ScopeId(14), ScopeId(19), ScopeId(20), ScopeId(22), ScopeId(23), ScopeId(25), ScopeId(26), ScopeId(28), ScopeId(29), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(44), ScopeId(47), ScopeId(51), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(66)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(35), ScopeId(37), ScopeId(39), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51)]
Scope children mismatch:
after transform: ScopeId(41): [ScopeId(42), ScopeId(43)]
rebuilt        : ScopeId(33): [ScopeId(34)]
Scope children mismatch:
after transform: ScopeId(44): [ScopeId(45), ScopeId(46)]
rebuilt        : ScopeId(35): [ScopeId(36)]
Scope children mismatch:
after transform: ScopeId(47): [ScopeId(48), ScopeId(49), ScopeId(50)]
rebuilt        : ScopeId(37): [ScopeId(38)]
Scope children mismatch:
after transform: ScopeId(51): [ScopeId(52), ScopeId(53), ScopeId(54)]
rebuilt        : ScopeId(39): [ScopeId(40)]
Scope children mismatch:
after transform: ScopeId(64): [ScopeId(65)]
rebuilt        : ScopeId(50): []
Scope children mismatch:
after transform: ScopeId(66): [ScopeId(67)]
rebuilt        : ScopeId(51): []
Binding symbols mismatch:
after transform: ScopeId(68): [SymbolId(123), SymbolId(127), SymbolId(130), SymbolId(131), SymbolId(135), SymbolId(138), SymbolId(140)]
rebuilt        : ScopeId(52): [SymbolId(109), SymbolId(110), SymbolId(113), SymbolId(115), SymbolId(116), SymbolId(119), SymbolId(121)]
Scope flags mismatch:
after transform: ScopeId(68): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(52): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(68): [ScopeId(69), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(75), ScopeId(76)]
rebuilt        : ScopeId(52): [ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58)]
Symbol flags mismatch for "Errors":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Errors":
after transform: SymbolId(0): Span { start: 168, end: 174 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(16), ReferenceId(17), ReferenceId(19), ReferenceId(22), ReferenceId(33), ReferenceId(39), ReferenceId(50), ReferenceId(57), ReferenceId(59), ReferenceId(67), ReferenceId(74), ReferenceId(76), ReferenceId(78), ReferenceId(89), ReferenceId(90), ReferenceId(101), ReferenceId(109), ReferenceId(117), ReferenceId(119), ReferenceId(136)]
rebuilt        : SymbolId(3): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(5), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(26), ReferenceId(30), ReferenceId(51), ReferenceId(58), ReferenceId(68), ReferenceId(75), ReferenceId(77), ReferenceId(79), ReferenceId(86), ReferenceId(97), ReferenceId(113)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(3): [ReferenceId(7), ReferenceId(24), ReferenceId(36), ReferenceId(52), ReferenceId(60), ReferenceId(111), ReferenceId(115)]
rebuilt        : SymbolId(6): []
Symbol flags mismatch for "WithGenericSignaturesInBaseType":
after transform: SymbolId(122): SymbolFlags(ValueModule)
rebuilt        : SymbolId(108): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "WithGenericSignaturesInBaseType":
after transform: SymbolId(122): Span { start: 4321, end: 4352 }
rebuilt        : SymbolId(108): Span { start: 0, end: 0 }
Reference symbol mismatch for "foo2":
after transform: SymbolId(5) "foo2"
rebuilt        : SymbolId(10) "foo2"
Reference symbol mismatch for "foo7":
after transform: SymbolId(8) "foo7"
rebuilt        : SymbolId(13) "foo7"
Reference symbol mismatch for "foo8":
after transform: SymbolId(11) "foo8"
rebuilt        : SymbolId(16) "foo8"
Reference symbol mismatch for "foo10":
after transform: SymbolId(14) "foo10"
rebuilt        : SymbolId(19) "foo10"
Reference symbol mismatch for "foo11":
after transform: SymbolId(17) "foo11"
rebuilt        : SymbolId(22) "foo11"
Reference symbol mismatch for "foo12":
after transform: SymbolId(20) "foo12"
rebuilt        : SymbolId(25) "foo12"
Reference symbol mismatch for "foo15":
after transform: SymbolId(23) "foo15"
rebuilt        : SymbolId(28) "foo15"
Reference symbol mismatch for "foo15":
after transform: SymbolId(23) "foo15"
rebuilt        : SymbolId(28) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(26) "foo16"
rebuilt        : SymbolId(31) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(29) "foo17"
rebuilt        : SymbolId(34) "foo17"
Reference symbol mismatch for "foo2":
after transform: SymbolId(123) "foo2"
rebuilt        : SymbolId(110) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(131) "foo3"
rebuilt        : SymbolId(116) "foo3"
Unresolved references mismatch:
after transform: ["Array", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithCallSignatures4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(8), SymbolId(12), SymbolId(16), SymbolId(21), SymbolId(26), SymbolId(30), SymbolId(34), SymbolId(38), SymbolId(42), SymbolId(46), SymbolId(50), SymbolId(53), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(62), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(71), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(82), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(94), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(105), SymbolId(108), SymbolId(109), SymbolId(110), SymbolId(111), SymbolId(116), SymbolId(120), SymbolId(121), SymbolId(122), SymbolId(123), SymbolId(127), SymbolId(130), SymbolId(131), SymbolId(132), SymbolId(133), SymbolId(136), SymbolId(139), SymbolId(140), SymbolId(141), SymbolId(142), SymbolId(145), SymbolId(146), SymbolId(149), SymbolId(150)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(32), SymbolId(35), SymbolId(38), SymbolId(41), SymbolId(43), SymbolId(45), SymbolId(46), SymbolId(47), SymbolId(48), SymbolId(50), SymbolId(52), SymbolId(53), SymbolId(54), SymbolId(55), SymbolId(57), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62), SymbolId(65), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(73), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(80), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(85), SymbolId(88), SymbolId(91), SymbolId(92), SymbolId(93), SymbolId(94), SymbolId(96), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(103), SymbolId(105), SymbolId(106), SymbolId(107), SymbolId(108), SymbolId(110), SymbolId(111), SymbolId(113)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(27), ScopeId(28), ScopeId(30), ScopeId(31), ScopeId(33), ScopeId(34), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(50), ScopeId(52), ScopeId(54), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(64)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50)]
Scope children mismatch:
after transform: ScopeId(48): [ScopeId(49)]
rebuilt        : ScopeId(39): []
Scope children mismatch:
after transform: ScopeId(50): [ScopeId(51)]
rebuilt        : ScopeId(40): []
Scope children mismatch:
after transform: ScopeId(52): [ScopeId(53)]
rebuilt        : ScopeId(41): []
Scope children mismatch:
after transform: ScopeId(54): [ScopeId(55)]
rebuilt        : ScopeId(42): []
Scope children mismatch:
after transform: ScopeId(62): [ScopeId(63)]
rebuilt        : ScopeId(49): []
Scope children mismatch:
after transform: ScopeId(64): [ScopeId(65)]
rebuilt        : ScopeId(50): []
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(12), ReferenceId(19), ReferenceId(23), ReferenceId(31), ReferenceId(38), ReferenceId(44), ReferenceId(96), ReferenceId(101), ReferenceId(114), ReferenceId(118), ReferenceId(137), ReferenceId(141)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(14), ReferenceId(27), ReferenceId(35), ReferenceId(97), ReferenceId(103)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(41)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "foo1":
after transform: SymbolId(4) "foo1"
rebuilt        : SymbolId(8) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : <None>
Reference symbol mismatch for "foo3":
after transform: SymbolId(14) "foo3"
rebuilt        : <None>
Reference symbol mismatch for "foo4":
after transform: SymbolId(19) "foo4"
rebuilt        : <None>
Reference symbol mismatch for "foo5":
after transform: SymbolId(26) "foo5"
rebuilt        : <None>
Reference symbol mismatch for "foo6":
after transform: SymbolId(33) "foo6"
rebuilt        : <None>
Reference symbol mismatch for "foo11":
after transform: SymbolId(39) "foo11"
rebuilt        : <None>
Reference symbol mismatch for "foo15":
after transform: SymbolId(45) "foo15"
rebuilt        : <None>
Reference symbol mismatch for "foo16":
after transform: SymbolId(50) "foo16"
rebuilt        : <None>
Reference symbol mismatch for "foo17":
after transform: SymbolId(55) "foo17"
rebuilt        : <None>
Reference symbol mismatch for "foo18":
after transform: SymbolId(64) "foo18"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["require"]
rebuilt        : ["foo1", "foo11", "foo15", "foo16", "foo17", "foo18", "foo2", "foo3", "foo4", "foo5", "foo6", "require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures.ts
Bindings mismatch:
after transform: ScopeId(1): ["_ConstructSignature", "foo1", "foo2", "r", "r2", "r3", "r3arg1", "r4", "r4arg1", "rarg1", "rarg2"]
rebuilt        : ScopeId(1): ["_ConstructSignature", "r", "r2", "r3", "r3arg1", "r4", "r4arg1", "rarg1", "rarg2"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "ConstructSignature":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "ConstructSignature":
after transform: SymbolId(0): Span { start: 7, end: 25 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : <None>
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(12) "foo2"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(12) "foo2"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["foo1", "foo2"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures2.ts
Bindings mismatch:
after transform: ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "_defineProperty", "foo1", "foo10", "foo11", "foo12", "foo13", "foo14", "foo15", "foo16", "foo17", "foo18", "foo2", "foo3", "foo4", "foo5", "foo6", "foo7", "foo8", "foo9", "r1", "r10", "r10a", "r10arg1", "r10arg2", "r10b", "r11", "r11a", "r11arg1", "r11arg2", "r11b", "r12", "r12a", "r12arg1", "r12arg2", "r12b", "r13", "r13a", "r13arg1", "r13arg2", "r13b", "r14", "r14a", "r14arg1", "r14arg2", "r14b", "r15", "r15arg1", "r16", "r16arg1", "r17", "r17arg1", "r18", "r18arg1", "r1a", "r1arg1", "r1arg2", "r1b", "r2", "r2a", "r2arg1", "r2arg2", "r2b", "r3", "r3a", "r3arg1", "r3arg2", "r3b", "r4", "r4a", "r4arg1", "r4arg2", "r4b", "r5", "r5a", "r5arg1", "r5arg2", "r5b", "r6", "r6a", "r6arg1", "r6arg2", "r6b", "r7", "r7a", "r7arg1", "r7arg2", "r7b", "r8", "r8a", "r8arg1", "r8arg2", "r8b", "r9", "r9a", "r9arg1", "r9arg2", "r9b"]
rebuilt        : ScopeId(0): ["Base", "Derived", "Derived2", "OtherDerived", "_defineProperty", "r1", "r10", "r10a", "r10arg1", "r10arg2", "r10b", "r11", "r11a", "r11arg1", "r11arg2", "r11b", "r12", "r12a", "r12arg1", "r12arg2", "r12b", "r13", "r13a", "r13arg1", "r13arg2", "r13b", "r14", "r14a", "r14arg1", "r14arg2", "r14b", "r15", "r15arg1", "r16", "r16arg1", "r17", "r17arg1", "r18", "r18arg1", "r1a", "r1arg1", "r1arg2", "r1b", "r2", "r2a", "r2arg1", "r2arg2", "r2b", "r3", "r3a", "r3arg1", "r3arg2", "r3b", "r4", "r4a", "r4arg1", "r4arg2", "r4b", "r5", "r5a", "r5arg1", "r5arg2", "r5b", "r6", "r6a", "r6arg1", "r6arg2", "r6b", "r7", "r7a", "r7arg1", "r7arg2", "r7b", "r8", "r8a", "r8arg1", "r8arg2", "r8b", "r9", "r9a", "r9arg1", "r9arg2", "r9b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(24), ScopeId(25), ScopeId(29), ScopeId(30), ScopeId(35), ScopeId(36), ScopeId(41), ScopeId(42), ScopeId(44), ScopeId(45), ScopeId(47), ScopeId(48), ScopeId(50), ScopeId(51), ScopeId(53), ScopeId(54), ScopeId(56), ScopeId(57), ScopeId(60), ScopeId(61), ScopeId(64), ScopeId(65), ScopeId(70), ScopeId(71), ScopeId(78), ScopeId(79), ScopeId(80), ScopeId(81), ScopeId(82), ScopeId(83), ScopeId(84), ScopeId(85), ScopeId(86), ScopeId(87), ScopeId(89), ScopeId(91), ScopeId(93), ScopeId(95), ScopeId(98), ScopeId(101), ScopeId(105), ScopeId(109), ScopeId(113), ScopeId(117), ScopeId(118), ScopeId(119), ScopeId(120), ScopeId(121), ScopeId(122), ScopeId(123), ScopeId(124), ScopeId(125), ScopeId(126), ScopeId(127), ScopeId(128), ScopeId(129), ScopeId(131)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(24), ReferenceId(26), ReferenceId(28), ReferenceId(34), ReferenceId(37), ReferenceId(44), ReferenceId(55), ReferenceId(103), ReferenceId(108), ReferenceId(110), ReferenceId(117), ReferenceId(123), ReferenceId(125), ReferenceId(133), ReferenceId(141), ReferenceId(143), ReferenceId(145), ReferenceId(153), ReferenceId(160), ReferenceId(162), ReferenceId(164), ReferenceId(183), ReferenceId(187), ReferenceId(195), ReferenceId(197), ReferenceId(202), ReferenceId(216), ReferenceId(220), ReferenceId(245)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(9), ReferenceId(13), ReferenceId(15), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(32), ReferenceId(41), ReferenceId(46), ReferenceId(48), ReferenceId(53), ReferenceId(104), ReferenceId(109), ReferenceId(118), ReferenceId(124), ReferenceId(126), ReferenceId(134), ReferenceId(142), ReferenceId(144), ReferenceId(146), ReferenceId(154), ReferenceId(161), ReferenceId(163), ReferenceId(165), ReferenceId(172), ReferenceId(175), ReferenceId(176), ReferenceId(200), ReferenceId(206), ReferenceId(214), ReferenceId(222), ReferenceId(224)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(39), ReferenceId(204)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "foo1":
after transform: SymbolId(4) "foo1"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(8) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(12) "foo3"
rebuilt        : SymbolId(14) "foo3"
Reference symbol mismatch for "foo4":
after transform: SymbolId(16) "foo4"
rebuilt        : SymbolId(17) "foo4"
Reference symbol mismatch for "foo5":
after transform: SymbolId(21) "foo5"
rebuilt        : SymbolId(20) "foo5"
Reference symbol mismatch for "foo6":
after transform: SymbolId(26) "foo6"
rebuilt        : SymbolId(23) "foo6"
Reference symbol mismatch for "foo11":
after transform: SymbolId(30) "foo11"
rebuilt        : SymbolId(26) "foo11"
Reference symbol mismatch for "foo15":
after transform: SymbolId(34) "foo15"
rebuilt        : SymbolId(29) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(38) "foo16"
rebuilt        : SymbolId(32) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(42) "foo17"
rebuilt        : SymbolId(35) "foo17"
Reference symbol mismatch for "foo18":
after transform: SymbolId(46) "foo18"
rebuilt        : SymbolId(38) "foo18"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures.ts
Binding symbols mismatch:
after transform: ScopeId(1): [SymbolId(1), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(8), SymbolId(9), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15), SymbolId(16)]
rebuilt        : ScopeId(1): [SymbolId(1), SymbolId(2), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(9), SymbolId(12), SymbolId(13), SymbolId(14), SymbolId(15)]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Symbol flags mismatch for "ConstructSignature":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "ConstructSignature":
after transform: SymbolId(0): Span { start: 7, end: 25 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : SymbolId(2) "foo1"
Reference symbol mismatch for "foo1":
after transform: SymbolId(1) "foo1"
rebuilt        : SymbolId(2) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : SymbolId(9) "foo2"
Reference symbol mismatch for "foo2":
after transform: SymbolId(9) "foo2"
rebuilt        : SymbolId(9) "foo2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(7), SymbolId(10), SymbolId(13), SymbolId(16), SymbolId(19), SymbolId(22), SymbolId(25), SymbolId(28), SymbolId(31), SymbolId(34), SymbolId(37), SymbolId(40), SymbolId(43), SymbolId(46), SymbolId(49), SymbolId(54), SymbolId(57), SymbolId(60), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(91), SymbolId(92), SymbolId(93), SymbolId(94), SymbolId(95), SymbolId(96), SymbolId(97), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(102), SymbolId(103), SymbolId(104), SymbolId(105), SymbolId(106), SymbolId(107), SymbolId(108), SymbolId(109), SymbolId(110), SymbolId(111), SymbolId(112), SymbolId(113), SymbolId(114), SymbolId(115), SymbolId(116), SymbolId(117), SymbolId(118), SymbolId(119), SymbolId(120), SymbolId(121), SymbolId(122), SymbolId(123), SymbolId(124), SymbolId(125), SymbolId(126), SymbolId(127), SymbolId(128), SymbolId(129), SymbolId(130), SymbolId(131), SymbolId(132), SymbolId(133), SymbolId(134), SymbolId(135), SymbolId(136), SymbolId(137), SymbolId(138), SymbolId(139), SymbolId(140)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(32), SymbolId(35), SymbolId(38), SymbolId(41), SymbolId(44), SymbolId(47), SymbolId(50), SymbolId(53), SymbolId(56), SymbolId(59), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(91), SymbolId(92), SymbolId(93), SymbolId(94), SymbolId(95), SymbolId(96), SymbolId(97), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(102), SymbolId(103), SymbolId(104), SymbolId(105), SymbolId(106), SymbolId(107), SymbolId(108), SymbolId(109), SymbolId(110), SymbolId(111), SymbolId(112), SymbolId(113), SymbolId(114), SymbolId(115), SymbolId(116), SymbolId(117), SymbolId(118), SymbolId(119), SymbolId(120), SymbolId(121), SymbolId(122), SymbolId(123), SymbolId(124), SymbolId(125), SymbolId(126), SymbolId(127), SymbolId(128), SymbolId(129), SymbolId(130), SymbolId(131), SymbolId(132), SymbolId(133), SymbolId(134), SymbolId(135), SymbolId(136), SymbolId(137), SymbolId(138), SymbolId(139)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(36), ScopeId(37), ScopeId(40), ScopeId(41), ScopeId(46), ScopeId(47), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(24), ReferenceId(26), ReferenceId(28), ReferenceId(34), ReferenceId(37), ReferenceId(44), ReferenceId(55), ReferenceId(103), ReferenceId(108), ReferenceId(110), ReferenceId(117), ReferenceId(123), ReferenceId(125), ReferenceId(133), ReferenceId(141), ReferenceId(143), ReferenceId(145), ReferenceId(153), ReferenceId(160), ReferenceId(162), ReferenceId(164), ReferenceId(183), ReferenceId(187), ReferenceId(195), ReferenceId(197), ReferenceId(202), ReferenceId(216), ReferenceId(220), ReferenceId(245)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(9), ReferenceId(13), ReferenceId(15), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(32), ReferenceId(41), ReferenceId(46), ReferenceId(48), ReferenceId(53), ReferenceId(104), ReferenceId(109), ReferenceId(118), ReferenceId(124), ReferenceId(126), ReferenceId(134), ReferenceId(142), ReferenceId(144), ReferenceId(146), ReferenceId(154), ReferenceId(161), ReferenceId(163), ReferenceId(165), ReferenceId(172), ReferenceId(175), ReferenceId(176), ReferenceId(200), ReferenceId(206), ReferenceId(214), ReferenceId(222), ReferenceId(224)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(39), ReferenceId(204)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "foo1":
after transform: SymbolId(4) "foo1"
rebuilt        : SymbolId(8) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(7) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(10) "foo3"
rebuilt        : SymbolId(14) "foo3"
Reference symbol mismatch for "foo4":
after transform: SymbolId(13) "foo4"
rebuilt        : SymbolId(17) "foo4"
Reference symbol mismatch for "foo5":
after transform: SymbolId(16) "foo5"
rebuilt        : SymbolId(20) "foo5"
Reference symbol mismatch for "foo6":
after transform: SymbolId(19) "foo6"
rebuilt        : SymbolId(23) "foo6"
Reference symbol mismatch for "foo7":
after transform: SymbolId(22) "foo7"
rebuilt        : SymbolId(26) "foo7"
Reference symbol mismatch for "foo8":
after transform: SymbolId(25) "foo8"
rebuilt        : SymbolId(29) "foo8"
Reference symbol mismatch for "foo9":
after transform: SymbolId(28) "foo9"
rebuilt        : SymbolId(32) "foo9"
Reference symbol mismatch for "foo10":
after transform: SymbolId(31) "foo10"
rebuilt        : SymbolId(35) "foo10"
Reference symbol mismatch for "foo11":
after transform: SymbolId(34) "foo11"
rebuilt        : SymbolId(38) "foo11"
Reference symbol mismatch for "foo12":
after transform: SymbolId(37) "foo12"
rebuilt        : SymbolId(41) "foo12"
Reference symbol mismatch for "foo13":
after transform: SymbolId(40) "foo13"
rebuilt        : SymbolId(44) "foo13"
Reference symbol mismatch for "foo14":
after transform: SymbolId(43) "foo14"
rebuilt        : SymbolId(47) "foo14"
Reference symbol mismatch for "foo15":
after transform: SymbolId(46) "foo15"
rebuilt        : SymbolId(50) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(49) "foo16"
rebuilt        : SymbolId(53) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(54) "foo17"
rebuilt        : SymbolId(56) "foo17"
Reference symbol mismatch for "foo18":
after transform: SymbolId(57) "foo18"
rebuilt        : SymbolId(59) "foo18"
Unresolved references mismatch:
after transform: ["Array", "Date", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures3.ts
Binding symbols mismatch:
after transform: ScopeId(1): [SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(36), SymbolId(39), SymbolId(40), SymbolId(41), SymbolId(42), SymbolId(43), SymbolId(45), SymbolId(46), SymbolId(47), SymbolId(48), SymbolId(49), SymbolId(50), SymbolId(51), SymbolId(52), SymbolId(53), SymbolId(54), SymbolId(55), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(96)]
rebuilt        : ScopeId(1): [SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(10), SymbolId(13), SymbolId(16), SymbolId(19), SymbolId(22), SymbolId(25), SymbolId(28), SymbolId(31), SymbolId(34), SymbolId(37), SymbolId(38), SymbolId(39), SymbolId(40), SymbolId(41), SymbolId(42), SymbolId(43), SymbolId(44), SymbolId(45), SymbolId(46), SymbolId(47), SymbolId(48), SymbolId(49), SymbolId(50), SymbolId(51), SymbolId(52), SymbolId(53), SymbolId(54), SymbolId(55), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79)]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(27), ScopeId(28), ScopeId(35), ScopeId(36), ScopeId(37)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27)]
Binding symbols mismatch:
after transform: ScopeId(38): [SymbolId(83), SymbolId(87), SymbolId(89), SymbolId(90), SymbolId(94), SymbolId(95), SymbolId(97)]
rebuilt        : ScopeId(28): [SymbolId(81), SymbolId(82), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(90), SymbolId(91)]
Scope flags mismatch:
after transform: ScopeId(38): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(28): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(38): [ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42)]
rebuilt        : ScopeId(28): [ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32)]
Symbol flags mismatch for "Errors":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Errors":
after transform: SymbolId(0): Span { start: 168, end: 174 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(2), ReferenceId(4), ReferenceId(6), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(16), ReferenceId(17), ReferenceId(19), ReferenceId(22), ReferenceId(33), ReferenceId(39), ReferenceId(51), ReferenceId(58), ReferenceId(60), ReferenceId(68), ReferenceId(75), ReferenceId(77), ReferenceId(79), ReferenceId(90), ReferenceId(91), ReferenceId(102), ReferenceId(110), ReferenceId(118), ReferenceId(120), ReferenceId(137)]
rebuilt        : SymbolId(3): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(5), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(26), ReferenceId(30), ReferenceId(52), ReferenceId(59), ReferenceId(69), ReferenceId(76), ReferenceId(78), ReferenceId(80), ReferenceId(87), ReferenceId(98), ReferenceId(114)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(3): [ReferenceId(7), ReferenceId(24), ReferenceId(36), ReferenceId(53), ReferenceId(61), ReferenceId(112), ReferenceId(116)]
rebuilt        : SymbolId(6): []
Symbol flags mismatch for "WithGenericSignaturesInBaseType":
after transform: SymbolId(82): SymbolFlags(ValueModule)
rebuilt        : SymbolId(80): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "WithGenericSignaturesInBaseType":
after transform: SymbolId(82): Span { start: 4469, end: 4500 }
rebuilt        : SymbolId(80): Span { start: 0, end: 0 }
Reference symbol mismatch for "foo2":
after transform: SymbolId(5) "foo2"
rebuilt        : SymbolId(10) "foo2"
Reference symbol mismatch for "foo7":
after transform: SymbolId(8) "foo7"
rebuilt        : SymbolId(13) "foo7"
Reference symbol mismatch for "foo8":
after transform: SymbolId(11) "foo8"
rebuilt        : SymbolId(16) "foo8"
Reference symbol mismatch for "foo10":
after transform: SymbolId(14) "foo10"
rebuilt        : SymbolId(19) "foo10"
Reference symbol mismatch for "foo11":
after transform: SymbolId(17) "foo11"
rebuilt        : SymbolId(22) "foo11"
Reference symbol mismatch for "foo12":
after transform: SymbolId(20) "foo12"
rebuilt        : SymbolId(25) "foo12"
Reference symbol mismatch for "foo15":
after transform: SymbolId(23) "foo15"
rebuilt        : SymbolId(28) "foo15"
Reference symbol mismatch for "foo15":
after transform: SymbolId(23) "foo15"
rebuilt        : SymbolId(28) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(26) "foo16"
rebuilt        : SymbolId(31) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(29) "foo17"
rebuilt        : SymbolId(34) "foo17"
Reference symbol mismatch for "foo2":
after transform: SymbolId(83) "foo2"
rebuilt        : SymbolId(82) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(90) "foo3"
rebuilt        : SymbolId(87) "foo3"
Unresolved references mismatch:
after transform: ["Array", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures4.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(8), SymbolId(12), SymbolId(16), SymbolId(21), SymbolId(26), SymbolId(30), SymbolId(34), SymbolId(38), SymbolId(42), SymbolId(47), SymbolId(54), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89), SymbolId(90), SymbolId(91), SymbolId(93), SymbolId(94), SymbolId(95), SymbolId(96), SymbolId(97), SymbolId(98), SymbolId(99), SymbolId(100), SymbolId(101), SymbolId(102), SymbolId(103), SymbolId(104), SymbolId(105), SymbolId(106)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(4), SymbolId(6), SymbolId(8), SymbolId(11), SymbolId(14), SymbolId(17), SymbolId(20), SymbolId(23), SymbolId(26), SymbolId(29), SymbolId(32), SymbolId(35), SymbolId(38), SymbolId(41), SymbolId(42), SymbolId(43), SymbolId(44), SymbolId(45), SymbolId(46), SymbolId(47), SymbolId(48), SymbolId(49), SymbolId(50), SymbolId(51), SymbolId(52), SymbolId(53), SymbolId(54), SymbolId(55), SymbolId(56), SymbolId(57), SymbolId(58), SymbolId(59), SymbolId(60), SymbolId(61), SymbolId(62), SymbolId(63), SymbolId(64), SymbolId(65), SymbolId(66), SymbolId(67), SymbolId(68), SymbolId(69), SymbolId(70), SymbolId(71), SymbolId(72), SymbolId(73), SymbolId(74), SymbolId(75), SymbolId(76), SymbolId(77), SymbolId(78), SymbolId(79), SymbolId(80), SymbolId(81), SymbolId(82), SymbolId(83), SymbolId(84), SymbolId(85), SymbolId(86), SymbolId(87), SymbolId(88), SymbolId(89)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(26), ScopeId(27), ScopeId(34)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(12), ReferenceId(19), ReferenceId(23), ReferenceId(31), ReferenceId(38), ReferenceId(44), ReferenceId(96), ReferenceId(101), ReferenceId(114), ReferenceId(118), ReferenceId(137), ReferenceId(141)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(14), ReferenceId(27), ReferenceId(35), ReferenceId(97), ReferenceId(103)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(41)]
rebuilt        : SymbolId(4): []
Reference symbol mismatch for "foo1":
after transform: SymbolId(4) "foo1"
rebuilt        : SymbolId(8) "foo1"
Reference symbol mismatch for "foo2":
after transform: SymbolId(8) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "foo3":
after transform: SymbolId(12) "foo3"
rebuilt        : SymbolId(14) "foo3"
Reference symbol mismatch for "foo4":
after transform: SymbolId(16) "foo4"
rebuilt        : SymbolId(17) "foo4"
Reference symbol mismatch for "foo5":
after transform: SymbolId(21) "foo5"
rebuilt        : SymbolId(20) "foo5"
Reference symbol mismatch for "foo6":
after transform: SymbolId(26) "foo6"
rebuilt        : SymbolId(23) "foo6"
Reference symbol mismatch for "foo11":
after transform: SymbolId(30) "foo11"
rebuilt        : SymbolId(26) "foo11"
Reference symbol mismatch for "foo15":
after transform: SymbolId(34) "foo15"
rebuilt        : SymbolId(29) "foo15"
Reference symbol mismatch for "foo16":
after transform: SymbolId(38) "foo16"
rebuilt        : SymbolId(32) "foo16"
Reference symbol mismatch for "foo17":
after transform: SymbolId(42) "foo17"
rebuilt        : SymbolId(35) "foo17"
Reference symbol mismatch for "foo18":
after transform: SymbolId(47) "foo18"
rebuilt        : SymbolId(38) "foo18"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithConstructSignatures5.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(30), ScopeId(32)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(3), ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(24), ReferenceId(26), ReferenceId(32), ReferenceId(53), ReferenceId(58), ReferenceId(64), ReferenceId(72), ReferenceId(82), ReferenceId(87), ReferenceId(89), ReferenceId(96)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(8)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(11), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(22), ReferenceId(23), ReferenceId(30), ReferenceId(34), ReferenceId(36), ReferenceId(54), ReferenceId(59), ReferenceId(65), ReferenceId(73), ReferenceId(79), ReferenceId(92), ReferenceId(94)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(28)]
rebuilt        : SymbolId(4): []
Unresolved references mismatch:
after transform: ["Array", "Object", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembers4.ts
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(4), ReferenceId(7)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(6), ReferenceId(9)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(10): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(10): [ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(1): []
Symbol flags mismatch for "TwoLevels":
after transform: SymbolId(12): SymbolFlags(ValueModule)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "TwoLevels":
after transform: SymbolId(12): Span { start: 1157, end: 1166 }
rebuilt        : SymbolId(3): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/subtypingWithObjectMembersOptionality4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/subtypesAndSuperTypes/undefinedIsSubtypeOfEverything.ts
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentity.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(4), ReferenceId(14), ReferenceId(21), ReferenceId(23), ReferenceId(25), ReferenceId(27)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(24), ReferenceId(30)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(5): [ReferenceId(9), ReferenceId(10), ReferenceId(20), ReferenceId(26), ReferenceId(32)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(6): [ReferenceId(11), ReferenceId(12), ReferenceId(28), ReferenceId(34)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentity2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40)]
Bindings mismatch:
after transform: ScopeId(5): ["A", "E"]
rebuilt        : ScopeId(7): ["E"]
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(0x0)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(6), ReferenceId(8), ReferenceId(10)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(5), ReferenceId(12), ReferenceId(14), ReferenceId(16), ReferenceId(18)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(15), ReferenceId(21)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(5): [ReferenceId(11), ReferenceId(17), ReferenceId(23)]
rebuilt        : SymbolId(4): []
Symbol flags mismatch for "E":
after transform: SymbolId(6): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(5): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "b":
after transform: SymbolId(8): [ReferenceId(19), ReferenceId(25)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Date", "RegExp", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(22)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(6), ReferenceId(7), ReferenceId(17), ReferenceId(24), ReferenceId(26), ReferenceId(28), ReferenceId(30)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(8), ReferenceId(9), ReferenceId(19), ReferenceId(27), ReferenceId(33), ReferenceId(35), ReferenceId(41)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(12), ReferenceId(13), ReferenceId(23), ReferenceId(29), ReferenceId(37)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(14): [ReferenceId(14), ReferenceId(15), ReferenceId(31), ReferenceId(39)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignatures2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(6), ReferenceId(7), ReferenceId(18), ReferenceId(20), ReferenceId(22), ReferenceId(24)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(8), ReferenceId(9), ReferenceId(19), ReferenceId(26), ReferenceId(28), ReferenceId(30), ReferenceId(32)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(10), ReferenceId(11), ReferenceId(21), ReferenceId(29), ReferenceId(35), ReferenceId(37), ReferenceId(43)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(14), ReferenceId(15), ReferenceId(25), ReferenceId(31), ReferenceId(39)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(14): [ReferenceId(16), ReferenceId(17), ReferenceId(33), ReferenceId(41)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesDifferingParamCounts.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(5), ReferenceId(6), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(23)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(9), ReferenceId(10), ReferenceId(20), ReferenceId(28), ReferenceId(34), ReferenceId(36), ReferenceId(42)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(14): [ReferenceId(13), ReferenceId(14), ReferenceId(24), ReferenceId(30), ReferenceId(38)]
rebuilt        : SymbolId(8): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(17): [ReferenceId(15), ReferenceId(16), ReferenceId(32), ReferenceId(40)]
rebuilt        : SymbolId(9): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesDifferingParamCounts2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(5): [ReferenceId(4), ReferenceId(5), ReferenceId(11), ReferenceId(14)]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithCallSignaturesWithOverloads.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(14), ScopeId(17), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78), ScopeId(79), ScopeId(80)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(3): [ScopeId(4)]
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(5): [ScopeId(6)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(16), ReferenceId(18), ReferenceId(20), ReferenceId(22)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(4): [ReferenceId(6), ReferenceId(7), ReferenceId(17), ReferenceId(24), ReferenceId(26), ReferenceId(28), ReferenceId(30)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(8): [ReferenceId(8), ReferenceId(9), ReferenceId(19), ReferenceId(27), ReferenceId(33), ReferenceId(35), ReferenceId(41)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(22): [ReferenceId(12), ReferenceId(13), ReferenceId(23), ReferenceId(29), ReferenceId(37)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(25): [ReferenceId(14), ReferenceId(15), ReferenceId(31), ReferenceId(39)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithComplexConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(4), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(6), ReferenceId(14), ReferenceId(21), ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(7), ReferenceId(8), ReferenceId(16), ReferenceId(24), ReferenceId(28), ReferenceId(30), ReferenceId(34)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(11), ReferenceId(12), ReferenceId(20), ReferenceId(26), ReferenceId(32)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignatures2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(5), ReferenceId(6), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(24), ReferenceId(26), ReferenceId(32)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(10): [ReferenceId(11), ReferenceId(12), ReferenceId(20), ReferenceId(28)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(12): [ReferenceId(13), ReferenceId(14), ReferenceId(22), ReferenceId(30)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithConstructSignaturesDifferingParamCounts.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(5), ReferenceId(14), ReferenceId(16), ReferenceId(18), ReferenceId(20)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(6), ReferenceId(7), ReferenceId(17), ReferenceId(23), ReferenceId(25), ReferenceId(31)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(10), ReferenceId(11), ReferenceId(19), ReferenceId(27)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(15): [ReferenceId(12), ReferenceId(13), ReferenceId(21), ReferenceId(29)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(14), ReferenceId(15), ReferenceId(26), ReferenceId(28), ReferenceId(30), ReferenceId(32)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(16), ReferenceId(17), ReferenceId(27), ReferenceId(34), ReferenceId(36), ReferenceId(38), ReferenceId(40)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(18), ReferenceId(19), ReferenceId(29), ReferenceId(37), ReferenceId(43), ReferenceId(45), ReferenceId(51)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(15): [ReferenceId(22), ReferenceId(23), ReferenceId(33), ReferenceId(39), ReferenceId(47)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(18): [ReferenceId(24), ReferenceId(25), ReferenceId(41), ReferenceId(49)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignatures2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(21), ReferenceId(22), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(39)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(5): [ReferenceId(23), ReferenceId(24), ReferenceId(34), ReferenceId(41), ReferenceId(43), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(10): [ReferenceId(25), ReferenceId(26), ReferenceId(36), ReferenceId(44), ReferenceId(50), ReferenceId(52), ReferenceId(58)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(25): [ReferenceId(29), ReferenceId(30), ReferenceId(40), ReferenceId(46), ReferenceId(54)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(30): [ReferenceId(31), ReferenceId(32), ReferenceId(48), ReferenceId(56)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(14), ReferenceId(15), ReferenceId(32), ReferenceId(35), ReferenceId(38), ReferenceId(41)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(16), ReferenceId(18), ReferenceId(33), ReferenceId(43), ReferenceId(47), ReferenceId(51), ReferenceId(54)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(20), ReferenceId(22), ReferenceId(36), ReferenceId(49), ReferenceId(59), ReferenceId(62), ReferenceId(71)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(15): [ReferenceId(28), ReferenceId(29), ReferenceId(42), ReferenceId(53), ReferenceId(66)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(18): [ReferenceId(30), ReferenceId(31), ReferenceId(56), ReferenceId(69)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Array", "Boolean", "Date", "Number", "RegExp", "String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(32), ReferenceId(33), ReferenceId(56), ReferenceId(60), ReferenceId(75), ReferenceId(79)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(5): [ReferenceId(34), ReferenceId(37), ReferenceId(57), ReferenceId(81), ReferenceId(87), ReferenceId(93), ReferenceId(97)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(10): [ReferenceId(40), ReferenceId(43), ReferenceId(61), ReferenceId(64), ReferenceId(70), ReferenceId(90), ReferenceId(104), ReferenceId(108), ReferenceId(120)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(15): [ReferenceId(67), ReferenceId(73)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(30): [ReferenceId(52), ReferenceId(53), ReferenceId(80), ReferenceId(96), ReferenceId(114)]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(35): [ReferenceId(54), ReferenceId(55), ReferenceId(100), ReferenceId(118)]
rebuilt        : SymbolId(13): []
Unresolved references mismatch:
after transform: ["Array", "Boolean", "Date", "Number", "RegExp", "String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByConstraints3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78), ScopeId(79), ScopeId(80), ScopeId(81), ScopeId(82), ScopeId(83)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76)]
Symbol reference IDs mismatch for "One":
after transform: SymbolId(0): [ReferenceId(5), ReferenceId(29)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "Two":
after transform: SymbolId(1): [ReferenceId(9), ReferenceId(33), ReferenceId(39), ReferenceId(40), ReferenceId(42), ReferenceId(43), ReferenceId(62), ReferenceId(63), ReferenceId(87), ReferenceId(88), ReferenceId(93), ReferenceId(94), ReferenceId(99), ReferenceId(100), ReferenceId(103), ReferenceId(104)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "A":
after transform: SymbolId(10): [ReferenceId(36), ReferenceId(37), ReferenceId(60), ReferenceId(64), ReferenceId(80), ReferenceId(84)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(15): [ReferenceId(38), ReferenceId(41), ReferenceId(61), ReferenceId(86), ReferenceId(92), ReferenceId(98), ReferenceId(102)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(20): [ReferenceId(44), ReferenceId(47), ReferenceId(65), ReferenceId(68), ReferenceId(74), ReferenceId(95), ReferenceId(109), ReferenceId(113), ReferenceId(125)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(25): [ReferenceId(71), ReferenceId(77)]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(40): [ReferenceId(56), ReferenceId(57), ReferenceId(85), ReferenceId(101), ReferenceId(119)]
rebuilt        : SymbolId(15): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(45): [ReferenceId(58), ReferenceId(59), ReferenceId(105), ReferenceId(123)]
rebuilt        : SymbolId(16): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(10), ReferenceId(11), ReferenceId(22), ReferenceId(24), ReferenceId(26), ReferenceId(28)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(12), ReferenceId(13), ReferenceId(23), ReferenceId(30), ReferenceId(32), ReferenceId(34), ReferenceId(36)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(14), ReferenceId(15), ReferenceId(25), ReferenceId(33), ReferenceId(39), ReferenceId(41), ReferenceId(47)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(15): [ReferenceId(18), ReferenceId(19), ReferenceId(29), ReferenceId(35), ReferenceId(43)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(18): [ReferenceId(20), ReferenceId(21), ReferenceId(37), ReferenceId(45)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingByReturnType2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(17), ReferenceId(18), ReferenceId(35), ReferenceId(38), ReferenceId(41), ReferenceId(44)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(19), ReferenceId(21), ReferenceId(36), ReferenceId(46), ReferenceId(50), ReferenceId(54), ReferenceId(57)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(23), ReferenceId(25), ReferenceId(39), ReferenceId(52), ReferenceId(62), ReferenceId(65), ReferenceId(74)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(15): [ReferenceId(31), ReferenceId(32), ReferenceId(45), ReferenceId(56), ReferenceId(69)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(18): [ReferenceId(33), ReferenceId(34), ReferenceId(59), ReferenceId(72)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(14), ReferenceId(15), ReferenceId(26), ReferenceId(28), ReferenceId(30), ReferenceId(33)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(16), ReferenceId(17), ReferenceId(27), ReferenceId(35), ReferenceId(38), ReferenceId(40), ReferenceId(41), ReferenceId(43), ReferenceId(46), ReferenceId(49), ReferenceId(64), ReferenceId(65)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(7): [ReferenceId(18), ReferenceId(19), ReferenceId(29), ReferenceId(39), ReferenceId(48), ReferenceId(52), ReferenceId(63)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(24): [ReferenceId(22), ReferenceId(23), ReferenceId(34), ReferenceId(42), ReferenceId(57)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(31): [ReferenceId(24), ReferenceId(25), ReferenceId(44), ReferenceId(61)]
rebuilt        : SymbolId(7): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterCounts2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(10), ReferenceId(11), ReferenceId(14), ReferenceId(18)]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesDifferingTypeParameterNames.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(14), ReferenceId(15), ReferenceId(26), ReferenceId(28), ReferenceId(30), ReferenceId(32)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(16), ReferenceId(17), ReferenceId(27), ReferenceId(34), ReferenceId(36), ReferenceId(38), ReferenceId(40)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(6): [ReferenceId(18), ReferenceId(19), ReferenceId(29), ReferenceId(37), ReferenceId(43), ReferenceId(45), ReferenceId(51)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(15): [ReferenceId(22), ReferenceId(23), ReferenceId(33), ReferenceId(39), ReferenceId(47)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(18): [ReferenceId(24), ReferenceId(25), ReferenceId(41), ReferenceId(49)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(21), ReferenceId(22), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(39)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(4): [ReferenceId(23), ReferenceId(24), ReferenceId(34), ReferenceId(41), ReferenceId(43), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(8): [ReferenceId(25), ReferenceId(26), ReferenceId(36), ReferenceId(44), ReferenceId(50), ReferenceId(52), ReferenceId(58)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(20): [ReferenceId(29), ReferenceId(30), ReferenceId(40), ReferenceId(46), ReferenceId(54)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(24): [ReferenceId(31), ReferenceId(32), ReferenceId(48), ReferenceId(56)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(21), ReferenceId(22), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(39)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(5): [ReferenceId(23), ReferenceId(24), ReferenceId(34), ReferenceId(41), ReferenceId(43), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(10): [ReferenceId(25), ReferenceId(26), ReferenceId(36), ReferenceId(44), ReferenceId(50), ReferenceId(52), ReferenceId(58)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(25): [ReferenceId(29), ReferenceId(30), ReferenceId(40), ReferenceId(46), ReferenceId(54)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(30): [ReferenceId(31), ReferenceId(32), ReferenceId(48), ReferenceId(56)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericCallSignaturesOptionalParams3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(21), ReferenceId(22), ReferenceId(33), ReferenceId(35), ReferenceId(37), ReferenceId(39)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(5): [ReferenceId(23), ReferenceId(24), ReferenceId(34), ReferenceId(41), ReferenceId(43), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(10): [ReferenceId(25), ReferenceId(26), ReferenceId(36), ReferenceId(44), ReferenceId(50), ReferenceId(52), ReferenceId(58)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(25): [ReferenceId(29), ReferenceId(30), ReferenceId(40), ReferenceId(46), ReferenceId(54)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(30): [ReferenceId(31), ReferenceId(32), ReferenceId(48), ReferenceId(56)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(12), ReferenceId(14), ReferenceId(28), ReferenceId(32), ReferenceId(36), ReferenceId(39)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(16), ReferenceId(18), ReferenceId(34), ReferenceId(44), ReferenceId(47)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(24), ReferenceId(25), ReferenceId(38), ReferenceId(51)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(15): [ReferenceId(26), ReferenceId(27), ReferenceId(41), ReferenceId(54)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Array", "Boolean", "Number", "RegExp", "String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(28), ReferenceId(31), ReferenceId(61), ReferenceId(67), ReferenceId(73), ReferenceId(77)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(34), ReferenceId(37), ReferenceId(50), ReferenceId(56), ReferenceId(70), ReferenceId(84), ReferenceId(88)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(10): [ReferenceId(53), ReferenceId(59)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(25): [ReferenceId(46), ReferenceId(47), ReferenceId(76), ReferenceId(94)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(30): [ReferenceId(48), ReferenceId(49), ReferenceId(80), ReferenceId(98)]
rebuilt        : SymbolId(10): []
Unresolved references mismatch:
after transform: ["Array", "Boolean", "Number", "RegExp", "String"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByConstraints3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56)]
Symbol reference IDs mismatch for "One":
after transform: SymbolId(0): [ReferenceId(25)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "Two":
after transform: SymbolId(1): [ReferenceId(5), ReferenceId(29), ReferenceId(33), ReferenceId(34), ReferenceId(36), ReferenceId(37), ReferenceId(67), ReferenceId(68), ReferenceId(73), ReferenceId(74), ReferenceId(79), ReferenceId(80), ReferenceId(83), ReferenceId(84)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(10): [ReferenceId(32), ReferenceId(35), ReferenceId(66), ReferenceId(72), ReferenceId(78), ReferenceId(82)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(15): [ReferenceId(38), ReferenceId(41), ReferenceId(54), ReferenceId(60), ReferenceId(75), ReferenceId(89), ReferenceId(93)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(20): [ReferenceId(57), ReferenceId(63)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(35): [ReferenceId(50), ReferenceId(51), ReferenceId(81), ReferenceId(99)]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(40): [ReferenceId(52), ReferenceId(53), ReferenceId(85), ReferenceId(103)]
rebuilt        : SymbolId(13): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(10), ReferenceId(11), ReferenceId(22), ReferenceId(24), ReferenceId(26), ReferenceId(28)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(12), ReferenceId(13), ReferenceId(25), ReferenceId(31), ReferenceId(33), ReferenceId(39)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(16), ReferenceId(17), ReferenceId(20), ReferenceId(27), ReferenceId(35)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(15): [ReferenceId(18), ReferenceId(19), ReferenceId(21), ReferenceId(29), ReferenceId(37)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingByReturnType2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(15), ReferenceId(17), ReferenceId(31), ReferenceId(35), ReferenceId(39), ReferenceId(42)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(19), ReferenceId(21), ReferenceId(37), ReferenceId(47), ReferenceId(50), ReferenceId(59)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(27), ReferenceId(28), ReferenceId(41), ReferenceId(54)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(15): [ReferenceId(29), ReferenceId(30), ReferenceId(44), ReferenceId(57)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterCounts.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(18), ReferenceId(19), ReferenceId(28), ReferenceId(31), ReferenceId(33), ReferenceId(34), ReferenceId(36), ReferenceId(39), ReferenceId(42)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(7), ReferenceId(12), ReferenceId(20), ReferenceId(21), ReferenceId(32), ReferenceId(41), ReferenceId(45)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(21): [ReferenceId(24), ReferenceId(25), ReferenceId(35), ReferenceId(50)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(28): [ReferenceId(26), ReferenceId(27), ReferenceId(37), ReferenceId(54)]
rebuilt        : SymbolId(5): []
Unresolved references mismatch:
after transform: ["Date", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesDifferingTypeParameterNames.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(3), ReferenceId(9), ReferenceId(15), ReferenceId(16), ReferenceId(25), ReferenceId(27), ReferenceId(29), ReferenceId(31)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(3): [ReferenceId(6), ReferenceId(12), ReferenceId(17), ReferenceId(18), ReferenceId(28), ReferenceId(34), ReferenceId(36)]
rebuilt        : SymbolId(2): [ReferenceId(0)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(12): [ReferenceId(21), ReferenceId(22), ReferenceId(30), ReferenceId(38)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(15): [ReferenceId(23), ReferenceId(24), ReferenceId(32), ReferenceId(40)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(6), ReferenceId(14), ReferenceId(22), ReferenceId(23), ReferenceId(32), ReferenceId(34), ReferenceId(36), ReferenceId(38)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(10), ReferenceId(18), ReferenceId(24), ReferenceId(25), ReferenceId(35), ReferenceId(41), ReferenceId(43)]
rebuilt        : SymbolId(3): [ReferenceId(0)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(16): [ReferenceId(28), ReferenceId(29), ReferenceId(37), ReferenceId(45)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(20): [ReferenceId(30), ReferenceId(31), ReferenceId(39), ReferenceId(47)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(6), ReferenceId(16), ReferenceId(26), ReferenceId(27), ReferenceId(36), ReferenceId(38), ReferenceId(40), ReferenceId(42)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(11), ReferenceId(21), ReferenceId(28), ReferenceId(29), ReferenceId(39), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): [ReferenceId(0)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(20): [ReferenceId(32), ReferenceId(33), ReferenceId(41), ReferenceId(49)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(25): [ReferenceId(34), ReferenceId(35), ReferenceId(43), ReferenceId(51)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithGenericConstructSignaturesOptionalParams3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(0): [ReferenceId(6), ReferenceId(16), ReferenceId(26), ReferenceId(27), ReferenceId(36), ReferenceId(38), ReferenceId(40), ReferenceId(42)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(5): [ReferenceId(11), ReferenceId(21), ReferenceId(28), ReferenceId(29), ReferenceId(39), ReferenceId(45), ReferenceId(47)]
rebuilt        : SymbolId(3): [ReferenceId(0)]
Symbol reference IDs mismatch for "a":
after transform: SymbolId(20): [ReferenceId(32), ReferenceId(33), ReferenceId(41), ReferenceId(49)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(25): [ReferenceId(34), ReferenceId(35), ReferenceId(43), ReferenceId(51)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers1.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33), ReferenceId(35), ReferenceId(37)]
rebuilt        : SymbolId(1): [ReferenceId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(30), ReferenceId(40)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(5): [ReferenceId(20), ReferenceId(36), ReferenceId(46)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(6): [ReferenceId(22), ReferenceId(38), ReferenceId(48)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(7): [ReferenceId(11), ReferenceId(12), ReferenceId(26), ReferenceId(32), ReferenceId(42)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(8): [ReferenceId(13), ReferenceId(14), ReferenceId(34), ReferenceId(44)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(7), ReferenceId(39)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(4), ReferenceId(8), ReferenceId(9), ReferenceId(26), ReferenceId(50)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "A":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(10), ReferenceId(11), ReferenceId(22), ReferenceId(24), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(6), ReferenceId(12), ReferenceId(13), ReferenceId(23), ReferenceId(35), ReferenceId(37), ReferenceId(40), ReferenceId(42), ReferenceId(44), ReferenceId(46)]
rebuilt        : SymbolId(5): [ReferenceId(6)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(14), ReferenceId(15), ReferenceId(25), ReferenceId(38), ReferenceId(49)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(7): [ReferenceId(28), ReferenceId(45), ReferenceId(56)]
rebuilt        : SymbolId(7): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(8): [ReferenceId(30), ReferenceId(47), ReferenceId(58)]
rebuilt        : SymbolId(8): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(9): [ReferenceId(18), ReferenceId(19), ReferenceId(34), ReferenceId(41), ReferenceId(52)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(10): [ReferenceId(20), ReferenceId(21), ReferenceId(43), ReferenceId(54)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithNumericIndexers3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33), ReferenceId(35), ReferenceId(37)]
rebuilt        : SymbolId(1): [ReferenceId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(30), ReferenceId(40)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(5): [ReferenceId(20), ReferenceId(36), ReferenceId(46)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(6): [ReferenceId(22), ReferenceId(38), ReferenceId(48)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(7): [ReferenceId(11), ReferenceId(12), ReferenceId(26), ReferenceId(32), ReferenceId(42)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(8): [ReferenceId(13), ReferenceId(14), ReferenceId(34), ReferenceId(44)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithOptionality.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(5), ReferenceId(7)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(9), ReferenceId(11)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(14)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(5): [ReferenceId(3), ReferenceId(4), ReferenceId(8), ReferenceId(12), ReferenceId(16)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(6): [ReferenceId(18)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPrivates.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(1): [ReferenceId(4)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33), ReferenceId(35), ReferenceId(37)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(30), ReferenceId(40)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(5): [ReferenceId(20), ReferenceId(36), ReferenceId(46)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(6): [ReferenceId(22), ReferenceId(38), ReferenceId(48)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(7): [ReferenceId(11), ReferenceId(12), ReferenceId(26), ReferenceId(32), ReferenceId(42)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(8): [ReferenceId(13), ReferenceId(14), ReferenceId(34), ReferenceId(44)]
rebuilt        : SymbolId(7): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPrivates2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4), ReferenceId(7), ReferenceId(9), ReferenceId(12), ReferenceId(15), ReferenceId(16)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(4)]
Symbol reference IDs mismatch for "D":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(6), ReferenceId(8), ReferenceId(10), ReferenceId(14), ReferenceId(17), ReferenceId(18)]
rebuilt        : SymbolId(2): [ReferenceId(6)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithPublics.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(2), ReferenceId(13), ReferenceId(15), ReferenceId(17), ReferenceId(19)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(3), ReferenceId(4), ReferenceId(14), ReferenceId(21), ReferenceId(23), ReferenceId(25), ReferenceId(27)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(24), ReferenceId(30)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(5): [ReferenceId(9), ReferenceId(10), ReferenceId(20), ReferenceId(26), ReferenceId(32)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(6): [ReferenceId(11), ReferenceId(12), ReferenceId(28), ReferenceId(34)]
rebuilt        : SymbolId(5): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithStringIndexers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74)]
Symbol reference IDs mismatch for "A":
after transform: SymbolId(0): [ReferenceId(1), ReferenceId(3), ReferenceId(4), ReferenceId(15), ReferenceId(17), ReferenceId(19), ReferenceId(21), ReferenceId(23), ReferenceId(25)]
rebuilt        : SymbolId(0): [ReferenceId(0)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(6), ReferenceId(16), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33), ReferenceId(35), ReferenceId(37)]
rebuilt        : SymbolId(1): [ReferenceId(1)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(2): [ReferenceId(7), ReferenceId(8), ReferenceId(18), ReferenceId(30), ReferenceId(40)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(5): [ReferenceId(20), ReferenceId(36), ReferenceId(46)]
rebuilt        : SymbolId(3): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(6): [ReferenceId(22), ReferenceId(38), ReferenceId(48)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(7): [ReferenceId(11), ReferenceId(12), ReferenceId(26), ReferenceId(32), ReferenceId(42)]
rebuilt        : SymbolId(5): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(8): [ReferenceId(13), ReferenceId(14), ReferenceId(34), ReferenceId(44)]
rebuilt        : SymbolId(6): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/objectTypesIdentityWithStringIndexers2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(64), ScopeId(65), ScopeId(66), ScopeId(67), ScopeId(68), ScopeId(69), ScopeId(70), ScopeId(71), ScopeId(72), ScopeId(73), ScopeId(74), ScopeId(75), ScopeId(76), ScopeId(77), ScopeId(78)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(7), ReferenceId(39)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(2), ReferenceId(4), ReferenceId(8), ReferenceId(9), ReferenceId(26), ReferenceId(50)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "A":
after transform: SymbolId(2): [ReferenceId(5), ReferenceId(10), ReferenceId(11), ReferenceId(22), ReferenceId(24), ReferenceId(27), ReferenceId(29), ReferenceId(31), ReferenceId(33)]
rebuilt        : SymbolId(4): [ReferenceId(5)]
Symbol reference IDs mismatch for "B":
after transform: SymbolId(3): [ReferenceId(6), ReferenceId(12), ReferenceId(13), ReferenceId(23), ReferenceId(35), ReferenceId(37), ReferenceId(40), ReferenceId(42), ReferenceId(44), ReferenceId(46)]
rebuilt        : SymbolId(5): [ReferenceId(6)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(4): [ReferenceId(14), ReferenceId(15), ReferenceId(25), ReferenceId(38), ReferenceId(49)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "PA":
after transform: SymbolId(7): [ReferenceId(28), ReferenceId(45), ReferenceId(56)]
rebuilt        : SymbolId(7): []
Symbol reference IDs mismatch for "PB":
after transform: SymbolId(8): [ReferenceId(30), ReferenceId(47), ReferenceId(58)]
rebuilt        : SymbolId(8): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(9): [ReferenceId(18), ReferenceId(19), ReferenceId(34), ReferenceId(41), ReferenceId(52)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "b":
after transform: SymbolId(10): [ReferenceId(20), ReferenceId(21), ReferenceId(43), ReferenceId(54)]
rebuilt        : SymbolId(10): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/primtiveTypesAreIdentical.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23)]
Bindings mismatch:
after transform: ScopeId(17): ["A", "E"]
rebuilt        : ScopeId(17): ["E"]
Scope flags mismatch:
after transform: ScopeId(17): ScopeFlags(0x0)
rebuilt        : ScopeId(17): ScopeFlags(Function)
Symbol flags mismatch for "E":
after transform: SymbolId(21): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(21): SymbolFlags(FunctionScopedVariable)
Symbol reference IDs mismatch for "E":
after transform: SymbolId(21): [ReferenceId(0), ReferenceId(1), ReferenceId(5)]
rebuilt        : SymbolId(21): [ReferenceId(3)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeAndMemberIdentity/typeParametersAreIdenticalToThemselves.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(14), ScopeId(27), ScopeId(37), ScopeId(46)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(14), ScopeId(19)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(7): [ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
Scope children mismatch:
after transform: ScopeId(14): [ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
rebuilt        : ScopeId(14): [ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18)]
Scope children mismatch:
after transform: ScopeId(27): [ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36)]
rebuilt        : ScopeId(19): [ScopeId(20), ScopeId(21), ScopeId(22)]
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/bivariantInferences.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b", "x"]
rebuilt        : ScopeId(0): ["x"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "a":
after transform: SymbolId(3) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(4) "b"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["ReadonlyArray"]
rebuilt        : ["a", "b"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/discriminatedUnionInference.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(12), SymbolId(15), SymbolId(16)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "foo":
after transform: SymbolId(12) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(12) "foo"
rebuilt        : SymbolId(0) "foo"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallTypeArgumentInference.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(14)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithArrayLiteralArgs.ts
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithConstraintsTypeArgumentInference.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(18)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(2), ReferenceId(5), ReferenceId(12), ReferenceId(17), ReferenceId(22), ReferenceId(29), ReferenceId(56), ReferenceId(61), ReferenceId(90), ReferenceId(116), ReferenceId(120), ReferenceId(124)]
rebuilt        : SymbolId(1): [ReferenceId(2)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(3), ReferenceId(13), ReferenceId(18), ReferenceId(23), ReferenceId(30), ReferenceId(39), ReferenceId(47), ReferenceId(52), ReferenceId(57), ReferenceId(62), ReferenceId(91), ReferenceId(100), ReferenceId(108), ReferenceId(113), ReferenceId(117), ReferenceId(121), ReferenceId(125)]
rebuilt        : SymbolId(2): [ReferenceId(5)]
Symbol reference IDs mismatch for "Derived2":
after transform: SymbolId(2): [ReferenceId(4), ReferenceId(43), ReferenceId(48), ReferenceId(53), ReferenceId(104), ReferenceId(109), ReferenceId(114)]
rebuilt        : SymbolId(4): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope children mismatch:
after transform: ScopeId(3): [ScopeId(4)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithFunctionTypedArguments4.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(5): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(1)]
rebuilt        : SymbolId(2): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithGenericSignatureArguments.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): []
Scope children mismatch:
after transform: ScopeId(27): [ScopeId(28), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(24): []
Symbol reference IDs mismatch for "a":
after transform: SymbolId(20): [ReferenceId(14), ReferenceId(15), ReferenceId(21), ReferenceId(22)]
rebuilt        : SymbolId(16): [ReferenceId(6), ReferenceId(10)]
Symbol reference IDs mismatch for "b":
after transform: SymbolId(21): [ReferenceId(16), ReferenceId(17), ReferenceId(19), ReferenceId(20)]
rebuilt        : SymbolId(17): [ReferenceId(7), ReferenceId(9)]
Unresolved references mismatch:
after transform: ["Date", "Object", "RegExp"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithNonSymmetricSubtypes.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Unresolved references mismatch:
after transform: ["Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgs2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8)]
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(2), ReferenceId(3), ReferenceId(12), ReferenceId(14), ReferenceId(15), ReferenceId(26)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(5), ReferenceId(14)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(9), ReferenceId(21), ReferenceId(27)]
rebuilt        : SymbolId(2): [ReferenceId(11), ReferenceId(18)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints.ts
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(8), ReferenceId(17)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(10)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "X":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(3), ReferenceId(7), ReferenceId(9), ReferenceId(18), ReferenceId(20)]
rebuilt        : SymbolId(3): [ReferenceId(6), ReferenceId(7)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndConstraints2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7)]
rebuilt        : ScopeId(7): []
Symbol reference IDs mismatch for "Base":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1), ReferenceId(7), ReferenceId(13), ReferenceId(22), ReferenceId(28)]
rebuilt        : SymbolId(1): [ReferenceId(2), ReferenceId(7), ReferenceId(17)]
Symbol reference IDs mismatch for "Derived":
after transform: SymbolId(1): [ReferenceId(8), ReferenceId(10), ReferenceId(11), ReferenceId(19), ReferenceId(31)]
rebuilt        : SymbolId(2): [ReferenceId(8), ReferenceId(10), ReferenceId(11), ReferenceId(20)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndIndexers.ts
Unresolved references mismatch:
after transform: ["Date", "Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndIndexersErrors.ts
Unresolved references mismatch:
after transform: ["Date", "Object"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndNumericIndexer.ts
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithObjectTypeArgsAndStringIndexer.ts
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedConstructorTypedArguments.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2)]
Scope flags mismatch:
after transform: ScopeId(6): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(3): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23)]
rebuilt        : ScopeId(3): [ScopeId(4), ScopeId(5), ScopeId(6)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(9)]
rebuilt        : ScopeId(4): []
Scope children mismatch:
after transform: ScopeId(14): [ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(5): []
Scope children mismatch:
after transform: ScopeId(17): [ScopeId(18), ScopeId(19)]
rebuilt        : ScopeId(6): []
Symbol flags mismatch for "NonGenericParameter":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "NonGenericParameter":
after transform: SymbolId(0): Span { start: 193, end: 212 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(3)]
rebuilt        : SymbolId(2): [ReferenceId(2)]
Symbol flags mismatch for "GenericParameter":
after transform: SymbolId(11): SymbolFlags(ValueModule)
rebuilt        : SymbolId(8): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "GenericParameter":
after transform: SymbolId(11): Span { start: 457, end: 473 }
rebuilt        : SymbolId(8): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericCallWithOverloadedFunctionTypedArguments.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
Scope flags mismatch:
after transform: ScopeId(7): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(5): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
rebuilt        : ScopeId(5): [ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14)]
Scope children mismatch:
after transform: ScopeId(8): [ScopeId(9), ScopeId(10)]
rebuilt        : ScopeId(6): []
Scope children mismatch:
after transform: ScopeId(14): [ScopeId(15), ScopeId(16)]
rebuilt        : ScopeId(8): []
Scope children mismatch:
after transform: ScopeId(20): [ScopeId(21), ScopeId(22)]
rebuilt        : ScopeId(12): []
Symbol flags mismatch for "NonGenericParameter":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "NonGenericParameter":
after transform: SymbolId(0): Span { start: 193, end: 212 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(1): [ReferenceId(0), ReferenceId(3)]
rebuilt        : SymbolId(2): [ReferenceId(2)]
Symbol flags mismatch for "GenericParameter":
after transform: SymbolId(12): SymbolFlags(ValueModule)
rebuilt        : SymbolId(10): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "GenericParameter":
after transform: SymbolId(12): Span { start: 452, end: 468 }
rebuilt        : SymbolId(10): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericClassWithObjectTypeArgsAndConstraints.ts
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(7): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(9): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(12): ScopeFlags(Function)
Scope children mismatch:
after transform: ScopeId(9): [ScopeId(10), ScopeId(12)]
rebuilt        : ScopeId(12): []
Symbol reference IDs mismatch for "C":
after transform: SymbolId(0): [ReferenceId(8), ReferenceId(18), ReferenceId(19), ReferenceId(40), ReferenceId(50), ReferenceId(51)]
rebuilt        : SymbolId(1): []
Symbol reference IDs mismatch for "D":
after transform: SymbolId(1): [ReferenceId(10), ReferenceId(27), ReferenceId(42), ReferenceId(58)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "X":
after transform: SymbolId(2): [ReferenceId(1), ReferenceId(3), ReferenceId(7), ReferenceId(9), ReferenceId(20), ReferenceId(22), ReferenceId(34), ReferenceId(36), ReferenceId(39), ReferenceId(41), ReferenceId(52), ReferenceId(54)]
rebuilt        : SymbolId(3): [ReferenceId(6), ReferenceId(7), ReferenceId(23), ReferenceId(24)]
Symbol flags mismatch for "Class":
after transform: SymbolId(4): SymbolFlags(ValueModule)
rebuilt        : SymbolId(4): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Class":
after transform: SymbolId(4): Span { start: 214, end: 219 }
rebuilt        : SymbolId(4): Span { start: 0, end: 0 }
Symbol reference IDs mismatch for "G":
after transform: SymbolId(5): [ReferenceId(11)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "G2":
after transform: SymbolId(16): [ReferenceId(26)]
rebuilt        : SymbolId(15): []
Symbol flags mismatch for "Interface":
after transform: SymbolId(23): SymbolFlags(ValueModule)
rebuilt        : SymbolId(20): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Interface":
after transform: SymbolId(23): Span { start: 749, end: 758 }
rebuilt        : SymbolId(20): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericContextualTypes1.ts
Bindings mismatch:
after transform: ScopeId(0): ["arrayFilter", "arrayMap", "box", "compose", "f00", "f01", "f02", "f03", "f10", "f11", "f12", "f13", "f20", "f21", "f22", "f23", "f30", "f31", "f40", "flip", "identity", "list", "map", "unbox", "unlist", "wrap", "zip"]
rebuilt        : ScopeId(0): ["arrayFilter", "arrayMap", "box", "compose", "f00", "f01", "f02", "f03", "f10", "f11", "f12", "f13", "f20", "f21", "f22", "f23", "f30", "f31", "f40", "flip", "fn", "identity", "list", "map", "unbox", "unlist", "wrap", "zip"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(34), ScopeId(37), ScopeId(40), ScopeId(41), ScopeId(42), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(54)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
Scope children mismatch:
after transform: ScopeId(34): [ScopeId(35), ScopeId(36)]
rebuilt        : ScopeId(17): [ScopeId(18)]
Scope children mismatch:
after transform: ScopeId(37): [ScopeId(38), ScopeId(39)]
rebuilt        : ScopeId(19): [ScopeId(20)]
Symbol flags mismatch for "fn":
after transform: SymbolId(91): SymbolFlags(BlockScopedVariable | ConstVariable | TypeAlias)
rebuilt        : SymbolId(55): SymbolFlags(BlockScopedVariable | ConstVariable)
Symbol span mismatch for "fn":
after transform: SymbolId(91): Span { start: 1594, end: 1596 }
rebuilt        : SymbolId(55): Span { start: 1621, end: 1627 }
Symbol reference IDs mismatch for "fn":
after transform: SymbolId(91): [ReferenceId(118)]
rebuilt        : SymbolId(55): []
Symbol redeclarations mismatch for "fn":
after transform: SymbolId(91): [Span { start: 1594, end: 1596 }, Span { start: 1621, end: 1627 }]
rebuilt        : SymbolId(55): []
Reference symbol mismatch for "list":
after transform: SymbolId(12) "list"
rebuilt        : SymbolId(5) "list"
Reference symbol mismatch for "wrap":
after transform: SymbolId(2) "wrap"
rebuilt        : SymbolId(0) "wrap"
Reference symbol mismatch for "list":
after transform: SymbolId(12) "list"
rebuilt        : SymbolId(5) "list"
Reference symbol mismatch for "wrap":
after transform: SymbolId(2) "wrap"
rebuilt        : SymbolId(0) "wrap"
Reference symbol mismatch for "compose":
after transform: SymbolId(6) "compose"
rebuilt        : SymbolId(2) "compose"
Reference symbol mismatch for "list":
after transform: SymbolId(12) "list"
rebuilt        : SymbolId(5) "list"
Reference symbol mismatch for "box":
after transform: SymbolId(18) "box"
rebuilt        : SymbolId(9) "box"
Reference symbol mismatch for "compose":
after transform: SymbolId(6) "compose"
rebuilt        : SymbolId(2) "compose"
Reference symbol mismatch for "list":
after transform: SymbolId(12) "list"
rebuilt        : SymbolId(5) "list"
Reference symbol mismatch for "box":
after transform: SymbolId(18) "box"
rebuilt        : SymbolId(9) "box"
Reference symbol mismatch for "compose":
after transform: SymbolId(6) "compose"
rebuilt        : SymbolId(2) "compose"
Reference symbol mismatch for "unbox":
after transform: SymbolId(21) "unbox"
rebuilt        : SymbolId(11) "unbox"
Reference symbol mismatch for "unlist":
after transform: SymbolId(15) "unlist"
rebuilt        : SymbolId(7) "unlist"
Reference symbol mismatch for "compose":
after transform: SymbolId(6) "compose"
rebuilt        : SymbolId(2) "compose"
Reference symbol mismatch for "unbox":
after transform: SymbolId(21) "unbox"
rebuilt        : SymbolId(11) "unbox"
Reference symbol mismatch for "unlist":
after transform: SymbolId(15) "unlist"
rebuilt        : SymbolId(7) "unlist"
Reference symbol mismatch for "identity":
after transform: SymbolId(29) "identity"
rebuilt        : SymbolId(16) "identity"
Reference symbol mismatch for "flip":
after transform: SymbolId(37) "flip"
rebuilt        : SymbolId(21) "flip"
Reference symbol mismatch for "zip":
after transform: SymbolId(32) "zip"
rebuilt        : SymbolId(18) "zip"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericContextualTypes2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(12), SymbolId(17)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "createMachine":
after transform: SymbolId(17) "createMachine"
rebuilt        : SymbolId(2) "createMachine"
Reference symbol mismatch for "assign":
after transform: SymbolId(12) "assign"
rebuilt        : SymbolId(0) "assign"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericContextualTypes3.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(12), SymbolId(17)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Reference symbol mismatch for "createMachine":
after transform: SymbolId(17) "createMachine"
rebuilt        : SymbolId(2) "createMachine"
Reference symbol mismatch for "assign":
after transform: SymbolId(12) "assign"
rebuilt        : SymbolId(0) "assign"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/genericFunctionParameters.ts
Bindings mismatch:
after transform: ScopeId(0): ["f1", "f2", "f3", "s", "x", "x1", "x2", "x3"]
rebuilt        : ScopeId(0): ["f1", "f2", "f3", "x", "x1", "x2", "x3"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(13)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(4) "f2"
rebuilt        : SymbolId(2) "f2"
Reference symbol mismatch for "f3":
after transform: SymbolId(8) "f3"
rebuilt        : SymbolId(4) "f3"
Reference symbol mismatch for "s":
after transform: SymbolId(18) "s"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : ["s"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/intraExpressionInferencesJsx.tsx
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(8), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
Unresolved references mismatch:
after transform: ["Partial", "Record", "require"]
rebuilt        : ["require"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/keyofInferenceIntersectsResults.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(1), SymbolId(5), SymbolId(9), SymbolId(10), SymbolId(11)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(6), SymbolId(7), SymbolId(8)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "foo":
after transform: SymbolId(1) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "foo":
after transform: SymbolId(1) "foo"
rebuilt        : SymbolId(0) "foo"
Reference symbol mismatch for "bar":
after transform: SymbolId(5) "bar"
rebuilt        : SymbolId(3) "bar"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/keyofInferenceLowerPriorityThanReturn.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(10)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8), ScopeId(16)]
rebuilt        : ScopeId(7): [ScopeId(8)]
Symbol flags mismatch for "Write":
after transform: SymbolId(0): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(1): SymbolFlags(Class)
Symbol reference IDs mismatch for "Write":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(13), ReferenceId(18)]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "Col":
after transform: SymbolId(1): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(2): SymbolFlags(Class)
Symbol reference IDs mismatch for "Col":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(12), ReferenceId(17)]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "Table":
after transform: SymbolId(4): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(3): SymbolFlags(Class)
Symbol reference IDs mismatch for "Table":
after transform: SymbolId(4): [ReferenceId(6), ReferenceId(27), ReferenceId(30)]
rebuilt        : SymbolId(3): []
Symbol flags mismatch for "ConflictTarget":
after transform: SymbolId(12): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(4): SymbolFlags(Class)
Symbol reference IDs mismatch for "ConflictTarget":
after transform: SymbolId(12): [ReferenceId(22), ReferenceId(24), ReferenceId(33), ReferenceId(39)]
rebuilt        : SymbolId(4): [ReferenceId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/noInferRedeclaration.ts
Unresolved references mismatch:
after transform: ["NoInfer"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/unionAndIntersectionInference1.ts
Bindings mismatch:
after transform: ScopeId(0): ["assign", "baz1", "createTest", "createTestAsync", "destructure", "f1", "f2", "foo", "foo1", "func", "get", "isNonVoid", "isVoid", "mbp", "pigify", "res", "result", "value", "x1", "x2", "y"]
rebuilt        : ScopeId(0): ["assign", "baz1", "createTest", "createTestAsync", "destructure", "f1", "f2", "foo", "foo1", "func", "get", "isNonVoid", "isVoid", "pigify", "res", "result", "value", "x1", "x2", "y"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(12), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(9), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): []
Reference symbol mismatch for "pigify":
after transform: SymbolId(33) "pigify"
rebuilt        : SymbolId(20) "pigify"
Reference symbol mismatch for "mbp":
after transform: SymbolId(36) "mbp"
rebuilt        : <None>
Reference symbol mismatch for "pigify":
after transform: SymbolId(33) "pigify"
rebuilt        : SymbolId(20) "pigify"
Reference symbol mismatch for "mbp":
after transform: SymbolId(36) "mbp"
rebuilt        : <None>
Reference symbol mismatch for "f1":
after transform: SymbolId(40) "f1"
rebuilt        : SymbolId(24) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(44) "f2"
rebuilt        : SymbolId(26) "f2"
Unresolved references mismatch:
after transform: ["Math", "Object", "Promise", "undefined"]
rebuilt        : ["Math", "Object", "Promise", "mbp", "undefined"]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(54), ReferenceId(56)]
rebuilt        : [ReferenceId(27)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/unionAndIntersectionInference2.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(11), SymbolId(12), SymbolId(13), SymbolId(14)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(9), SymbolId(10), SymbolId(11), SymbolId(12)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2)]
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f1":
after transform: SymbolId(0) "f1"
rebuilt        : SymbolId(0) "f1"
Reference symbol mismatch for "f2":
after transform: SymbolId(8) "f2"
rebuilt        : SymbolId(7) "f2"
Reference symbol mismatch for "f2":
after transform: SymbolId(8) "f2"
rebuilt        : SymbolId(7) "f2"
Reference symbol mismatch for "f2":
after transform: SymbolId(8) "f2"
rebuilt        : SymbolId(7) "f2"
Reference symbol mismatch for "f2":
after transform: SymbolId(8) "f2"
rebuilt        : SymbolId(7) "f2"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/typeInference/unionAndIntersectionInference3.ts
Bindings mismatch:
after transform: ScopeId(0): ["Component", "MyComponent", "_asyncToGenerator", "_defineProperty", "a", "ab", "b", "concatMaybe", "f1", "f2", "foo", "foo1", "foo2", "g", "g1", "g2", "sa", "sx", "withRouter", "x1", "x2", "y1", "y2", "z"]
rebuilt        : ScopeId(0): ["Component", "_asyncToGenerator", "_defineProperty", "concatMaybe", "foo", "foo1", "foo2", "g", "withRouter", "x1", "x2", "y1", "y2", "z"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(33), ScopeId(35)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(10)]
Scope children mismatch:
after transform: ScopeId(5): [ScopeId(6)]
rebuilt        : ScopeId(3): []
Symbol flags mismatch for "Component":
after transform: SymbolId(41): SymbolFlags(Class | Ambient)
rebuilt        : SymbolId(17): SymbolFlags(Class)
Symbol reference IDs mismatch for "Component":
after transform: SymbolId(41): [ReferenceId(83)]
rebuilt        : SymbolId(17): []
Reference symbol mismatch for "concatMaybe":
after transform: SymbolId(2) "concatMaybe"
rebuilt        : SymbolId(2) "concatMaybe"
Reference symbol mismatch for "f1":
after transform: SymbolId(17) "f1"
rebuilt        : <None>
Reference symbol mismatch for "f2":
after transform: SymbolId(19) "f2"
rebuilt        : <None>
Reference symbol mismatch for "f2":
after transform: SymbolId(19) "f2"
rebuilt        : <None>
Reference symbol mismatch for "f1":
after transform: SymbolId(17) "f1"
rebuilt        : <None>
Reference symbol mismatch for "g1":
after transform: SymbolId(25) "g1"
rebuilt        : <None>
Reference symbol mismatch for "g2":
after transform: SymbolId(27) "g2"
rebuilt        : <None>
Reference symbol mismatch for "g2":
after transform: SymbolId(27) "g2"
rebuilt        : <None>
Reference symbol mismatch for "g1":
after transform: SymbolId(25) "g1"
rebuilt        : <None>
Reference symbol mismatch for "foo1":
after transform: SymbolId(29) "foo1"
rebuilt        : SymbolId(9) "foo1"
Reference symbol mismatch for "sa":
after transform: SymbolId(35) "sa"
rebuilt        : <None>
Reference symbol mismatch for "foo1":
after transform: SymbolId(29) "foo1"
rebuilt        : SymbolId(9) "foo1"
Reference symbol mismatch for "sx":
after transform: SymbolId(36) "sx"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(32) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "sa":
after transform: SymbolId(35) "sa"
rebuilt        : <None>
Reference symbol mismatch for "foo2":
after transform: SymbolId(32) "foo2"
rebuilt        : SymbolId(11) "foo2"
Reference symbol mismatch for "sx":
after transform: SymbolId(36) "sx"
rebuilt        : <None>
Reference symbol mismatch for "withRouter":
after transform: SymbolId(50) "withRouter"
rebuilt        : SymbolId(18) "withRouter"
Reference symbol mismatch for "MyComponent":
after transform: SymbolId(55) "MyComponent"
rebuilt        : <None>
Reference symbol mismatch for "foo":
after transform: SymbolId(58) "foo"
rebuilt        : SymbolId(20) "foo"
Reference symbol mismatch for "ab":
after transform: SymbolId(62) "ab"
rebuilt        : <None>
Reference symbol mismatch for "a":
after transform: SymbolId(64) "a"
rebuilt        : <None>
Reference symbol mismatch for "b":
after transform: SymbolId(66) "b"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["AsyncIterator", "Iterable", "Iterator", "Omit", "Promise", "PromiseLike", "arguments"]
rebuilt        : ["MyComponent", "a", "ab", "arguments", "b", "f1", "f2", "g1", "g2", "sa", "sx"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/typeRelationships/widenedTypes/strictNullChecksNoWidening.ts
Binding symbols mismatch:
after transform: ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(11), SymbolId(12), SymbolId(13)]
rebuilt        : ScopeId(0): [SymbolId(0), SymbolId(1), SymbolId(2), SymbolId(3), SymbolId(4), SymbolId(5), SymbolId(6), SymbolId(7), SymbolId(8), SymbolId(10), SymbolId(11), SymbolId(12)]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Reference symbol mismatch for "f":
after transform: SymbolId(8) "f"
rebuilt        : SymbolId(8) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(8) "f"
rebuilt        : SymbolId(8) "f"
Reference symbol mismatch for "f":
after transform: SymbolId(8) "f"
rebuilt        : SymbolId(8) "f"

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeCallSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeIndexSignatures.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/contextualTypeWithUnionTypeMembers.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(5), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(28), ScopeId(29), ScopeId(31), ScopeId(33), ScopeId(34), ScopeId(35), ScopeId(36)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13), ScopeId(14), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(23), ScopeId(24)]
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/discriminatedUnionTypes3.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeCallSignatures2.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(6), ScopeId(11)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeCallSignatures3.ts
Symbol reference IDs mismatch for "f1":
after transform: SymbolId(0): [ReferenceId(0)]
rebuilt        : SymbolId(0): []
Symbol reference IDs mismatch for "f2":
after transform: SymbolId(2): [ReferenceId(1)]
rebuilt        : SymbolId(2): []
Symbol reference IDs mismatch for "f3":
after transform: SymbolId(4): [ReferenceId(2)]
rebuilt        : SymbolId(4): []
Symbol reference IDs mismatch for "f4":
after transform: SymbolId(6): [ReferenceId(3)]
rebuilt        : SymbolId(6): []
Symbol reference IDs mismatch for "f5":
after transform: SymbolId(9): [ReferenceId(4)]
rebuilt        : SymbolId(9): []
Symbol reference IDs mismatch for "f6":
after transform: SymbolId(12): [ReferenceId(5)]
rebuilt        : SymbolId(12): []
Symbol reference IDs mismatch for "f7":
after transform: SymbolId(15): [ReferenceId(6)]
rebuilt        : SymbolId(15): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeCallSignatures7.ts
Bindings mismatch:
after transform: ScopeId(0): ["f", "result"]
rebuilt        : ScopeId(0): ["result"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Reference symbol mismatch for "f":
after transform: SymbolId(2) "f"
rebuilt        : <None>
Unresolved references mismatch:
after transform: []
rebuilt        : ["f"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeIndexSignature.ts
Unresolved references mismatch:
after transform: ["Date"]
rebuilt        : []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/union/unionTypeReduction.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/uniqueSymbol/uniqueSymbols.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "C0", "C1", "N", "_N$s", "_N$s2", "_asyncFuncReturnConstCall", "_asyncFuncReturnLetCall", "_asyncFuncReturnVarCall", "_asyncGenFuncYieldConstCall", "_asyncGenFuncYieldLetCall", "_asyncGenFuncYieldVarCall", "_asyncToGenerator", "_defineProperty", "_wrapAsyncGenerator", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "c", "ce0", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constType", "constTypeAndCall", "f", "fromAny", "funcInferredReturnType", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "g", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "i", "l", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o", "o2", "o3", "o4", "promiseForConstCall", "s", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
rebuilt        : ScopeId(0): ["C", "C0", "C1", "_N$s", "_N$s2", "_asyncFuncReturnConstCall", "_asyncFuncReturnLetCall", "_asyncFuncReturnVarCall", "_asyncGenFuncYieldConstCall", "_asyncGenFuncYieldLetCall", "_asyncGenFuncYieldVarCall", "_asyncToGenerator", "_defineProperty", "_wrapAsyncGenerator", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "ce0", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constTypeAndCall", "f", "fromAny", "funcInferredReturnType", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "g", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o2", "o3", "o4", "promiseForConstCall", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(33), ScopeId(34), ScopeId(40), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(50), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(60), ScopeId(61), ScopeId(62), ScopeId(63), ScopeId(65), ScopeId(66), ScopeId(71), ScopeId(72)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(24), ScopeId(25), ScopeId(27), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(35), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(48), ScopeId(50), ScopeId(51), ScopeId(53), ScopeId(55), ScopeId(56), ScopeId(57), ScopeId(58), ScopeId(59), ScopeId(62)]
Scope children mismatch:
after transform: ScopeId(50): [ScopeId(51)]
rebuilt        : ScopeId(62): []
Symbol reference IDs mismatch for "constCall":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(8), ReferenceId(12), ReferenceId(16), ReferenceId(17), ReferenceId(20), ReferenceId(23), ReferenceId(24), ReferenceId(25), ReferenceId(29), ReferenceId(30), ReferenceId(31), ReferenceId(34), ReferenceId(83), ReferenceId(84)]
rebuilt        : SymbolId(5): [ReferenceId(7), ReferenceId(11), ReferenceId(15), ReferenceId(19), ReferenceId(21), ReferenceId(24), ReferenceId(25), ReferenceId(28), ReferenceId(33), ReferenceId(54), ReferenceId(110), ReferenceId(111)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(34): [ReferenceId(42), ReferenceId(43), ReferenceId(44), ReferenceId(45), ReferenceId(46), ReferenceId(47), ReferenceId(48), ReferenceId(49), ReferenceId(50), ReferenceId(51), ReferenceId(52), ReferenceId(53), ReferenceId(54), ReferenceId(61), ReferenceId(63), ReferenceId(231), ReferenceId(233), ReferenceId(235), ReferenceId(237)]
rebuilt        : SymbolId(44): [ReferenceId(76), ReferenceId(79), ReferenceId(81), ReferenceId(84), ReferenceId(86), ReferenceId(87), ReferenceId(88), ReferenceId(89), ReferenceId(90), ReferenceId(91), ReferenceId(92), ReferenceId(93)]
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(35) "c"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(51) "i"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(51) "i"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(51) "i"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(56) "l"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(68) "o"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(68) "o"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(68) "o"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(69) "f"
rebuilt        : SymbolId(70) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(72) "g"
rebuilt        : SymbolId(72) "g"
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(72) "g"
rebuilt        : SymbolId(72) "g"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(72) "g"
rebuilt        : SymbolId(72) "g"
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(66) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(65) "s"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["AsyncIterableIterator", "IterableIterator", "Math", "Promise", "Symbol", "arguments", "require"]
rebuilt        : ["Math", "N", "Promise", "Symbol", "arguments", "c", "constType", "i", "l", "o", "require", "s"]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(82), ReferenceId(164)]
rebuilt        : [ReferenceId(109)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/uniqueSymbol/uniqueSymbolsDeclarations.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "C0", "C1", "N", "_N$s", "_N$s2", "_asyncFuncReturnConstCall", "_asyncFuncReturnLetCall", "_asyncFuncReturnVarCall", "_asyncGenFuncYieldConstCall", "_asyncGenFuncYieldLetCall", "_asyncGenFuncYieldVarCall", "_asyncToGenerator", "_defineProperty", "_wrapAsyncGenerator", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "c", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constType", "constTypeAndCall", "f", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "g", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "i", "l", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o", "o2", "o4", "promiseForConstCall", "s", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
rebuilt        : ScopeId(0): ["C", "C0", "C1", "_N$s", "_N$s2", "_asyncFuncReturnConstCall", "_asyncFuncReturnLetCall", "_asyncFuncReturnVarCall", "_asyncGenFuncYieldConstCall", "_asyncGenFuncYieldLetCall", "_asyncGenFuncYieldVarCall", "_asyncToGenerator", "_defineProperty", "_wrapAsyncGenerator", "arrayOfConstCall", "asyncFuncReturnConstCall", "asyncFuncReturnLetCall", "asyncFuncReturnVarCall", "asyncGenFuncYieldConstCall", "asyncGenFuncYieldLetCall", "asyncGenFuncYieldVarCall", "constCall", "constInitToCReadonlyCall", "constInitToCReadonlyCallWithIndexedAccess", "constInitToCReadonlyCallWithTypeQuery", "constInitToCReadonlyStaticCall", "constInitToCReadonlyStaticCallWithTypeQuery", "constInitToCReadonlyStaticType", "constInitToCReadonlyStaticTypeAndCall", "constInitToCReadonlyStaticTypeAndCallWithTypeQuery", "constInitToCReadonlyStaticTypeWithTypeQuery", "constInitToCReadwriteCall", "constInitToCReadwriteCallWithIndexedAccess", "constInitToCReadwriteCallWithTypeQuery", "constInitToCReadwriteStaticCall", "constInitToCReadwriteStaticCallWithTypeQuery", "constInitToConstCall", "constInitToConstCallWithTypeQuery", "constInitToConstDeclAmbient", "constInitToConstDeclAmbientWithTypeQuery", "constInitToIReadonlyType", "constInitToIReadonlyTypeWithIndexedAccess", "constInitToIReadonlyTypeWithTypeQuery", "constInitToLReadonlyNestedType", "constInitToLReadonlyNestedTypeWithIndexedAccess", "constInitToLReadonlyNestedTypeWithTypeQuery", "constInitToLReadonlyType", "constInitToLReadonlyTypeWithIndexedAccess", "constInitToLReadonlyTypeWithTypeQuery", "constInitToLetCall", "constInitToVarCall", "constTypeAndCall", "f", "funcReturnConstCall", "funcReturnConstCallWithTypeQuery", "funcReturnLetCall", "funcReturnVarCall", "g", "genFuncYieldConstCall", "genFuncYieldConstCallWithTypeQuery", "genFuncYieldLetCall", "genFuncYieldVarCall", "letCall", "letInitToConstCall", "letInitToConstDeclAmbient", "letInitToLetCall", "letInitToVarCall", "o2", "o4", "promiseForConstCall", "varCall", "varInitToConstCall", "varInitToConstDeclAmbient", "varInitToLetCall", "varInitToVarCall"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(15), ScopeId(16), ScopeId(17), ScopeId(18), ScopeId(19), ScopeId(20), ScopeId(21), ScopeId(22), ScopeId(25), ScopeId(26), ScopeId(27), ScopeId(33), ScopeId(34), ScopeId(40), ScopeId(43), ScopeId(44), ScopeId(45), ScopeId(46), ScopeId(47), ScopeId(48), ScopeId(49), ScopeId(50), ScopeId(51), ScopeId(52), ScopeId(53), ScopeId(54), ScopeId(55), ScopeId(56), ScopeId(58), ScopeId(59), ScopeId(64), ScopeId(65)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(18), ScopeId(19), ScopeId(21), ScopeId(22), ScopeId(24), ScopeId(25), ScopeId(27), ScopeId(29), ScopeId(30), ScopeId(31), ScopeId(32), ScopeId(33), ScopeId(35), ScopeId(37), ScopeId(38), ScopeId(39), ScopeId(48), ScopeId(50), ScopeId(51), ScopeId(53), ScopeId(55), ScopeId(56)]
Symbol reference IDs mismatch for "constCall":
after transform: SymbolId(0): [ReferenceId(4), ReferenceId(8), ReferenceId(12), ReferenceId(16), ReferenceId(17), ReferenceId(20), ReferenceId(23), ReferenceId(24), ReferenceId(25), ReferenceId(29), ReferenceId(30), ReferenceId(31), ReferenceId(34), ReferenceId(83), ReferenceId(84)]
rebuilt        : SymbolId(5): [ReferenceId(7), ReferenceId(11), ReferenceId(15), ReferenceId(19), ReferenceId(21), ReferenceId(24), ReferenceId(25), ReferenceId(28), ReferenceId(33), ReferenceId(54), ReferenceId(110), ReferenceId(111)]
Symbol reference IDs mismatch for "C":
after transform: SymbolId(33): [ReferenceId(42), ReferenceId(43), ReferenceId(44), ReferenceId(45), ReferenceId(46), ReferenceId(47), ReferenceId(48), ReferenceId(49), ReferenceId(50), ReferenceId(51), ReferenceId(52), ReferenceId(53), ReferenceId(54), ReferenceId(61), ReferenceId(63), ReferenceId(217), ReferenceId(219), ReferenceId(221), ReferenceId(223)]
rebuilt        : SymbolId(43): [ReferenceId(76), ReferenceId(79), ReferenceId(81), ReferenceId(84), ReferenceId(86), ReferenceId(87), ReferenceId(88), ReferenceId(89), ReferenceId(90), ReferenceId(91), ReferenceId(92), ReferenceId(93)]
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "constType":
after transform: SymbolId(3) "constType"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "c":
after transform: SymbolId(34) "c"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(50) "i"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(50) "i"
rebuilt        : <None>
Reference symbol mismatch for "i":
after transform: SymbolId(50) "i"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "l":
after transform: SymbolId(55) "l"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(67) "o"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(67) "o"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "o":
after transform: SymbolId(67) "o"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "f":
after transform: SymbolId(68) "f"
rebuilt        : SymbolId(69) "f"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(71) "g"
rebuilt        : SymbolId(71) "g"
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(71) "g"
rebuilt        : SymbolId(71) "g"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "g":
after transform: SymbolId(71) "g"
rebuilt        : SymbolId(71) "g"
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "N":
after transform: SymbolId(65) "N"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(64) "s"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["AsyncIterableIterator", "IterableIterator", "Math", "Promise", "Symbol", "arguments", "require"]
rebuilt        : ["Math", "N", "Promise", "Symbol", "arguments", "c", "constType", "i", "l", "o", "require", "s"]
Unresolved reference IDs mismatch for "Promise":
after transform: [ReferenceId(82), ReferenceId(164)]
rebuilt        : [ReferenceId(109)]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/types/uniqueSymbol/uniqueSymbolsDeclarationsErrors.ts
Bindings mismatch:
after transform: ScopeId(0): ["ClassWithPrivateNamedAccessors", "ClassWithPrivateNamedMethods", "ClassWithPrivateNamedProperties", "_defineProperty", "classExpression", "funcInferredReturnType", "obj", "s"]
rebuilt        : ScopeId(0): ["ClassWithPrivateNamedAccessors", "ClassWithPrivateNamedMethods", "ClassWithPrivateNamedProperties", "_defineProperty", "classExpression", "funcInferredReturnType", "obj"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(7), ScopeId(9), ScopeId(10), ScopeId(12), ScopeId(13), ScopeId(15), ScopeId(16), ScopeId(19)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(6), ScopeId(7), ScopeId(9), ScopeId(12)]
Scope children mismatch:
after transform: ScopeId(7): [ScopeId(8)]
rebuilt        : ScopeId(6): []
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Reference symbol mismatch for "s":
after transform: SymbolId(0) "s"
rebuilt        : <None>
Unresolved references mismatch:
after transform: ["undefined"]
rebuilt        : ["s", "undefined"]

semantic Error: tasks/coverage/typescript/tests/cases/conformance/typings/typingsLookupAmd.ts
Bindings mismatch:
after transform: ScopeId(0): ["B"]
rebuilt        : ScopeId(0): []

