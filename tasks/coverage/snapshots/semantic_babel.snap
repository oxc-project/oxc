commit: 1d4546bc

semantic_babel Summary:
AST Parsed     : 2362/2362 (100.00%)
Positive Passed: 1945/2362 (82.35%)
semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/annex-b/enabled/3.3-function-in-if-body/input.js
Symbol scope ID mismatch for "f":
after transform: SymbolId(0): ScopeId(4294967294)
rebuilt        : SymbolId(0): ScopeId(4294967294)
Symbol scope ID mismatch for "g":
after transform: SymbolId(1): ScopeId(4294967294)
rebuilt        : SymbolId(1): ScopeId(4294967294)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/comments/decorators/decorators-after-export/input.js
Symbol span mismatch for "C":
after transform: SymbolId(0): Span { start: 65, end: 66 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 65, end: 66 }
Symbol flags mismatch for "_default":
after transform: SymbolId(3): SymbolFlags(Class)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/comments/decorators/decorators-before-export/input.js
Symbol span mismatch for "C":
after transform: SymbolId(0): Span { start: 65, end: 66 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "C":
after transform: SymbolId(1): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 65, end: 66 }
Symbol flags mismatch for "_default":
after transform: SymbolId(3): SymbolFlags(Class)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/opts/allowNewTargetOutsideFunction-true/input.js
Unexpected new.target expression
Unexpected new.target expression

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/scope/dupl-bind-catch-hang-func/input.js
Symbol scope ID mismatch for "foo":
after transform: SymbolId(1): ScopeId(4294967294)
rebuilt        : SymbolId(1): ScopeId(4294967294)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/sourcetype-unambiguous/typescript-type-only/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/sourcetype-unambiguous/typescript-value-import/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/uncategorised/327/input.js
A 'return' statement can only be used within a function body.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/core/uncategorised/328/input.js
A 'return' statement can only be used within a function body.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-private-methods/async/input.js
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-private-methods/async-generator/input.js
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode | Function)
rebuilt        : ScopeId(4): ScopeFlags(Function)
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(5): ScopeFlags(0x0)
Scope flags mismatch:
after transform: ScopeId(4): ScopeFlags(StrictMode)
rebuilt        : ScopeId(6): ScopeFlags(0x0)
Scope flags mismatch:
after transform: ScopeId(5): ScopeFlags(StrictMode)
rebuilt        : ScopeId(7): ScopeFlags(0x0)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-private-properties/await-in-private-property-in-params-of-async-arrow/input.js
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_classPrivateFieldInitSpec"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_classPrivateFieldInitSpec", "_x"]
Bindings mismatch:
after transform: ScopeId(1): ["_x", "x"]
rebuilt        : ScopeId(1): ["x"]
Symbol scope ID mismatch for "_x":
after transform: SymbolId(1): ScopeId(1)
rebuilt        : SymbolId(2): ScopeId(0)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-properties/arguments-in-key/input.js
'arguments' is not allowed in class field initializer

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-properties/await-identifier-in-computed-property-inside-params-of-function-inside-params-of-async-function/input.js
Bindings mismatch:
after transform: ScopeId(0): ["_asyncToGenerator", "_defineProperty"]
rebuilt        : ScopeId(0): ["_asyncToGenerator", "_await", "_defineProperty"]
Bindings mismatch:
after transform: ScopeId(2): ["_await", "f", "x"]
rebuilt        : ScopeId(2): ["f", "x"]
Symbol scope ID mismatch for "_await":
after transform: SymbolId(3): ScopeId(2)
rebuilt        : SymbolId(2): ScopeId(0)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-properties/new-target/input.js
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression
Unexpected new.target expression

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/class-static-block/duplicate-function-var-name/input.js
Identifier `x` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/es2022/top-level-await-unambiguous/module/input.js
`await` is only allowed within async functions and at the top levels of modules

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/esprima/statement-if/migrated_0003/input.js
Symbol scope ID mismatch for "a":
after transform: SymbolId(0): ScopeId(4294967294)
rebuilt        : SymbolId(0): ScopeId(4294967294)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-method/typescript/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-method/typescript-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-private-method/typescript-invalid-abstract/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-private-method/typescript-invalid-abstract-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-private-property/typescript/input.js
Unresolved references mismatch:
after transform: ["Array", "WeakMap", "foo", "require"]
rebuilt        : ["WeakMap", "foo", "require"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/class-private-property/typescript-babel-7/input.js
Unresolved references mismatch:
after transform: ["Array", "WeakMap", "foo", "require"]
rebuilt        : ["WeakMap", "foo", "require"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/enum/input.js
Bindings mismatch:
after transform: ScopeId(1): ["A", "a", "r"]
rebuilt        : ScopeId(1): ["A"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/enum-babel-7/input.js
Bindings mismatch:
after transform: ScopeId(1): ["A", "a", "r"]
rebuilt        : ScopeId(1): ["A"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(0x0)
rebuilt        : ScopeId(1): ScopeFlags(Function)
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import/input.js
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import-babel-7/input.js
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import-dot-this/input.js
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import-dot-this-babel-7/input.js
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import-with-options/input.js
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/import-with-options-babel-7/input.js
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/instantiation-expression-optional-chain/input.ts
Unresolved references mismatch:
after transform: ["a", "c"]
rebuilt        : ["a"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/instantiation-expression-optional-chain-babel-7/input.ts
Unresolved references mismatch:
after transform: ["a", "c"]
rebuilt        : ["a"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/literals/input.js
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/loc-index-property/input.js
Bindings mismatch:
after transform: ScopeId(0): ["AssertsFoo", "Foo", "_defineProperty"]
rebuilt        : ScopeId(0): ["AssertsFoo", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/loc-index-property-babel-7/input.js
Bindings mismatch:
after transform: ScopeId(0): ["AssertsFoo", "Foo", "_defineProperty"]
rebuilt        : ScopeId(0): ["AssertsFoo", "_defineProperty"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/optional-chaining/input.js
Unresolved references mismatch:
after transform: ["T", "foo"]
rebuilt        : ["foo"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/optional-chaining-babel-7/input.js
Unresolved references mismatch:
after transform: ["T", "foo"]
rebuilt        : ["foo"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/estree/typescript/shorthand-ambient-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/arrow-function-with-newline/input.ts
Unresolved references mismatch:
after transform: ["arguments", "t"]
rebuilt        : ["arguments"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/arrow-like-in-conditional-3/input.ts
Unresolved references mismatch:
after transform: ["v"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/arrow-like-in-conditional-4/input.ts
Unresolved references mismatch:
after transform: ["v"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/async-generic-false-positive/input.ts
Unresolved references mismatch:
after transform: ["T", "async"]
rebuilt        : ["async"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/async-generic-false-positive-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "async"]
rebuilt        : ["async"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/destructuring-with-annotation-newline/input.ts
Unresolved references mismatch:
after transform: ["T"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/arrow-function/generic-tsx-babel-7/input.ts
Unexpected token. Did you mean `{'>'}` or `&gt;`?

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/arrow-function/input.ts
Unresolved references mismatch:
after transform: ["asserts"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/asserts-as-identifier/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["assertIsString"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["asserts"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/asserts-this-with-predicate/input.ts
Symbol reference IDs mismatch for "Foo":
after transform: SymbolId(0): [ReferenceId(0), ReferenceId(1)]
rebuilt        : SymbolId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/asserts-var/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["assertIsString"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/declare-asserts-var-with-predicate/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["assertIsString"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/assert-predicate/function-declaration/input.ts
Unresolved references mismatch:
after transform: ["asserts"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/as/input.ts
Unresolved references mismatch:
after transform: ["T", "x", "y"]
rebuilt        : ["x", "y"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/as-const/input.ts
Unresolved references mismatch:
after transform: ["a7", "const", "d", "o4"]
rebuilt        : ["a7", "d", "o4"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/destructuring-assignment-in-parens/input.ts
Unresolved references mismatch:
after transform: ["T", "a", "b", "c", "x", "y"]
rebuilt        : ["a", "b", "c", "x", "y"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/for-of-lhs/input.ts
Reference flags mismatch for "a":
after transform: ReferenceId(3): ReferenceFlags(Read)
rebuilt        : ReferenceId(1): ReferenceFlags(Write)
Unresolved references mismatch:
after transform: ["T", "a"]
rebuilt        : ["a"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/need-parentheses/input.ts
Unresolved references mismatch:
after transform: ["T", "x"]
rebuilt        : ["x"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/cast/satisfies/input.ts
Unresolved references mismatch:
after transform: ["T", "a", "b", "x", "y"]
rebuilt        : ["a", "b", "x", "y"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/catch-clause/unknown/input.ts
Unresolved references mismatch:
after transform: ["A", "Error"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/abstract/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C1", "C2", "C3", "C4", "C5"]
rebuilt        : ScopeId(0): ["C1", "C3", "C4", "C5"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5)]
Scope children mismatch:
after transform: ScopeId(6): [ScopeId(7)]
rebuilt        : ScopeId(5): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/async-named-properties/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/async-optional-method/input.js
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Unresolved references mismatch:
after transform: ["B", "Promise"]
rebuilt        : ["B"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/async-optional-method-babel-7/input.js
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []
Unresolved references mismatch:
after transform: ["B", "Promise"]
rebuilt        : ["B"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/constructor/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/constructor-with-modifier-names/input.ts
Multiple constructor implementations are not allowed.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/declare/input.ts
Identifier `x` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/declare-readonly-field-initializer/input.ts
Unresolved references mismatch:
after transform: ["a"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-extends/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-extends-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-extends-implements/input.ts
Unresolved references mismatch:
after transform: ["T", "X", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-extends-implements-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "X", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-implements/input.ts
Unresolved references mismatch:
after transform: ["T", "X"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/expression-implements-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "X"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/extends/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/extends-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/extends-implements/input.ts
Unresolved references mismatch:
after transform: ["T", "X", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/extends-implements-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "X", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/get-generic/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/get-generic-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/implements/input.ts
Unresolved references mismatch:
after transform: ["T", "X"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/implements-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "X"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/members-with-modifier-names/input.ts
Function implementation is missing or not immediately following the declaration.
Function implementation is missing or not immediately following the declaration.
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/members-with-modifier-names-babel-7/input.ts
Function implementation is missing or not immediately following the declaration.
Function implementation is missing or not immediately following the declaration.
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/members-with-reserved-names/input.ts
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/method-computed/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(1): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/method-no-body/input.ts
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/method-with-newline-without-body/input.ts
Function implementation is missing or not immediately following the declaration.
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/modifiers-accessors/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7), ScopeId(8)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/modifiers-methods-async/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(9), ScopeId(10), ScopeId(11), ScopeId(12), ScopeId(13)]
rebuilt        : ScopeId(1): [ScopeId(2), ScopeId(4), ScopeId(6), ScopeId(8), ScopeId(10)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/modifiers-override/input.ts
Identifier `show` has already been declared
Identifier `size` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/parameter-properties/input.ts
A required parameter cannot follow an optional parameter.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/private-method-overload/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(1): [ScopeId(2)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/properties/input.ts
Identifier `x` has already been declared
Identifier `x` has already been declared
Identifier `x` has already been declared
Identifier `x` has already been declared
Identifier `x` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/class/static/input.ts
Function implementation is missing or not immediately following the declaration.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/const/initializer-ambient-context/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/const/initializer-ambient-context-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/const/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["x", "y"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/destructure/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["x", "y"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/eval/input.ts
Cannot assign to 'eval' in strict mode
Cannot assign to 'arguments' in strict mode
Cannot assign to 'eval' in strict mode
Cannot assign to 'arguments' in strict mode

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/eval-babel-7/input.ts
Cannot assign to 'eval' in strict mode
Cannot assign to 'arguments' in strict mode
Cannot assign to 'eval' in strict mode
Cannot assign to 'arguments' in strict mode

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/function-rest-trailing-comma/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/interface/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/interface-new-line/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/let/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["x"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/pattern-parameters/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/pattern-parameters-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/declare/var/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["x"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/decorators/type-arguments/input.ts
Symbol span mismatch for "Test":
after transform: SymbolId(0): Span { start: 27, end: 31 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "Test":
after transform: SymbolId(1): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 27, end: 31 }

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/decorators/type-arguments-babel-7/input.ts
Symbol span mismatch for "Test":
after transform: SymbolId(0): Span { start: 27, end: 31 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }
Symbol span mismatch for "Test":
after transform: SymbolId(1): Span { start: 0, end: 0 }
rebuilt        : SymbolId(2): Span { start: 27, end: 31 }

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/const/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/const-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare-const/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare-const-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare-new-line/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/declare-new-line-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export-const/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export-const-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export-declare-const/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/export-declare-const-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["E"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "B", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-reserved-words/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "const", "default"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-reserved-words-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "const", "default"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-strings/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "bar", "foo"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-strings-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["E", "bar", "foo"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-trailing-comma/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-trailing-comma-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-trailing-comma-with-initializer/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/enum/members-trailing-comma-with-initializer-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(1): ["A", "E"]
rebuilt        : ScopeId(1): ["E"]
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/explicit-resource-management/valid-for-using-declaration-binding-of/input.js
Unexpected token

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "M", "N", "_bar", "bar", "f", "foo", "x"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/declare-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "M", "N", "_bar", "bar", "f", "foo", "x"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/equals/input.ts
Reference flags mismatch for "f":
after transform: ReferenceId(0): ReferenceFlags(Read | Type)
rebuilt        : ReferenceId(1): ReferenceFlags(Read)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/equals-in-unambiguous/input.ts
Reference flags mismatch for "f":
after transform: ReferenceId(0): ReferenceFlags(Read | Type)
rebuilt        : ReferenceId(1): ReferenceFlags(Read)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/export-type/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/export-type-declaration/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/export-value-declaration/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "E", "a", "b"]
rebuilt        : ScopeId(0): ["C", "D", "a", "b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "D":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/export-value-declaration-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C", "D", "E", "a", "b"]
rebuilt        : ScopeId(0): ["C", "D", "a", "b"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
Scope flags mismatch:
after transform: ScopeId(3): ScopeFlags(StrictMode)
rebuilt        : ScopeId(3): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "D":
after transform: SymbolId(3): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/export/nested-same-name/input.ts
Symbol flags mismatch for "N":
after transform: SymbolId(1): SymbolFlags(ValueModule)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(1): Span { start: 37, end: 38 }
rebuilt        : SymbolId(1): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/anonymous-generator/input.ts
Unresolved references mismatch:
after transform: ["Generator"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/anonymous-generator-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Generator"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["f"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/declare-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["f"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/declare-pattern-parameters/input.ts
A required parameter cannot follow an optional parameter.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/export-default/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/function/overloads/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["f"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/equals/input.ts
Unresolved references mismatch:
after transform: ["B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/equals-babel-7/input.ts
Unresolved references mismatch:
after transform: ["B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/equals-in-unambiguous/input.ts
Unresolved references mismatch:
after transform: ["B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/equals-in-unambiguous-babel-7/input.ts
Unresolved references mismatch:
after transform: ["B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/export-import-type-require/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/export-import-type-require-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/import-default-and-named-id-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["bar", "type"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/import-default-id-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["type"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/import-named/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/import-star-as/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/internal-comments/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "C", "D", "foo"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/not-top-level/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/type-asi/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "a", "b"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/type-asi-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "a", "b"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/type-equals-require/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/import/type-equals-require-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/call-signature/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/call-signature-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/construct-signature/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/construct-signature-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/export/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/extends/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["X", "Z"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/extends-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["X", "Z"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/extends-identifier-type-arguments/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["X", "Y", "Z"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/function-like-node-1/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/function-like-node-2/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/function-like-node-3/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/function-like-node-4/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/function-like-node-5/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/generic/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/generic-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set-ambiguous/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set-ambiguous-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set-methods/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/get-set-methods-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/index-signature/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-computed/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-computed-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-generic/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-generic-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-optional/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-optional-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-plain/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/method-plain-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/modifiers/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/pattern-parameters/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/pattern-parameters-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/properties/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/property-computed/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Symbol"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/property-named-public/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/reserved-method-name/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/reserved-method-name-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/interface/separators/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/body/input.ts
Symbol flags mismatch for "N":
after transform: SymbolId(0): SymbolFlags(ValueModule)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "N":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(0): Span { start: 0, end: 0 }

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/body-declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/body-nested/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/body-nested-declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/declare-shorthand/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/global-in-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/global-in-module-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head/input.ts
Ambient modules cannot be nested in other modules or namespaces.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head-babel-7/input.ts
Ambient modules cannot be nested in other modules or namespaces.

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head-declare/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["M", "N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head-declare-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["M", "N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(4), ScopeId(5)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head-export/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["X"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/module-namespace/head-export-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["X"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/destructuring-in-function-type/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/destructuring-in-function-type-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/elision-arrow-destructuring-13636/input.ts
Unresolved references mismatch:
after transform: ["b", "c"]
rebuilt        : ["c"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/is-default-export/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/is-default-export-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "E":
after transform: SymbolId(1): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/issue-7742/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/issue-7742-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/keyword-qualified-type/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/keyword-qualified-type-2-babel-7/input.ts
An interface can only extend an identifier/qualified-name with optional type arguments.
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["var"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/keyword-qualified-type-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/nested-extends-in-arrow-type-param/input.ts
Expected `,` but found `extends`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/nested-extends-in-arrow-type-param-babel-7/input.ts
Expected `,` but found `extends`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/nested-extends-in-arrow-type-return/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B", "C", "D", "E", "F", "G"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/regression/nested-extends-in-arrow-type-return-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B", "C", "D", "E", "F", "G"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/callable-class/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "C":
after transform: SymbolId(0): SymbolFlags(Class | Function | Ambient)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol span mismatch for "C":
after transform: SymbolId(0): Span { start: 14, end: 15 }
rebuilt        : SymbolId(0): Span { start: 29, end: 30 }
Symbol redeclarations mismatch for "C":
after transform: SymbolId(0): [Span { start: 14, end: 15 }, Span { start: 29, end: 30 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/callable-class-ambient/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["C"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/enum-block-scoped/input.ts
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/enum-block-scoped-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-declare-function-after/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-declare-function-before/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-enum-after/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Test":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-enum-after-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Test":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-enum-before/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Test":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-enum-before-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Test":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-func-in-declare-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(6)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["X"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-import-in-declare-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-interface-after/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-interface-before/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-namespace/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["N"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-type-after/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/export-type-before/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/function-type-before-declaration/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol span mismatch for "f":
after transform: SymbolId(0): Span { start: 9, end: 10 }
rebuilt        : SymbolId(0): Span { start: 29, end: 30 }
Symbol redeclarations mismatch for "f":
after transform: SymbolId(0): [Span { start: 9, end: 10 }, Span { start: 29, end: 30 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/function-type-before-declaration-optional-pattern/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol span mismatch for "f":
after transform: SymbolId(0): Span { start: 9, end: 10 }
rebuilt        : SymbolId(0): Span { start: 32, end: 33 }
Symbol redeclarations mismatch for "f":
after transform: SymbolId(0): [Span { start: 9, end: 10 }, Span { start: 32, end: 33 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/module-declaration-var/input.js
Bindings mismatch:
after transform: ScopeId(0): ["foo"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/module-declaration-var-2/input.js
Namespaces exporting non-const are not supported by Babel. Change to const or see: https://babeljs.io/docs/en/babel-plugin-transform-typescript

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-class-interface/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 6, end: 7 }, Span { start: 21, end: 22 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-const-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["X"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "X":
after transform: SymbolId(0): SymbolFlags(BlockScopedVariable | ConstVariable | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable | ConstVariable)
Symbol redeclarations mismatch for "X":
after transform: SymbolId(0): [Span { start: 6, end: 7 }, Span { start: 19, end: 20 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-constenum-constenum/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "Foo":
after transform: SymbolId(0): [Span { start: 11, end: 14 }, Span { start: 29, end: 32 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-constenum-constenum-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(ConstEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "Foo":
after transform: SymbolId(0): [Span { start: 11, end: 14 }, Span { start: 29, end: 32 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-enum-enum/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "Foo":
after transform: SymbolId(0): [Span { start: 5, end: 8 }, Span { start: 17, end: 20 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-enum-enum-babel-7/input.ts
Scope flags mismatch:
after transform: ScopeId(1): ScopeFlags(StrictMode)
rebuilt        : ScopeId(1): ScopeFlags(StrictMode | Function)
Scope flags mismatch:
after transform: ScopeId(2): ScopeFlags(StrictMode)
rebuilt        : ScopeId(2): ScopeFlags(StrictMode | Function)
Symbol flags mismatch for "Foo":
after transform: SymbolId(0): SymbolFlags(RegularEnum)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "Foo":
after transform: SymbolId(0): [Span { start: 5, end: 8 }, Span { start: 17, end: 20 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-function-interface/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Function | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 9, end: 10 }, Span { start: 26, end: 27 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-function-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Function | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 9, end: 10 }, Span { start: 21, end: 22 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-ambient-class/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["Something"]
rebuilt        : ScopeId(0): []
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-equals-var/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["M"]
rebuilt        : ScopeId(0): ["a"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "a":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(1): Span { start: 20, end: 21 }
rebuilt        : SymbolId(0): Span { start: 31, end: 32 }
Symbol redeclarations mismatch for "a":
after transform: SymbolId(1): [Span { start: 20, end: 21 }, Span { start: 31, end: 32 }]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["M"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-equals-var-babel-7/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["M"]
rebuilt        : ScopeId(0): ["a"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "a":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(1): Span { start: 20, end: 21 }
rebuilt        : SymbolId(0): Span { start: 31, end: 32 }
Symbol redeclarations mismatch for "a":
after transform: SymbolId(1): [Span { start: 20, end: 21 }, Span { start: 31, end: 32 }]
rebuilt        : SymbolId(0): []
Unresolved references mismatch:
after transform: ["M"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-let/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 16, end: 23 }
rebuilt        : SymbolId(1): Span { start: 104, end: 124 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 16, end: 23 }, Span { start: 104, end: 124 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 49, end: 50 }
rebuilt        : SymbolId(2): Span { start: 156, end: 160 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 49, end: 50 }, Span { start: 156, end: 160 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 81, end: 82 }
rebuilt        : SymbolId(3): Span { start: 170, end: 174 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 81, end: 82 }, Span { start: 170, end: 174 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-let-babel-7/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 16, end: 23 }
rebuilt        : SymbolId(1): Span { start: 104, end: 124 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 16, end: 23 }, Span { start: 104, end: 124 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 49, end: 50 }
rebuilt        : SymbolId(2): Span { start: 156, end: 160 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 49, end: 50 }, Span { start: 156, end: 160 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(BlockScopedVariable | Import)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 81, end: 82 }
rebuilt        : SymbolId(3): Span { start: 170, end: 174 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 81, end: 82 }, Span { start: 170, end: 174 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-type-let/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 21, end: 28 }
rebuilt        : SymbolId(1): Span { start: 119, end: 139 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 21, end: 28 }, Span { start: 119, end: 139 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 171, end: 175 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 59, end: 60 }, Span { start: 171, end: 175 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 96, end: 97 }
rebuilt        : SymbolId(3): Span { start: 185, end: 189 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 96, end: 97 }, Span { start: 185, end: 189 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-type-let-babel-7/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(1): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 21, end: 28 }
rebuilt        : SymbolId(1): Span { start: 119, end: 139 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 21, end: 28 }, Span { start: 119, end: 139 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(2): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 171, end: 175 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 59, end: 60 }, Span { start: 171, end: 175 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(BlockScopedVariable | TypeImport)
rebuilt        : SymbolId(3): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 96, end: 97 }
rebuilt        : SymbolId(3): Span { start: 185, end: 189 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 96, end: 97 }, Span { start: 185, end: 189 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-type-type/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-type-var/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 21, end: 28 }
rebuilt        : SymbolId(1): Span { start: 119, end: 139 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 21, end: 28 }, Span { start: 119, end: 139 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 171, end: 175 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 59, end: 60 }, Span { start: 171, end: 175 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(3): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 96, end: 97 }
rebuilt        : SymbolId(3): Span { start: 185, end: 189 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 96, end: 97 }, Span { start: 185, end: 189 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-type-var-babel-7/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 21, end: 28 }
rebuilt        : SymbolId(1): Span { start: 119, end: 139 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 21, end: 28 }, Span { start: 119, end: 139 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 59, end: 60 }
rebuilt        : SymbolId(2): Span { start: 171, end: 175 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 59, end: 60 }, Span { start: 171, end: 175 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(FunctionScopedVariable | TypeImport)
rebuilt        : SymbolId(3): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 96, end: 97 }
rebuilt        : SymbolId(3): Span { start: 185, end: 189 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 96, end: 97 }, Span { start: 185, end: 189 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-var/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 16, end: 23 }
rebuilt        : SymbolId(1): Span { start: 104, end: 124 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 16, end: 23 }, Span { start: 104, end: 124 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 49, end: 50 }
rebuilt        : SymbolId(2): Span { start: 156, end: 160 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 49, end: 50 }, Span { start: 156, end: 160 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(3): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 81, end: 82 }
rebuilt        : SymbolId(3): Span { start: 170, end: 174 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 81, end: 82 }, Span { start: 170, end: 174 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-import-var-babel-7/input.ts
Symbol flags mismatch for "Context":
after transform: SymbolId(1): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(1): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "Context":
after transform: SymbolId(1): Span { start: 16, end: 23 }
rebuilt        : SymbolId(1): Span { start: 104, end: 124 }
Symbol reference IDs mismatch for "Context":
after transform: SymbolId(1): [ReferenceId(0)]
rebuilt        : SymbolId(1): []
Symbol redeclarations mismatch for "Context":
after transform: SymbolId(1): [Span { start: 16, end: 23 }, Span { start: 104, end: 124 }]
rebuilt        : SymbolId(1): []
Symbol flags mismatch for "a":
after transform: SymbolId(2): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(2): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "a":
after transform: SymbolId(2): Span { start: 49, end: 50 }
rebuilt        : SymbolId(2): Span { start: 156, end: 160 }
Symbol reference IDs mismatch for "a":
after transform: SymbolId(2): [ReferenceId(2)]
rebuilt        : SymbolId(2): []
Symbol redeclarations mismatch for "a":
after transform: SymbolId(2): [Span { start: 49, end: 50 }, Span { start: 156, end: 160 }]
rebuilt        : SymbolId(2): []
Symbol flags mismatch for "b":
after transform: SymbolId(3): SymbolFlags(FunctionScopedVariable | Import)
rebuilt        : SymbolId(3): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "b":
after transform: SymbolId(3): Span { start: 81, end: 82 }
rebuilt        : SymbolId(3): Span { start: 170, end: 174 }
Symbol reference IDs mismatch for "b":
after transform: SymbolId(3): [ReferenceId(3)]
rebuilt        : SymbolId(3): []
Symbol redeclarations mismatch for "b":
after transform: SymbolId(3): [Span { start: 81, end: 82 }, Span { start: 170, end: 174 }]
rebuilt        : SymbolId(3): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-in-different-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-in-different-module-and-top-level/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["JSONSchema7", "foo", "fooBar"]
rebuilt        : ScopeId(0): ["foo", "fooBar"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3)]
rebuilt        : ScopeId(0): []
Symbol reference IDs mismatch for "fooBar":
after transform: SymbolId(1): [ReferenceId(1), ReferenceId(4)]
rebuilt        : SymbolId(0): [ReferenceId(0)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-in-nested-module/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-interface-class/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Class | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Class)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(0): Span { start: 21, end: 22 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 10, end: 11 }, Span { start: 21, end: 22 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-interface-function/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Function | Interface)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(0): Span { start: 24, end: 25 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 10, end: 11 }, Span { start: 24, end: 25 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-interface-interface/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-interface-let/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(BlockScopedVariable | Interface)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(0): Span { start: 19, end: 20 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 10, end: 11 }, Span { start: 19, end: 20 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-interface-var/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(FunctionScopedVariable | Interface)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 10, end: 11 }
rebuilt        : SymbolId(0): Span { start: 19, end: 20 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 10, end: 11 }, Span { start: 19, end: 20 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-let-interface/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(BlockScopedVariable | Interface)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 4, end: 5 }, Span { start: 17, end: 18 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-let-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["X"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "X":
after transform: SymbolId(0): SymbolFlags(BlockScopedVariable | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol redeclarations mismatch for "X":
after transform: SymbolId(0): [Span { start: 4, end: 5 }, Span { start: 17, end: 18 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-type-function/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(Function | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(Function)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 5, end: 6 }
rebuilt        : SymbolId(0): Span { start: 26, end: 27 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 5, end: 6 }, Span { start: 26, end: 27 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-type-let/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(BlockScopedVariable | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(BlockScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 5, end: 6 }
rebuilt        : SymbolId(0): Span { start: 21, end: 22 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 5, end: 6 }, Span { start: 21, end: 22 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-type-var/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(FunctionScopedVariable | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol span mismatch for "A":
after transform: SymbolId(0): Span { start: 5, end: 6 }
rebuilt        : SymbolId(0): Span { start: 21, end: 22 }
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 5, end: 6 }, Span { start: 21, end: 22 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-var-interface/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["A"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "A":
after transform: SymbolId(0): SymbolFlags(FunctionScopedVariable | Interface)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "A":
after transform: SymbolId(0): [Span { start: 4, end: 5 }, Span { start: 17, end: 18 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/scope/redeclaration-var-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): []
rebuilt        : ScopeId(0): ["X"]
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Symbol flags mismatch for "X":
after transform: SymbolId(0): SymbolFlags(FunctionScopedVariable | TypeAlias)
rebuilt        : SymbolId(0): SymbolFlags(FunctionScopedVariable)
Symbol redeclarations mismatch for "X":
after transform: SymbolId(0): [Span { start: 4, end: 5 }, Span { start: 17, end: 18 }]
rebuilt        : SymbolId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/anonymous-function-generator/input.ts
Unresolved references mismatch:
after transform: ["Generator"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/anonymous-function-generator-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Generator"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/brace-is-block/input.tsx
Unresolved references mismatch:
after transform: ["D", "T"]
rebuilt        : ["D"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/brace-is-block-babel-7/input.tsx
Unresolved references mismatch:
after transform: ["D", "T"]
rebuilt        : ["D"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/type-arguments/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["C", "T", "f"]
rebuilt        : ["C", "f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/type-arguments-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["C", "T", "f"]
rebuilt        : ["C", "f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/type-parameters/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/tsx/type-parameters-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(1): [ScopeId(2)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/declare/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/export/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/generic/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/generic-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/generic-complex-tokens-true/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/generic-complex-tokens-true-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-alias/plain/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/call/input.ts
Unresolved references mismatch:
after transform: ["T", "U", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/call-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "U", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/call-optional-chain/input.ts
Unresolved references mismatch:
after transform: ["Q", "W", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/call-optional-chain-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Q", "W", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-asi/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-asi-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6), ScopeId(7)]
rebuilt        : ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(6), ScopeId(8)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-binary-operator/input.ts
Unresolved references mismatch:
after transform: ["a", "b", "c"]
rebuilt        : ["a", "c"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-binary-operator-babel-7/input.ts
Unresolved references mismatch:
after transform: ["a", "b", "c"]
rebuilt        : ["a", "c"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-optional-chain/input.ts
Unresolved references mismatch:
after transform: ["a", "c"]
rebuilt        : ["a"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/instantiation-expression-optional-chain-babel-7/input.ts
Unresolved references mismatch:
after transform: ["a", "c"]
rebuilt        : ["a"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new/input.ts
Unresolved references mismatch:
after transform: ["C", "T", "U"]
rebuilt        : ["C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-babel-7/input.ts
Unresolved references mismatch:
after transform: ["C", "T", "U"]
rebuilt        : ["C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-false-positive-3/input.ts
Unresolved references mismatch:
after transform: ["A", "B", "C"]
rebuilt        : ["A", "C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-false-positive-3-babel-7/input.ts
Unresolved references mismatch:
after transform: ["A", "B", "C"]
rebuilt        : ["A", "C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-without-arguments/input.ts
Unresolved references mismatch:
after transform: ["A", "T"]
rebuilt        : ["A"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-without-arguments-asi/input.ts
Unresolved references mismatch:
after transform: ["A", "T"]
rebuilt        : ["A"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-without-arguments-asi-babel-7/input.ts
Unresolved references mismatch:
after transform: ["A", "T"]
rebuilt        : ["A"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/new-without-arguments-babel-7/input.ts
Unresolved references mismatch:
after transform: ["A", "T"]
rebuilt        : ["A"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/tagged-template/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/tagged-template-babel-7/input.ts
Unresolved references mismatch:
after transform: ["T", "f"]
rebuilt        : ["f"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/tagged-template-no-asi/input.ts
Unresolved references mismatch:
after transform: ["C", "T"]
rebuilt        : ["C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments/tagged-template-no-asi-babel-7/input.ts
Unresolved references mismatch:
after transform: ["C", "T"]
rebuilt        : ["C"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/after-bit-shift/input.ts
Unresolved references mismatch:
after transform: ["T", "f", "x"]
rebuilt        : ["f", "x"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/call-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/call-expression-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/class-heritage/input.ts
Expected `{` but found `<<`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/class-heritage-babel-7/input.ts
Expected `{` but found `<<`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/decorator-call-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/decorator-call-expression-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/interface-heritage/input.ts
Expected `{` but found `<<`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/jsx-opening-element/input.tsx
Unexpected token

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/jsx-opening-element-babel-7/input.tsx
Unexpected token

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/new-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like/new-expression-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/after-bit-shift/input.ts
Unresolved references mismatch:
after transform: ["T", "f", "x"]
rebuilt        : ["f", "x"]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/call-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/class-heritage/input.ts
Expected `{` but found `<<`

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/decorator-call-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/jsx-opening-element/input.tsx
Unexpected token

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-arguments-bit-shift-left-like-babel-7/new-expression/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/export-type-only-as-as-keyword/input.ts
Unresolved references mismatch:
after transform: ["as"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-basic/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "C"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-named-and-named-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["Component", "ComponentProps"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-named-type/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["type"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-named-type-as-as/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["as"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-type-only-and-export/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["Foo1"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-type-only-named-as/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["as"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/type-only-import-export-specifiers/import-type-only-named-keywords-as/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["a", "b"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/conditional/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/conditional-infer/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/conditional-infer-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/conditional-infer-parenthesized-expressions-true/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/const-type-parameters/input.ts
Identifier `method` has already been declared
Identifier `method` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/const-type-parameters-babel-7/input.ts
Identifier `method` has already been declared
Identifier `method` has already been declared

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-generic/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-generic-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-in-generic/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-in-generic-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-with-this/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/function-with-this-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/import-type-declaration/input.ts
Bindings mismatch:
after transform: ScopeId(0): ["A", "B", "T", "Types"]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/import-type-dynamic/input.ts
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/import-type-dynamic-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Y", "foo"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/indexed/input.ts
Unresolved references mismatch:
after transform: ["K", "T"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/infer-with-constraints/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["MustBeNumber"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/infer-with-constraints-and-conditional-types/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/infer-with-constraints-and-conditional-types-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/infer-with-constraints-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5), ScopeId(7), ScopeId(9), ScopeId(11), ScopeId(13)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["MustBeNumber"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/intrinsic-identifier/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): [ScopeId(1)]
Scope children mismatch:
after transform: ScopeId(2): [ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(1): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/intrinsic-keyword/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/intrinsic-keyword-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/literal-string-2/input.ts
Unresolved references mismatch:
after transform: ["bar"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/literal-string-2-babel-7/input.ts
Unresolved references mismatch:
after transform: ["bar"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/mapped/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/mapped-as/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Exclude", "NewKeyType"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/mapped-as-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(3), ScopeId(5)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["Exclude", "NewKeyType"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/mapped-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized-indexed-access/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized-indexed-access-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized-object/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized-object-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/parenthesized-object-parenthesized-expressions-true/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/pattern-parameters/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/pattern-parameters-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/reference/input.ts
Unresolved references mismatch:
after transform: ["T"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/reference-generic/input.ts
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/reference-generic-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/reference-generic-nested/input.ts
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/reference-generic-nested-babel-7/input.ts
Unresolved references mismatch:
after transform: ["Array"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-keyword-labeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-keyword-labeled-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-labeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-labeled-after-unlabeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-labeled-before-unlabeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-unlabeled-spread-after-labeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/tuple-unlabeled-spread-before-labeled/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["A", "B"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/type-literal-get-set/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/type-literal-get-set-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/type-operator/input.ts
Unresolved references mismatch:
after transform: ["T"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof/input.ts
Unresolved references mismatch:
after transform: ["y"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-this/input.ts
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-this-babel-7/input.ts
Unresolved references mismatch:
after transform: ["this"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-type-asi-false-parameters/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["a"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-type-asi-false-parameters-babel-7/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []
Unresolved references mismatch:
after transform: ["a"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-type-parameters/input.ts
Unresolved references mismatch:
after transform: ["w", "y"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/typeof-type-parameters-babel-7/input.ts
Unresolved references mismatch:
after transform: ["w", "y"]
rebuilt        : []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/types-named-abstract/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types/union-intersection/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1), ScopeId(2), ScopeId(3), ScopeId(4), ScopeId(5), ScopeId(6)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types-arrow-function/object-pattern-with-template/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

semantic Error: tasks/coverage/babel/packages/babel-parser/test/fixtures/typescript/types-arrow-function-babel-7/object-pattern-with-template/input.ts
Scope children mismatch:
after transform: ScopeId(0): [ScopeId(1)]
rebuilt        : ScopeId(0): []

