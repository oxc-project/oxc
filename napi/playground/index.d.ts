/* auto-generated by NAPI-RS */
/* eslint-disable */
export interface Comment {
  type: 'Line' | 'Block'
  value: string
  start: number
  end: number
}

export interface ErrorLabel {
  message?: string
  start: number
  end: number
}

export interface OxcError {
  severity: Severity
  message: string
  labels: Array<ErrorLabel>
  helpMessage?: string
  codeframe?: string
}

export declare const enum Severity {
  Error = 'Error',
  Warning = 'Warning',
  Advice = 'Advice'
}
export declare class Oxc {
  ast: object
  astJson: string
  ir: string
  controlFlowGraph: string
  symbolsJson: string
  scopeText: string
  codegenText: string
  codegenSourcemapText?: string
  formattedText: string
  formatterFormattedText: string
  formatterIrText: string
  constructor()
  getDiagnostics(): Array<OxcError>
  getComments(): Array<Comment>
  /**
   * # Errors
   * Serde serialization error
   */
  run(sourceText: string, options: OxcOptions): void
}

export interface OxcCodegenOptions {
  normal: boolean
  jsdoc: boolean
  annotation: boolean
  legal: boolean
}

export interface OxcCompressOptions {

}

export interface OxcControlFlowOptions {
  verbose?: boolean
}

export interface OxcDefineOptions {
  /** Map of variable name to value for replacement */
  define: Record<string, string>
}

export interface OxcInjectOptions {
  /** Map of variable name to module source or [source, specifier] */
  inject: Record<string, string | [string, string]>
}

export interface OxcIsolatedDeclarationsOptions {
  stripInternal: boolean
}

export interface OxcLinterOptions {
  config?: string
}

export interface OxcMangleOptions {
  topLevel: boolean
  keepNames: boolean
}

export interface OxcOptions {
  run: OxcRunOptions
  parser: OxcParserOptions
  linter?: OxcLinterOptions
  transformer?: OxcTransformerOptions
  isolatedDeclarations?: OxcIsolatedDeclarationsOptions
  codegen?: OxcCodegenOptions
  compress?: OxcCompressOptions
  mangle?: OxcMangleOptions
  controlFlow?: OxcControlFlowOptions
  inject?: OxcInjectOptions
  define?: OxcDefineOptions
}

export interface OxcParserOptions {
  extension: string
  allowReturnOutsideFunction: boolean
  preserveParens: boolean
  allowV8Intrinsics: boolean
  semanticErrors: boolean
}

export interface OxcRunOptions {
  lint: boolean
  formatter: boolean
  formatterIr: boolean
  transform: boolean
  isolatedDeclarations: boolean
  whitespace: boolean
  compress: boolean
  mangle: boolean
  scope: boolean
  symbol: boolean
  cfg: boolean
}

export interface OxcTransformerOptions {
  target?: string
  useDefineForClassFields: boolean
  experimentalDecorators: boolean
  emitDecoratorMetadata: boolean
}
